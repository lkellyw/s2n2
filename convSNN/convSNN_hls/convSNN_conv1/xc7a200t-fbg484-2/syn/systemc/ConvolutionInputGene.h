// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ConvolutionInputGene_HH_
#define _ConvolutionInputGene_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ConvolutionInputGbkb.h"

namespace ap_rtl {

struct ConvolutionInputGene : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<3> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<3> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<32> > numReps_dout;
    sc_in< sc_logic > numReps_empty_n;
    sc_out< sc_logic > numReps_read;


    // Module declarations
    ConvolutionInputGene(sc_module_name name);
    SC_HAS_PROCESS(ConvolutionInputGene);

    ~ConvolutionInputGene();

    sc_trace_file* mVcdFile;

    ConvolutionInputGbkb* inputBuf_0_V_U;
    ConvolutionInputGbkb* inputBuf_1_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln199_reg_835;
    sc_signal< sc_lv<1> > and_ln245_reg_870;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_lv<1> > icmp_ln215_reg_839;
    sc_signal< sc_logic > numReps_blk_n;
    sc_signal< sc_lv<39> > indvar_flatten_reg_197;
    sc_signal< sc_lv<7> > i_0_i_reg_208;
    sc_signal< sc_lv<32> > reg_286;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op151_write_state4;
    sc_signal< bool > ap_predicate_op154_read_state4;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln196_fu_319_p2;
    sc_signal< sc_lv<1> > icmp_ln199_fu_355_p2;
    sc_signal< sc_lv<1> > and_ln245_fu_521_p2;
    sc_signal< sc_lv<32> > numReps_read_reg_816;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<39> > bound_fu_313_p2;
    sc_signal< sc_lv<39> > bound_reg_821;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<39> > add_ln196_fu_324_p2;
    sc_signal< sc_lv<1> > icmp_ln215_fu_364_p2;
    sc_signal< sc_lv<32> > k_y_1_load_reg_843;
    sc_signal< sc_lv<1> > icmp_ln252_fu_268_p2;
    sc_signal< sc_lv<1> > icmp_ln252_reg_874;
    sc_signal< sc_lv<1> > icmp_ln205_fu_274_p2;
    sc_signal< sc_lv<1> > icmp_ln205_reg_879;
    sc_signal< sc_lv<7> > i_fu_624_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_lv<4> > inputBuf_0_V_address0;
    sc_signal< sc_logic > inputBuf_0_V_ce0;
    sc_signal< sc_lv<3> > inputBuf_0_V_q0;
    sc_signal< sc_lv<4> > inputBuf_0_V_address1;
    sc_signal< sc_logic > inputBuf_0_V_ce1;
    sc_signal< sc_logic > inputBuf_0_V_we1;
    sc_signal< sc_lv<4> > inputBuf_1_V_address0;
    sc_signal< sc_logic > inputBuf_1_V_ce0;
    sc_signal< sc_lv<3> > inputBuf_1_V_q0;
    sc_signal< sc_lv<4> > inputBuf_1_V_address1;
    sc_signal< sc_logic > inputBuf_1_V_ce1;
    sc_signal< sc_logic > inputBuf_1_V_we1;
    sc_signal< sc_lv<64> > zext_ln221_fu_400_p1;
    sc_signal< sc_lv<64> > zext_ln248_fu_654_p1;
    sc_signal< sc_lv<64> > zext_ln202_fu_699_p1;
    sc_signal< sc_lv<32> > read_block_2_fu_68;
    sc_signal< sc_lv<32> > select_ln197_fu_342_p3;
    sc_signal< sc_lv<32> > zext_ln252_fu_549_p1;
    sc_signal< sc_lv<32> > read_block_fu_607_p2;
    sc_signal< sc_lv<32> > ofm_y_1_i_fu_72;
    sc_signal< sc_lv<32> > select_ln236_1_fu_497_p3;
    sc_signal< sc_lv<1> > icmp_ln224_fu_412_p2;
    sc_signal< sc_lv<1> > icmp_ln227_fu_429_p2;
    sc_signal< sc_lv<1> > icmp_ln230_fu_443_p2;
    sc_signal< sc_lv<1> > icmp_ln233_fu_463_p2;
    sc_signal< sc_lv<32> > ofm_x_1_fu_76;
    sc_signal< sc_lv<32> > ofm_x_fu_457_p2;
    sc_signal< sc_lv<32> > k_y_1_fu_80;
    sc_signal< sc_lv<32> > k_y_fu_382_p2;
    sc_signal< sc_lv<32> > inp_1_fu_84;
    sc_signal< sc_lv<32> > select_ln236_fu_489_p3;
    sc_signal< sc_lv<32> > inp_fu_591_p2;
    sc_signal< sc_lv<32> > k_x_1_fu_88;
    sc_signal< sc_lv<32> > k_x_fu_423_p2;
    sc_signal< sc_lv<32> > count_simd_1_fu_92;
    sc_signal< sc_lv<32> > count_simd_fu_406_p2;
    sc_signal< sc_lv<32> > current_block_write_5_fu_96;
    sc_signal< sc_lv<32> > current_block_write_9_fu_687_p3;
    sc_signal< sc_lv<32> > current_block_write_6_fu_721_p3;
    sc_signal< sc_lv<32> > current_line_2_fu_100;
    sc_signal< sc_lv<32> > select_ln252_fu_533_p3;
    sc_signal< sc_lv<32> > grp_fu_262_p2;
    sc_signal< sc_lv<32> > counter_internal_blo_fu_104;
    sc_signal< sc_lv<32> > select_ln264_fu_578_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > trunc_ln321_1_fu_660_p1;
    sc_signal< sc_lv<1> > trunc_ln321_fu_705_p1;
    sc_signal< sc_lv<32> > bound_fu_313_p0;
    sc_signal< sc_lv<1> > icmp_ln197_fu_336_p2;
    sc_signal< sc_lv<32> > add_ln220_fu_388_p2;
    sc_signal< sc_lv<32> > current_line_in_bloc_fu_394_p2;
    sc_signal< sc_lv<32> > ofm_y_fu_477_p2;
    sc_signal< sc_lv<1> > icmp_ln236_fu_483_p2;
    sc_signal< sc_lv<1> > icmp_ln245_fu_515_p2;
    sc_signal< sc_lv<4> > trunc_ln197_fu_351_p1;
    sc_signal< sc_lv<4> > add_ln255_fu_527_p2;
    sc_signal< sc_lv<4> > read_block_3_fu_541_p3;
    sc_signal< sc_lv<32> > counter_internal_blo_3_fu_566_p2;
    sc_signal< sc_lv<1> > icmp_ln264_fu_572_p2;
    sc_signal< sc_lv<7> > add_ln197_fu_618_p2;
    sc_signal< sc_lv<1> > trunc_ln216_1_fu_635_p1;
    sc_signal< sc_lv<1> > trunc_ln216_fu_632_p1;
    sc_signal< sc_lv<1> > xor_ln221_fu_639_p2;
    sc_signal< sc_lv<32> > current_block_write_7_fu_667_p2;
    sc_signal< sc_lv<1> > icmp_ln257_fu_673_p2;
    sc_signal< sc_lv<32> > current_block_write_8_fu_679_p3;
    sc_signal< sc_lv<32> > current_block_write_fu_709_p2;
    sc_signal< sc_lv<1> > icmp_ln208_fu_715_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0;
    sc_signal< bool > ap_predicate_op63_load_state3;
    sc_signal< bool > ap_enable_operation_63;
    sc_signal< bool > ap_enable_state3_pp0_iter0_stage0;
    sc_signal< bool > ap_predicate_op148_load_state4;
    sc_signal< bool > ap_enable_operation_148;
    sc_signal< bool > ap_enable_state4_pp0_iter1_stage0;
    sc_signal< bool > ap_predicate_op160_store_state4;
    sc_signal< bool > ap_enable_operation_160;
    sc_signal< bool > ap_predicate_op181_store_state4;
    sc_signal< bool > ap_enable_operation_181;
    sc_signal< bool > ap_predicate_op64_load_state3;
    sc_signal< bool > ap_enable_operation_64;
    sc_signal< bool > ap_predicate_op149_load_state4;
    sc_signal< bool > ap_enable_operation_149;
    sc_signal< bool > ap_predicate_op162_store_state4;
    sc_signal< bool > ap_enable_operation_162;
    sc_signal< bool > ap_predicate_op183_store_state4;
    sc_signal< bool > ap_enable_operation_183;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<39> > bound_fu_313_p00;
    sc_signal< bool > ap_condition_337;
    sc_signal< bool > ap_condition_51;
    sc_signal< bool > ap_condition_348;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<39> ap_const_lv39_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<39> ap_const_lv39_6E;
    static const sc_lv<39> ap_const_lv39_1;
    static const sc_lv<7> ap_const_lv7_6E;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln196_fu_324_p2();
    void thread_add_ln197_fu_618_p2();
    void thread_add_ln220_fu_388_p2();
    void thread_add_ln255_fu_527_p2();
    void thread_and_ln245_fu_521_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_337();
    void thread_ap_condition_348();
    void thread_ap_condition_51();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_operation_148();
    void thread_ap_enable_operation_149();
    void thread_ap_enable_operation_160();
    void thread_ap_enable_operation_162();
    void thread_ap_enable_operation_181();
    void thread_ap_enable_operation_183();
    void thread_ap_enable_operation_63();
    void thread_ap_enable_operation_64();
    void thread_ap_enable_pp0();
    void thread_ap_enable_state3_pp0_iter0_stage0();
    void thread_ap_enable_state4_pp0_iter1_stage0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op148_load_state4();
    void thread_ap_predicate_op149_load_state4();
    void thread_ap_predicate_op151_write_state4();
    void thread_ap_predicate_op154_read_state4();
    void thread_ap_predicate_op160_store_state4();
    void thread_ap_predicate_op162_store_state4();
    void thread_ap_predicate_op181_store_state4();
    void thread_ap_predicate_op183_store_state4();
    void thread_ap_predicate_op63_load_state3();
    void thread_ap_predicate_op64_load_state3();
    void thread_ap_ready();
    void thread_bound_fu_313_p0();
    void thread_bound_fu_313_p00();
    void thread_bound_fu_313_p2();
    void thread_count_simd_fu_406_p2();
    void thread_counter_internal_blo_3_fu_566_p2();
    void thread_current_block_write_6_fu_721_p3();
    void thread_current_block_write_7_fu_667_p2();
    void thread_current_block_write_8_fu_679_p3();
    void thread_current_block_write_9_fu_687_p3();
    void thread_current_block_write_fu_709_p2();
    void thread_current_line_in_bloc_fu_394_p2();
    void thread_grp_fu_262_p2();
    void thread_i_fu_624_p3();
    void thread_icmp_ln196_fu_319_p2();
    void thread_icmp_ln197_fu_336_p2();
    void thread_icmp_ln199_fu_355_p2();
    void thread_icmp_ln205_fu_274_p2();
    void thread_icmp_ln208_fu_715_p2();
    void thread_icmp_ln215_fu_364_p2();
    void thread_icmp_ln224_fu_412_p2();
    void thread_icmp_ln227_fu_429_p2();
    void thread_icmp_ln230_fu_443_p2();
    void thread_icmp_ln233_fu_463_p2();
    void thread_icmp_ln236_fu_483_p2();
    void thread_icmp_ln245_fu_515_p2();
    void thread_icmp_ln252_fu_268_p2();
    void thread_icmp_ln257_fu_673_p2();
    void thread_icmp_ln264_fu_572_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_inp_fu_591_p2();
    void thread_inputBuf_0_V_address0();
    void thread_inputBuf_0_V_address1();
    void thread_inputBuf_0_V_ce0();
    void thread_inputBuf_0_V_ce1();
    void thread_inputBuf_0_V_we1();
    void thread_inputBuf_1_V_address0();
    void thread_inputBuf_1_V_address1();
    void thread_inputBuf_1_V_ce0();
    void thread_inputBuf_1_V_ce1();
    void thread_inputBuf_1_V_we1();
    void thread_k_x_fu_423_p2();
    void thread_k_y_fu_382_p2();
    void thread_numReps_blk_n();
    void thread_numReps_read();
    void thread_ofm_x_fu_457_p2();
    void thread_ofm_y_fu_477_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_read_block_3_fu_541_p3();
    void thread_read_block_fu_607_p2();
    void thread_select_ln197_fu_342_p3();
    void thread_select_ln236_1_fu_497_p3();
    void thread_select_ln236_fu_489_p3();
    void thread_select_ln252_fu_533_p3();
    void thread_select_ln264_fu_578_p3();
    void thread_trunc_ln197_fu_351_p1();
    void thread_trunc_ln216_1_fu_635_p1();
    void thread_trunc_ln216_fu_632_p1();
    void thread_trunc_ln321_1_fu_660_p1();
    void thread_trunc_ln321_fu_705_p1();
    void thread_xor_ln221_fu_639_p2();
    void thread_zext_ln202_fu_699_p1();
    void thread_zext_ln221_fu_400_p1();
    void thread_zext_ln248_fu_654_p1();
    void thread_zext_ln252_fu_549_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
