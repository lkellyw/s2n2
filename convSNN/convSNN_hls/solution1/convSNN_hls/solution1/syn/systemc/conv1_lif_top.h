// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv1_lif_top_HH_
#define _conv1_lif_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv1_lif_top_entry3.h"
#include "ConvolutionInputGene.h"
#include "Block_ZN8ap_fixedIL.h"
#include "Matrix_Vector_Activa.h"
#include "fifo_w32_d2_A.h"
#include "fifo_w3_d2_A.h"
#include "start_for_Block_ZJfO.h"

namespace ap_rtl {

struct conv1_lif_top : public sc_module {
    // Port declarations 13
    sc_in< sc_lv<3> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<8> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<32> > numReps;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    conv1_lif_top(sc_module_name name);
    SC_HAS_PROCESS(conv1_lif_top);

    ~conv1_lif_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv1_lif_top_entry3* conv1_lif_top_entry3_U0;
    ConvolutionInputGene* ConvolutionInputGene_U0;
    Block_ZN8ap_fixedIL* Block_ZN8ap_fixedIL_U0;
    Matrix_Vector_Activa* Matrix_Vector_Activa_U0;
    fifo_w32_d2_A* numReps_c_U;
    fifo_w32_d2_A* numReps_c8_U;
    fifo_w3_d2_A* convInp_V_V_U;
    fifo_w32_d2_A* shl_ln124_loc_channe_U;
    start_for_Block_ZJfO* start_for_Block_ZJfO_U;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_ap_start;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_ap_done;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_ap_continue;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_ap_idle;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_ap_ready;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_start_out;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_start_write;
    sc_signal< sc_lv<32> > conv1_lif_top_entry3_U0_numReps_out_din;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_numReps_out_write;
    sc_signal< sc_lv<32> > conv1_lif_top_entry3_U0_numReps_out1_din;
    sc_signal< sc_logic > conv1_lif_top_entry3_U0_numReps_out1_write;
    sc_signal< sc_logic > ConvolutionInputGene_U0_ap_start;
    sc_signal< sc_logic > ConvolutionInputGene_U0_ap_done;
    sc_signal< sc_logic > ConvolutionInputGene_U0_ap_continue;
    sc_signal< sc_logic > ConvolutionInputGene_U0_ap_idle;
    sc_signal< sc_logic > ConvolutionInputGene_U0_ap_ready;
    sc_signal< sc_logic > ConvolutionInputGene_U0_in_V_V_read;
    sc_signal< sc_lv<3> > ConvolutionInputGene_U0_out_V_V_din;
    sc_signal< sc_logic > ConvolutionInputGene_U0_out_V_V_write;
    sc_signal< sc_logic > ConvolutionInputGene_U0_numReps_read;
    sc_signal< sc_logic > Block_ZN8ap_fixedIL_U0_ap_start;
    sc_signal< sc_logic > Block_ZN8ap_fixedIL_U0_ap_done;
    sc_signal< sc_logic > Block_ZN8ap_fixedIL_U0_ap_continue;
    sc_signal< sc_logic > Block_ZN8ap_fixedIL_U0_ap_idle;
    sc_signal< sc_logic > Block_ZN8ap_fixedIL_U0_ap_ready;
    sc_signal< sc_logic > Block_ZN8ap_fixedIL_U0_numReps_read;
    sc_signal< sc_lv<32> > Block_ZN8ap_fixedIL_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_shl_ln124_loc_channe;
    sc_signal< sc_logic > shl_ln124_loc_channe_full_n;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_start;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_done;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_continue;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_idle;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_ready;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_in_V_V_read;
    sc_signal< sc_lv<8> > Matrix_Vector_Activa_U0_out_V_V_din;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_out_V_V_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > numReps_c_full_n;
    sc_signal< sc_lv<32> > numReps_c_dout;
    sc_signal< sc_logic > numReps_c_empty_n;
    sc_signal< sc_logic > numReps_c8_full_n;
    sc_signal< sc_lv<32> > numReps_c8_dout;
    sc_signal< sc_logic > numReps_c8_empty_n;
    sc_signal< sc_logic > convInp_V_V_full_n;
    sc_signal< sc_lv<3> > convInp_V_V_dout;
    sc_signal< sc_logic > convInp_V_V_empty_n;
    sc_signal< sc_lv<32> > shl_ln124_loc_channe_dout;
    sc_signal< sc_logic > shl_ln124_loc_channe_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_conv1_lif_top_entry3_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_conv1_lif_top_entry3_U0_ap_ready;
    sc_signal< sc_lv<2> > conv1_lif_top_entry3_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_ConvolutionInputGene_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_ConvolutionInputGene_U0_ap_ready;
    sc_signal< sc_lv<2> > ConvolutionInputGene_U0_ap_ready_count;
    sc_signal< sc_lv<1> > start_for_Block_ZN8ap_fixedIL_U0_din;
    sc_signal< sc_logic > start_for_Block_ZN8ap_fixedIL_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Block_ZN8ap_fixedIL_U0_dout;
    sc_signal< sc_logic > start_for_Block_ZN8ap_fixedIL_U0_empty_n;
    sc_signal< sc_logic > ConvolutionInputGene_U0_start_full_n;
    sc_signal< sc_logic > ConvolutionInputGene_U0_start_write;
    sc_signal< sc_logic > Block_ZN8ap_fixedIL_U0_start_full_n;
    sc_signal< sc_logic > Block_ZN8ap_fixedIL_U0_start_write;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_start_full_n;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Block_ZN8ap_fixedIL_U0_ap_continue();
    void thread_Block_ZN8ap_fixedIL_U0_ap_start();
    void thread_Block_ZN8ap_fixedIL_U0_start_full_n();
    void thread_Block_ZN8ap_fixedIL_U0_start_write();
    void thread_ConvolutionInputGene_U0_ap_continue();
    void thread_ConvolutionInputGene_U0_ap_start();
    void thread_ConvolutionInputGene_U0_start_full_n();
    void thread_ConvolutionInputGene_U0_start_write();
    void thread_Matrix_Vector_Activa_U0_ap_continue();
    void thread_Matrix_Vector_Activa_U0_ap_start();
    void thread_Matrix_Vector_Activa_U0_start_full_n();
    void thread_Matrix_Vector_Activa_U0_start_write();
    void thread_ap_channel_done_shl_ln124_loc_channe();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_ConvolutionInputGene_U0_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_conv1_lif_top_entry3_U0_ap_ready();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_conv1_lif_top_entry3_U0_ap_continue();
    void thread_conv1_lif_top_entry3_U0_ap_start();
    void thread_in_V_V_read();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_start_for_Block_ZN8ap_fixedIL_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
