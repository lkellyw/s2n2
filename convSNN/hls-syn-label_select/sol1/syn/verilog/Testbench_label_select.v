// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Testbench_label_select,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.430000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1270,HLS_SYN_LUT=1795,HLS_VERSION=2020_1}" *)

module Testbench_label_select (
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


input  [15:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [3:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    StreamingDataWidthCo_U0_ap_start;
wire    StreamingDataWidthCo_U0_ap_done;
wire    StreamingDataWidthCo_U0_ap_continue;
wire    StreamingDataWidthCo_U0_ap_idle;
wire    StreamingDataWidthCo_U0_ap_ready;
wire    StreamingDataWidthCo_U0_start_out;
wire    StreamingDataWidthCo_U0_start_write;
wire    StreamingDataWidthCo_U0_in_V_V_read;
wire   [79:0] StreamingDataWidthCo_U0_out_V_V_din;
wire    StreamingDataWidthCo_U0_out_V_V_write;
wire   [31:0] StreamingDataWidthCo_U0_numReps_out_din;
wire    StreamingDataWidthCo_U0_numReps_out_write;
wire    LabelSelect_Batch_U0_ap_start;
wire    LabelSelect_Batch_U0_ap_done;
wire    LabelSelect_Batch_U0_ap_continue;
wire    LabelSelect_Batch_U0_ap_idle;
wire    LabelSelect_Batch_U0_ap_ready;
wire    LabelSelect_Batch_U0_in_V_V_read;
wire   [3:0] LabelSelect_Batch_U0_out_V_V_din;
wire    LabelSelect_Batch_U0_out_V_V_write;
wire    LabelSelect_Batch_U0_numReps_read;
wire    ap_sync_continue;
wire    wa_input_V_V_full_n;
wire   [79:0] wa_input_V_V_dout;
wire    wa_input_V_V_empty_n;
wire    numReps_c_full_n;
wire   [31:0] numReps_c_dout;
wire    numReps_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_LabelSelect_Batch_U0_din;
wire    start_for_LabelSelect_Batch_U0_full_n;
wire   [0:0] start_for_LabelSelect_Batch_U0_dout;
wire    start_for_LabelSelect_Batch_U0_empty_n;
wire    LabelSelect_Batch_U0_start_full_n;
wire    LabelSelect_Batch_U0_start_write;

StreamingDataWidthCo StreamingDataWidthCo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(StreamingDataWidthCo_U0_ap_start),
    .start_full_n(start_for_LabelSelect_Batch_U0_full_n),
    .ap_done(StreamingDataWidthCo_U0_ap_done),
    .ap_continue(StreamingDataWidthCo_U0_ap_continue),
    .ap_idle(StreamingDataWidthCo_U0_ap_idle),
    .ap_ready(StreamingDataWidthCo_U0_ap_ready),
    .start_out(StreamingDataWidthCo_U0_start_out),
    .start_write(StreamingDataWidthCo_U0_start_write),
    .in_V_V_dout(in_V_V_dout),
    .in_V_V_empty_n(in_V_V_empty_n),
    .in_V_V_read(StreamingDataWidthCo_U0_in_V_V_read),
    .out_V_V_din(StreamingDataWidthCo_U0_out_V_V_din),
    .out_V_V_full_n(wa_input_V_V_full_n),
    .out_V_V_write(StreamingDataWidthCo_U0_out_V_V_write),
    .numReps(numReps),
    .numReps_out_din(StreamingDataWidthCo_U0_numReps_out_din),
    .numReps_out_full_n(numReps_c_full_n),
    .numReps_out_write(StreamingDataWidthCo_U0_numReps_out_write)
);

LabelSelect_Batch LabelSelect_Batch_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(LabelSelect_Batch_U0_ap_start),
    .ap_done(LabelSelect_Batch_U0_ap_done),
    .ap_continue(LabelSelect_Batch_U0_ap_continue),
    .ap_idle(LabelSelect_Batch_U0_ap_idle),
    .ap_ready(LabelSelect_Batch_U0_ap_ready),
    .in_V_V_dout(wa_input_V_V_dout),
    .in_V_V_empty_n(wa_input_V_V_empty_n),
    .in_V_V_read(LabelSelect_Batch_U0_in_V_V_read),
    .out_V_V_din(LabelSelect_Batch_U0_out_V_V_din),
    .out_V_V_full_n(out_V_V_full_n),
    .out_V_V_write(LabelSelect_Batch_U0_out_V_V_write),
    .numReps_dout(numReps_c_dout),
    .numReps_empty_n(numReps_c_empty_n),
    .numReps_read(LabelSelect_Batch_U0_numReps_read)
);

fifo_w80_d2_A wa_input_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(StreamingDataWidthCo_U0_out_V_V_din),
    .if_full_n(wa_input_V_V_full_n),
    .if_write(StreamingDataWidthCo_U0_out_V_V_write),
    .if_dout(wa_input_V_V_dout),
    .if_empty_n(wa_input_V_V_empty_n),
    .if_read(LabelSelect_Batch_U0_in_V_V_read)
);

fifo_w32_d2_A numReps_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(StreamingDataWidthCo_U0_numReps_out_din),
    .if_full_n(numReps_c_full_n),
    .if_write(StreamingDataWidthCo_U0_numReps_out_write),
    .if_dout(numReps_c_dout),
    .if_empty_n(numReps_c_empty_n),
    .if_read(LabelSelect_Batch_U0_numReps_read)
);

start_for_LabelSecud start_for_LabelSecud_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_LabelSelect_Batch_U0_din),
    .if_full_n(start_for_LabelSelect_Batch_U0_full_n),
    .if_write(StreamingDataWidthCo_U0_start_write),
    .if_dout(start_for_LabelSelect_Batch_U0_dout),
    .if_empty_n(start_for_LabelSelect_Batch_U0_empty_n),
    .if_read(LabelSelect_Batch_U0_ap_ready)
);

assign LabelSelect_Batch_U0_ap_continue = 1'b1;

assign LabelSelect_Batch_U0_ap_start = start_for_LabelSelect_Batch_U0_empty_n;

assign LabelSelect_Batch_U0_start_full_n = 1'b1;

assign LabelSelect_Batch_U0_start_write = 1'b0;

assign StreamingDataWidthCo_U0_ap_continue = 1'b1;

assign StreamingDataWidthCo_U0_ap_start = ap_start;

assign ap_done = LabelSelect_Batch_U0_ap_done;

assign ap_idle = (StreamingDataWidthCo_U0_ap_idle & LabelSelect_Batch_U0_ap_idle);

assign ap_ready = StreamingDataWidthCo_U0_ap_ready;

assign ap_sync_continue = 1'b1;

assign ap_sync_done = LabelSelect_Batch_U0_ap_done;

assign ap_sync_ready = StreamingDataWidthCo_U0_ap_ready;

assign in_V_V_read = StreamingDataWidthCo_U0_in_V_V_read;

assign out_V_V_din = LabelSelect_Batch_U0_out_V_V_din;

assign out_V_V_write = LabelSelect_Batch_U0_out_V_V_write;

assign start_for_LabelSelect_Batch_U0_din = 1'b1;

endmodule //Testbench_label_select
