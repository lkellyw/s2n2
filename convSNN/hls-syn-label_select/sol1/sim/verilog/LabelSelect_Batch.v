// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module LabelSelect_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps_dout,
        numReps_empty_n,
        numReps_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_state9 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [79:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [3:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps_dout;
input   numReps_empty_n;
output   numReps_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg out_V_V_write;
reg numReps_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln374_reg_802;
reg    out_V_V_blk_n;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln401_fu_739_p2;
reg    numReps_blk_n;
reg   [15:0] topval_1_V_reg_124;
reg   [15:0] topval_0_V_reg_136;
reg   [15:0] topval_V_0_0_i_reg_148;
reg   [3:0] toplabels_2_V_reg_160;
reg   [1:0] block_0_i_reg_172;
reg   [31:0] numReps_read_reg_788;
reg    ap_block_state1;
wire   [0:0] icmp_ln368_fu_203_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] reps_fu_208_p2;
reg   [31:0] reps_reg_797;
wire   [0:0] icmp_ln374_fu_214_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln374_reg_802_pp0_iter1_reg;
reg   [0:0] icmp_ln374_reg_802_pp0_iter2_reg;
reg   [0:0] icmp_ln374_reg_802_pp0_iter3_reg;
reg   [0:0] icmp_ln374_reg_802_pp0_iter4_reg;
wire   [1:0] block_fu_220_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [15:0] topval_0_V_20_fu_226_p1;
reg   [15:0] topval_0_V_20_reg_811;
reg   [15:0] topval_0_V_20_reg_811_pp0_iter2_reg;
reg   [15:0] topval_0_V_20_reg_811_pp0_iter3_reg;
reg   [15:0] topval_0_V_21_reg_821;
reg   [15:0] topval_0_V_21_reg_821_pp0_iter2_reg;
reg   [15:0] topval_0_V_21_reg_821_pp0_iter3_reg;
reg   [15:0] topval_0_V_22_reg_831;
reg   [15:0] topval_0_V_22_reg_831_pp0_iter2_reg;
reg   [15:0] topval_0_V_22_reg_831_pp0_iter3_reg;
reg   [15:0] topval_0_V_23_reg_841;
reg   [15:0] topval_0_V_23_reg_841_pp0_iter2_reg;
reg   [15:0] topval_0_V_23_reg_841_pp0_iter3_reg;
reg   [15:0] topval_0_V_23_reg_841_pp0_iter4_reg;
reg   [15:0] topval_0_V_24_reg_851;
reg   [15:0] topval_0_V_24_reg_851_pp0_iter2_reg;
reg   [15:0] topval_0_V_24_reg_851_pp0_iter3_reg;
reg   [15:0] topval_0_V_24_reg_851_pp0_iter4_reg;
wire   [0:0] icmp_ln895_2_fu_270_p2;
reg   [0:0] icmp_ln895_2_reg_861;
reg   [0:0] icmp_ln895_2_reg_861_pp0_iter3_reg;
reg   [0:0] icmp_ln895_2_reg_861_pp0_iter4_reg;
wire   [15:0] topval_2_V_9_fu_275_p3;
reg   [15:0] topval_2_V_9_reg_868;
wire   [0:0] icmp_ln895_5_fu_282_p2;
reg   [0:0] icmp_ln895_5_reg_873;
reg   [0:0] icmp_ln895_5_reg_873_pp0_iter3_reg;
reg   [0:0] icmp_ln895_5_reg_873_pp0_iter4_reg;
wire   [15:0] topval_2_V_10_fu_287_p3;
reg   [15:0] topval_2_V_10_reg_880;
wire   [0:0] icmp_ln895_8_fu_294_p2;
reg   [0:0] icmp_ln895_8_reg_885;
reg   [0:0] icmp_ln895_8_reg_885_pp0_iter3_reg;
reg   [0:0] icmp_ln895_8_reg_885_pp0_iter4_reg;
wire   [15:0] topval_2_V_fu_299_p3;
reg   [15:0] topval_2_V_reg_892;
reg   [15:0] topval_2_V_reg_892_pp0_iter3_reg;
wire   [0:0] icmp_ln895_11_fu_306_p2;
reg   [0:0] icmp_ln895_11_reg_898;
reg   [0:0] icmp_ln895_11_reg_898_pp0_iter3_reg;
reg   [0:0] icmp_ln895_11_reg_898_pp0_iter4_reg;
wire   [0:0] icmp_ln895_1_fu_311_p2;
reg   [0:0] icmp_ln895_1_reg_906;
reg   [0:0] icmp_ln895_1_reg_906_pp0_iter4_reg;
wire   [15:0] topval_1_V_20_fu_322_p3;
reg   [15:0] topval_1_V_20_reg_913;
wire   [0:0] icmp_ln895_4_fu_330_p2;
reg   [0:0] icmp_ln895_4_reg_918;
reg   [0:0] icmp_ln895_4_reg_918_pp0_iter4_reg;
wire   [15:0] topval_1_V_21_fu_340_p3;
reg   [15:0] topval_1_V_21_reg_925;
wire   [0:0] icmp_ln895_7_fu_348_p2;
reg   [0:0] icmp_ln895_7_reg_930;
reg   [0:0] icmp_ln895_7_reg_930_pp0_iter4_reg;
wire   [15:0] topval_1_V_22_fu_358_p3;
reg   [15:0] topval_1_V_22_reg_937;
reg   [15:0] topval_1_V_22_reg_937_pp0_iter4_reg;
wire   [0:0] icmp_ln895_10_fu_366_p2;
reg   [0:0] icmp_ln895_10_reg_943;
reg   [0:0] icmp_ln895_10_reg_943_pp0_iter4_reg;
wire   [15:0] topval_2_V_11_fu_371_p3;
reg   [15:0] topval_2_V_11_reg_951;
wire   [0:0] icmp_ln895_14_fu_376_p2;
reg   [0:0] icmp_ln895_14_reg_956;
reg   [0:0] icmp_ln895_14_reg_956_pp0_iter4_reg;
wire   [15:0] topval_2_V_8_fu_381_p3;
reg    ap_enable_reg_pp0_iter3;
wire   [0:0] icmp_ln895_fu_388_p2;
reg   [0:0] icmp_ln895_reg_968;
wire   [0:0] icmp_ln895_3_fu_407_p2;
reg   [0:0] icmp_ln895_3_reg_973;
wire   [0:0] icmp_ln895_6_fu_425_p2;
reg   [0:0] icmp_ln895_6_reg_978;
wire   [15:0] topval_0_V_11_fu_435_p3;
reg   [15:0] topval_0_V_11_reg_983;
wire   [0:0] icmp_ln895_9_fu_443_p2;
reg   [0:0] icmp_ln895_9_reg_988;
wire   [15:0] topval_1_V_23_fu_453_p3;
reg   [15:0] topval_1_V_23_reg_994;
wire   [0:0] icmp_ln895_13_fu_459_p2;
reg   [0:0] icmp_ln895_13_reg_999;
wire   [15:0] topval_1_V_19_fu_469_p3;
reg    ap_enable_reg_pp0_iter4;
wire   [3:0] idx_fu_477_p2;
reg    ap_enable_reg_pp0_iter5;
wire   [15:0] topval_0_V_19_fu_695_p3;
wire   [1:0] topx_fu_745_p2;
reg    ap_block_state10;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] reps_0_i_reg_113;
reg   [15:0] ap_phi_mux_topval_1_V_phi_fu_128_p4;
reg   [15:0] ap_phi_mux_topval_0_V_phi_fu_140_p4;
reg   [15:0] ap_phi_mux_topval_V_0_0_i_phi_fu_152_p4;
reg   [1:0] topx3_0_i_reg_183;
wire    ap_CS_fsm_state9;
reg   [3:0] toplabels_0_V_10_fu_82;
wire   [3:0] toplabels_0_V_19_fu_687_p3;
reg   [3:0] toplabels_1_V_10_fu_86;
wire   [3:0] toplabels_1_V_19_fu_710_p3;
reg   [3:0] toplabels_2_V_12_fu_90;
wire   [3:0] toplabels_2_V_23_fu_717_p3;
wire   [3:0] tmp_V_fu_757_p5;
wire   [15:0] topval_1_V_2_fu_316_p3;
wire   [15:0] topval_1_V_6_fu_335_p3;
wire   [15:0] topval_1_V_10_fu_353_p3;
wire   [15:0] topval_0_V_2_fu_393_p3;
wire   [15:0] topval_0_V_3_fu_399_p3;
wire   [15:0] topval_0_V_6_fu_412_p3;
wire   [15:0] topval_0_V_7_fu_417_p3;
wire   [15:0] topval_0_V_10_fu_430_p3;
wire   [15:0] topval_1_V_14_fu_448_p3;
wire   [15:0] topval_1_V_18_fu_464_p3;
wire   [3:0] toplabels_0_V_fu_487_p3;
wire   [3:0] toplabels_1_V_fu_501_p3;
wire   [2:0] trunc_ln895_fu_483_p1;
wire   [2:0] toplabels_2_V_14_fu_522_p2;
wire   [3:0] toplabels_1_V_11_fu_508_p3;
wire   [3:0] toplabels_2_V_15_fu_528_p1;
wire   [3:0] toplabels_0_V_12_fu_532_p3;
wire   [3:0] toplabels_0_V_11_fu_494_p3;
wire   [3:0] toplabels_2_V_13_fu_515_p3;
wire   [3:0] toplabels_1_V_12_fu_546_p3;
wire   [2:0] toplabels_2_V_17_fu_567_p2;
wire   [3:0] toplabels_1_V_13_fu_553_p3;
wire   [3:0] toplabels_2_V_18_fu_573_p1;
wire   [3:0] toplabels_0_V_14_fu_577_p3;
wire   [3:0] toplabels_0_V_13_fu_539_p3;
wire   [3:0] toplabels_2_V_16_fu_560_p3;
wire   [3:0] toplabels_1_V_14_fu_591_p3;
wire   [3:0] toplabels_1_V_15_fu_598_p3;
wire   [3:0] toplabels_2_V_20_fu_612_p2;
wire   [3:0] toplabels_0_V_16_fu_623_p3;
wire   [3:0] toplabels_0_V_15_fu_584_p3;
wire   [15:0] topval_0_V_14_fu_618_p3;
wire   [3:0] toplabels_2_V_19_fu_605_p3;
wire   [3:0] toplabels_1_V_16_fu_643_p3;
wire   [15:0] topval_0_V_15_fu_637_p3;
wire   [3:0] toplabels_1_V_17_fu_650_p3;
wire   [3:0] toplabels_2_V_22_fu_664_p2;
wire   [0:0] icmp_ln895_12_fu_670_p2;
wire   [3:0] toplabels_0_V_18_fu_680_p3;
wire   [3:0] toplabels_0_V_17_fu_630_p3;
wire   [15:0] topval_0_V_18_fu_675_p3;
wire   [3:0] toplabels_2_V_21_fu_657_p3;
wire   [3:0] toplabels_1_V_18_fu_703_p3;
wire   [1:0] tmp_V_fu_757_p4;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

Testbench_label_sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
Testbench_label_sbkb_U5(
    .din0(toplabels_0_V_10_fu_82),
    .din1(toplabels_1_V_10_fu_86),
    .din2(toplabels_2_V_12_fu_90),
    .din3(tmp_V_fu_757_p4),
    .dout(tmp_V_fu_757_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln368_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln368_fu_203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((icmp_ln368_fu_203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln368_fu_203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        block_0_i_reg_172 <= 2'd0;
    end else if (((icmp_ln374_fu_214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        block_0_i_reg_172 <= block_fu_220_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln401_fu_739_p2 == 1'd0) & (out_V_V_full_n == 1'b0)) & (icmp_ln401_fu_739_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        reps_0_i_reg_113 <= reps_reg_797;
    end else if ((~((numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_0_i_reg_113 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln368_fu_203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        toplabels_2_V_reg_160 <= 4'd0;
    end else if (((icmp_ln374_reg_802_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        toplabels_2_V_reg_160 <= idx_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln368_fu_203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        topval_0_V_reg_136 <= 16'd32768;
    end else if (((icmp_ln374_reg_802_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        topval_0_V_reg_136 <= topval_1_V_19_fu_469_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln368_fu_203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        topval_1_V_reg_124 <= 16'd32768;
    end else if (((icmp_ln374_reg_802_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        topval_1_V_reg_124 <= topval_2_V_8_fu_381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln368_fu_203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        topval_V_0_0_i_reg_148 <= 16'd32768;
    end else if (((icmp_ln374_reg_802_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        topval_V_0_0_i_reg_148 <= topval_0_V_19_fu_695_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        topx3_0_i_reg_183 <= 2'd0;
    end else if ((~((icmp_ln401_fu_739_p2 == 1'd0) & (out_V_V_full_n == 1'b0)) & (icmp_ln401_fu_739_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        topx3_0_i_reg_183 <= topx_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln374_reg_802 <= icmp_ln374_fu_214_p2;
        icmp_ln374_reg_802_pp0_iter1_reg <= icmp_ln374_reg_802;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln374_reg_802_pp0_iter2_reg <= icmp_ln374_reg_802_pp0_iter1_reg;
        icmp_ln374_reg_802_pp0_iter3_reg <= icmp_ln374_reg_802_pp0_iter2_reg;
        icmp_ln374_reg_802_pp0_iter4_reg <= icmp_ln374_reg_802_pp0_iter3_reg;
        icmp_ln895_10_reg_943_pp0_iter4_reg <= icmp_ln895_10_reg_943;
        icmp_ln895_11_reg_898_pp0_iter3_reg <= icmp_ln895_11_reg_898;
        icmp_ln895_11_reg_898_pp0_iter4_reg <= icmp_ln895_11_reg_898_pp0_iter3_reg;
        icmp_ln895_14_reg_956_pp0_iter4_reg <= icmp_ln895_14_reg_956;
        icmp_ln895_1_reg_906_pp0_iter4_reg <= icmp_ln895_1_reg_906;
        icmp_ln895_2_reg_861_pp0_iter3_reg <= icmp_ln895_2_reg_861;
        icmp_ln895_2_reg_861_pp0_iter4_reg <= icmp_ln895_2_reg_861_pp0_iter3_reg;
        icmp_ln895_4_reg_918_pp0_iter4_reg <= icmp_ln895_4_reg_918;
        icmp_ln895_5_reg_873_pp0_iter3_reg <= icmp_ln895_5_reg_873;
        icmp_ln895_5_reg_873_pp0_iter4_reg <= icmp_ln895_5_reg_873_pp0_iter3_reg;
        icmp_ln895_7_reg_930_pp0_iter4_reg <= icmp_ln895_7_reg_930;
        icmp_ln895_8_reg_885_pp0_iter3_reg <= icmp_ln895_8_reg_885;
        icmp_ln895_8_reg_885_pp0_iter4_reg <= icmp_ln895_8_reg_885_pp0_iter3_reg;
        topval_0_V_20_reg_811_pp0_iter2_reg <= topval_0_V_20_reg_811;
        topval_0_V_20_reg_811_pp0_iter3_reg <= topval_0_V_20_reg_811_pp0_iter2_reg;
        topval_0_V_21_reg_821_pp0_iter2_reg <= topval_0_V_21_reg_821;
        topval_0_V_21_reg_821_pp0_iter3_reg <= topval_0_V_21_reg_821_pp0_iter2_reg;
        topval_0_V_22_reg_831_pp0_iter2_reg <= topval_0_V_22_reg_831;
        topval_0_V_22_reg_831_pp0_iter3_reg <= topval_0_V_22_reg_831_pp0_iter2_reg;
        topval_0_V_23_reg_841_pp0_iter2_reg <= topval_0_V_23_reg_841;
        topval_0_V_23_reg_841_pp0_iter3_reg <= topval_0_V_23_reg_841_pp0_iter2_reg;
        topval_0_V_23_reg_841_pp0_iter4_reg <= topval_0_V_23_reg_841_pp0_iter3_reg;
        topval_0_V_24_reg_851_pp0_iter2_reg <= topval_0_V_24_reg_851;
        topval_0_V_24_reg_851_pp0_iter3_reg <= topval_0_V_24_reg_851_pp0_iter2_reg;
        topval_0_V_24_reg_851_pp0_iter4_reg <= topval_0_V_24_reg_851_pp0_iter3_reg;
        topval_1_V_22_reg_937_pp0_iter4_reg <= topval_1_V_22_reg_937;
        topval_2_V_reg_892_pp0_iter3_reg <= topval_2_V_reg_892;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln374_reg_802_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln895_10_reg_943 <= icmp_ln895_10_fu_366_p2;
        icmp_ln895_14_reg_956 <= icmp_ln895_14_fu_376_p2;
        icmp_ln895_1_reg_906 <= icmp_ln895_1_fu_311_p2;
        icmp_ln895_4_reg_918 <= icmp_ln895_4_fu_330_p2;
        icmp_ln895_7_reg_930 <= icmp_ln895_7_fu_348_p2;
        topval_1_V_20_reg_913 <= topval_1_V_20_fu_322_p3;
        topval_1_V_21_reg_925 <= topval_1_V_21_fu_340_p3;
        topval_1_V_22_reg_937 <= topval_1_V_22_fu_358_p3;
        topval_2_V_11_reg_951 <= topval_2_V_11_fu_371_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln374_reg_802_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln895_11_reg_898 <= icmp_ln895_11_fu_306_p2;
        icmp_ln895_2_reg_861 <= icmp_ln895_2_fu_270_p2;
        icmp_ln895_5_reg_873 <= icmp_ln895_5_fu_282_p2;
        icmp_ln895_8_reg_885 <= icmp_ln895_8_fu_294_p2;
        topval_2_V_10_reg_880 <= topval_2_V_10_fu_287_p3;
        topval_2_V_9_reg_868 <= topval_2_V_9_fu_275_p3;
        topval_2_V_reg_892 <= topval_2_V_fu_299_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln374_reg_802_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln895_13_reg_999 <= icmp_ln895_13_fu_459_p2;
        icmp_ln895_3_reg_973 <= icmp_ln895_3_fu_407_p2;
        icmp_ln895_6_reg_978 <= icmp_ln895_6_fu_425_p2;
        icmp_ln895_9_reg_988 <= icmp_ln895_9_fu_443_p2;
        icmp_ln895_reg_968 <= icmp_ln895_fu_388_p2;
        topval_0_V_11_reg_983 <= topval_0_V_11_fu_435_p3;
        topval_1_V_23_reg_994 <= topval_1_V_23_fu_453_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read_reg_788 <= numReps_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        reps_reg_797 <= reps_fu_208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln374_reg_802_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        toplabels_0_V_10_fu_82 <= toplabels_0_V_19_fu_687_p3;
        toplabels_1_V_10_fu_86 <= toplabels_1_V_19_fu_710_p3;
        toplabels_2_V_12_fu_90 <= toplabels_2_V_23_fu_717_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln374_reg_802 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        topval_0_V_20_reg_811 <= topval_0_V_20_fu_226_p1;
        topval_0_V_21_reg_821 <= {{in_V_V_dout[31:16]}};
        topval_0_V_22_reg_831 <= {{in_V_V_dout[47:32]}};
        topval_0_V_23_reg_841 <= {{in_V_V_dout[63:48]}};
        topval_0_V_24_reg_851 <= {{in_V_V_dout[79:64]}};
    end
end

always @ (*) begin
    if ((icmp_ln374_fu_214_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln368_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln374_reg_802_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_mux_topval_0_V_phi_fu_140_p4 = topval_1_V_19_fu_469_p3;
    end else begin
        ap_phi_mux_topval_0_V_phi_fu_140_p4 = topval_0_V_reg_136;
    end
end

always @ (*) begin
    if (((icmp_ln374_reg_802_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_topval_1_V_phi_fu_128_p4 = topval_2_V_8_fu_381_p3;
    end else begin
        ap_phi_mux_topval_1_V_phi_fu_128_p4 = topval_1_V_reg_124;
    end
end

always @ (*) begin
    if (((icmp_ln374_reg_802_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_mux_topval_V_0_0_i_phi_fu_152_p4 = topval_0_V_19_fu_695_p3;
    end else begin
        ap_phi_mux_topval_V_0_0_i_phi_fu_152_p4 = topval_V_0_0_i_reg_148;
    end
end

always @ (*) begin
    if (((icmp_ln368_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln374_reg_802 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln374_reg_802 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_blk_n = numReps_empty_n;
    end else begin
        numReps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read = 1'b1;
    end else begin
        numReps_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln401_fu_739_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln401_fu_739_p2 == 1'd0) & (out_V_V_full_n == 1'b0)) & (icmp_ln401_fu_739_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln368_fu_203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln374_fu_214_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln374_fu_214_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if ((~((icmp_ln401_fu_739_p2 == 1'd0) & (out_V_V_full_n == 1'b0)) & (icmp_ln401_fu_739_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((icmp_ln401_fu_739_p2 == 1'd0) & (out_V_V_full_n == 1'b0)) & (icmp_ln401_fu_739_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln374_reg_802 == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln374_reg_802 == 1'd0) & (in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10 = ((icmp_ln401_fu_739_p2 == 1'd0) & (out_V_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln374_reg_802 == 1'd0) & (in_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign block_fu_220_p2 = (block_0_i_reg_172 + 2'd1);

assign icmp_ln368_fu_203_p2 = ((reps_0_i_reg_113 == numReps_read_reg_788) ? 1'b1 : 1'b0);

assign icmp_ln374_fu_214_p2 = ((block_0_i_reg_172 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln401_fu_739_p2 = ((topx3_0_i_reg_183 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln895_10_fu_366_p2 = (($signed(topval_0_V_23_reg_841_pp0_iter2_reg) > $signed(topval_1_V_22_fu_358_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_11_fu_306_p2 = (($signed(topval_0_V_23_reg_841) > $signed(topval_2_V_fu_299_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_12_fu_670_p2 = (($signed(topval_0_V_24_reg_851_pp0_iter4_reg) > $signed(topval_0_V_15_fu_637_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_13_fu_459_p2 = (($signed(topval_0_V_24_reg_851_pp0_iter3_reg) > $signed(topval_1_V_23_fu_453_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_14_fu_376_p2 = (($signed(topval_0_V_24_reg_851_pp0_iter2_reg) > $signed(topval_2_V_11_fu_371_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_311_p2 = (($signed(topval_0_V_20_reg_811_pp0_iter2_reg) > $signed(ap_phi_mux_topval_0_V_phi_fu_140_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_270_p2 = (($signed(topval_0_V_20_reg_811) > $signed(ap_phi_mux_topval_1_V_phi_fu_128_p4)) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_407_p2 = (($signed(topval_0_V_21_reg_821_pp0_iter3_reg) > $signed(topval_0_V_3_fu_399_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_4_fu_330_p2 = (($signed(topval_0_V_21_reg_821_pp0_iter2_reg) > $signed(topval_1_V_20_fu_322_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_5_fu_282_p2 = (($signed(topval_0_V_21_reg_821) > $signed(topval_2_V_9_fu_275_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_6_fu_425_p2 = (($signed(topval_0_V_22_reg_831_pp0_iter3_reg) > $signed(topval_0_V_7_fu_417_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_7_fu_348_p2 = (($signed(topval_0_V_22_reg_831_pp0_iter2_reg) > $signed(topval_1_V_21_fu_340_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_8_fu_294_p2 = (($signed(topval_0_V_22_reg_831) > $signed(topval_2_V_10_fu_287_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_9_fu_443_p2 = (($signed(topval_0_V_23_reg_841_pp0_iter3_reg) > $signed(topval_0_V_11_fu_435_p3)) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_388_p2 = (($signed(topval_0_V_20_reg_811_pp0_iter3_reg) > $signed(ap_phi_mux_topval_V_0_0_i_phi_fu_152_p4)) ? 1'b1 : 1'b0);

assign idx_fu_477_p2 = (4'd5 + toplabels_2_V_reg_160);

assign out_V_V_din = tmp_V_fu_757_p5;

assign reps_fu_208_p2 = (reps_0_i_reg_113 + 32'd1);

assign tmp_V_fu_757_p4 = ($signed(2'd2) - $signed(topx3_0_i_reg_183));

assign toplabels_0_V_11_fu_494_p3 = ((icmp_ln895_reg_968[0:0] === 1'b1) ? toplabels_0_V_fu_487_p3 : toplabels_0_V_10_fu_82);

assign toplabels_0_V_12_fu_532_p3 = ((icmp_ln895_4_reg_918_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_1_V_11_fu_508_p3 : toplabels_2_V_15_fu_528_p1);

assign toplabels_0_V_13_fu_539_p3 = ((icmp_ln895_3_reg_973[0:0] === 1'b1) ? toplabels_0_V_12_fu_532_p3 : toplabels_0_V_11_fu_494_p3);

assign toplabels_0_V_14_fu_577_p3 = ((icmp_ln895_7_reg_930_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_1_V_13_fu_553_p3 : toplabels_2_V_18_fu_573_p1);

assign toplabels_0_V_15_fu_584_p3 = ((icmp_ln895_6_reg_978[0:0] === 1'b1) ? toplabels_0_V_14_fu_577_p3 : toplabels_0_V_13_fu_539_p3);

assign toplabels_0_V_16_fu_623_p3 = ((icmp_ln895_10_reg_943_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_1_V_15_fu_598_p3 : toplabels_2_V_20_fu_612_p2);

assign toplabels_0_V_17_fu_630_p3 = ((icmp_ln895_9_reg_988[0:0] === 1'b1) ? toplabels_0_V_16_fu_623_p3 : toplabels_0_V_15_fu_584_p3);

assign toplabels_0_V_18_fu_680_p3 = ((icmp_ln895_13_reg_999[0:0] === 1'b1) ? toplabels_1_V_17_fu_650_p3 : toplabels_2_V_22_fu_664_p2);

assign toplabels_0_V_19_fu_687_p3 = ((icmp_ln895_12_fu_670_p2[0:0] === 1'b1) ? toplabels_0_V_18_fu_680_p3 : toplabels_0_V_17_fu_630_p3);

assign toplabels_0_V_fu_487_p3 = ((icmp_ln895_1_reg_906_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_1_V_10_fu_86 : toplabels_2_V_reg_160);

assign toplabels_1_V_11_fu_508_p3 = ((icmp_ln895_1_reg_906_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_1_V_fu_501_p3 : toplabels_1_V_10_fu_86);

assign toplabels_1_V_12_fu_546_p3 = ((icmp_ln895_5_reg_873_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_13_fu_515_p3 : toplabels_2_V_15_fu_528_p1);

assign toplabels_1_V_13_fu_553_p3 = ((icmp_ln895_4_reg_918_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_1_V_12_fu_546_p3 : toplabels_1_V_11_fu_508_p3);

assign toplabels_1_V_14_fu_591_p3 = ((icmp_ln895_8_reg_885_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_16_fu_560_p3 : toplabels_2_V_18_fu_573_p1);

assign toplabels_1_V_15_fu_598_p3 = ((icmp_ln895_7_reg_930_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_1_V_14_fu_591_p3 : toplabels_1_V_13_fu_553_p3);

assign toplabels_1_V_16_fu_643_p3 = ((icmp_ln895_11_reg_898_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_19_fu_605_p3 : toplabels_2_V_20_fu_612_p2);

assign toplabels_1_V_17_fu_650_p3 = ((icmp_ln895_10_reg_943_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_1_V_16_fu_643_p3 : toplabels_1_V_15_fu_598_p3);

assign toplabels_1_V_18_fu_703_p3 = ((icmp_ln895_14_reg_956_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_21_fu_657_p3 : toplabels_2_V_22_fu_664_p2);

assign toplabels_1_V_19_fu_710_p3 = ((icmp_ln895_13_reg_999[0:0] === 1'b1) ? toplabels_1_V_18_fu_703_p3 : toplabels_1_V_17_fu_650_p3);

assign toplabels_1_V_fu_501_p3 = ((icmp_ln895_2_reg_861_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_12_fu_90 : toplabels_2_V_reg_160);

assign toplabels_2_V_13_fu_515_p3 = ((icmp_ln895_2_reg_861_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_reg_160 : toplabels_2_V_12_fu_90);

assign toplabels_2_V_14_fu_522_p2 = (3'd1 + trunc_ln895_fu_483_p1);

assign toplabels_2_V_15_fu_528_p1 = toplabels_2_V_14_fu_522_p2;

assign toplabels_2_V_16_fu_560_p3 = ((icmp_ln895_5_reg_873_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_15_fu_528_p1 : toplabels_2_V_13_fu_515_p3);

assign toplabels_2_V_17_fu_567_p2 = (3'd2 + trunc_ln895_fu_483_p1);

assign toplabels_2_V_18_fu_573_p1 = toplabels_2_V_17_fu_567_p2;

assign toplabels_2_V_19_fu_605_p3 = ((icmp_ln895_8_reg_885_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_18_fu_573_p1 : toplabels_2_V_16_fu_560_p3);

assign toplabels_2_V_20_fu_612_p2 = (4'd3 + toplabels_2_V_reg_160);

assign toplabels_2_V_21_fu_657_p3 = ((icmp_ln895_11_reg_898_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_20_fu_612_p2 : toplabels_2_V_19_fu_605_p3);

assign toplabels_2_V_22_fu_664_p2 = (4'd4 + toplabels_2_V_reg_160);

assign toplabels_2_V_23_fu_717_p3 = ((icmp_ln895_14_reg_956_pp0_iter4_reg[0:0] === 1'b1) ? toplabels_2_V_22_fu_664_p2 : toplabels_2_V_21_fu_657_p3);

assign topval_0_V_10_fu_430_p3 = ((icmp_ln895_7_reg_930[0:0] === 1'b1) ? topval_1_V_21_reg_925 : topval_0_V_22_reg_831_pp0_iter3_reg);

assign topval_0_V_11_fu_435_p3 = ((icmp_ln895_6_fu_425_p2[0:0] === 1'b1) ? topval_0_V_10_fu_430_p3 : topval_0_V_7_fu_417_p3);

assign topval_0_V_14_fu_618_p3 = ((icmp_ln895_10_reg_943_pp0_iter4_reg[0:0] === 1'b1) ? topval_1_V_22_reg_937_pp0_iter4_reg : topval_0_V_23_reg_841_pp0_iter4_reg);

assign topval_0_V_15_fu_637_p3 = ((icmp_ln895_9_reg_988[0:0] === 1'b1) ? topval_0_V_14_fu_618_p3 : topval_0_V_11_reg_983);

assign topval_0_V_18_fu_675_p3 = ((icmp_ln895_13_reg_999[0:0] === 1'b1) ? topval_1_V_23_reg_994 : topval_0_V_24_reg_851_pp0_iter4_reg);

assign topval_0_V_19_fu_695_p3 = ((icmp_ln895_12_fu_670_p2[0:0] === 1'b1) ? topval_0_V_18_fu_675_p3 : topval_0_V_15_fu_637_p3);

assign topval_0_V_20_fu_226_p1 = in_V_V_dout[15:0];

assign topval_0_V_2_fu_393_p3 = ((icmp_ln895_1_reg_906[0:0] === 1'b1) ? topval_0_V_reg_136 : topval_0_V_20_reg_811_pp0_iter3_reg);

assign topval_0_V_3_fu_399_p3 = ((icmp_ln895_fu_388_p2[0:0] === 1'b1) ? topval_0_V_2_fu_393_p3 : ap_phi_mux_topval_V_0_0_i_phi_fu_152_p4);

assign topval_0_V_6_fu_412_p3 = ((icmp_ln895_4_reg_918[0:0] === 1'b1) ? topval_1_V_20_reg_913 : topval_0_V_21_reg_821_pp0_iter3_reg);

assign topval_0_V_7_fu_417_p3 = ((icmp_ln895_3_fu_407_p2[0:0] === 1'b1) ? topval_0_V_6_fu_412_p3 : topval_0_V_3_fu_399_p3);

assign topval_1_V_10_fu_353_p3 = ((icmp_ln895_8_reg_885[0:0] === 1'b1) ? topval_2_V_10_reg_880 : topval_0_V_22_reg_831_pp0_iter2_reg);

assign topval_1_V_14_fu_448_p3 = ((icmp_ln895_11_reg_898_pp0_iter3_reg[0:0] === 1'b1) ? topval_2_V_reg_892_pp0_iter3_reg : topval_0_V_23_reg_841_pp0_iter3_reg);

assign topval_1_V_18_fu_464_p3 = ((icmp_ln895_14_reg_956[0:0] === 1'b1) ? topval_2_V_11_reg_951 : topval_0_V_24_reg_851_pp0_iter3_reg);

assign topval_1_V_19_fu_469_p3 = ((icmp_ln895_13_fu_459_p2[0:0] === 1'b1) ? topval_1_V_18_fu_464_p3 : topval_1_V_23_fu_453_p3);

assign topval_1_V_20_fu_322_p3 = ((icmp_ln895_1_fu_311_p2[0:0] === 1'b1) ? topval_1_V_2_fu_316_p3 : ap_phi_mux_topval_0_V_phi_fu_140_p4);

assign topval_1_V_21_fu_340_p3 = ((icmp_ln895_4_fu_330_p2[0:0] === 1'b1) ? topval_1_V_6_fu_335_p3 : topval_1_V_20_fu_322_p3);

assign topval_1_V_22_fu_358_p3 = ((icmp_ln895_7_fu_348_p2[0:0] === 1'b1) ? topval_1_V_10_fu_353_p3 : topval_1_V_21_fu_340_p3);

assign topval_1_V_23_fu_453_p3 = ((icmp_ln895_10_reg_943[0:0] === 1'b1) ? topval_1_V_14_fu_448_p3 : topval_1_V_22_reg_937);

assign topval_1_V_2_fu_316_p3 = ((icmp_ln895_2_reg_861[0:0] === 1'b1) ? topval_1_V_reg_124 : topval_0_V_20_reg_811_pp0_iter2_reg);

assign topval_1_V_6_fu_335_p3 = ((icmp_ln895_5_reg_873[0:0] === 1'b1) ? topval_2_V_9_reg_868 : topval_0_V_21_reg_821_pp0_iter2_reg);

assign topval_2_V_10_fu_287_p3 = ((icmp_ln895_5_fu_282_p2[0:0] === 1'b1) ? topval_0_V_21_reg_821 : topval_2_V_9_fu_275_p3);

assign topval_2_V_11_fu_371_p3 = ((icmp_ln895_11_reg_898[0:0] === 1'b1) ? topval_0_V_23_reg_841_pp0_iter2_reg : topval_2_V_reg_892);

assign topval_2_V_8_fu_381_p3 = ((icmp_ln895_14_fu_376_p2[0:0] === 1'b1) ? topval_0_V_24_reg_851_pp0_iter2_reg : topval_2_V_11_fu_371_p3);

assign topval_2_V_9_fu_275_p3 = ((icmp_ln895_2_fu_270_p2[0:0] === 1'b1) ? topval_0_V_20_reg_811 : ap_phi_mux_topval_1_V_phi_fu_128_p4);

assign topval_2_V_fu_299_p3 = ((icmp_ln895_8_fu_294_p2[0:0] === 1'b1) ? topval_0_V_22_reg_831 : topval_2_V_10_fu_287_p3);

assign topx_fu_745_p2 = (topx3_0_i_reg_183 + 2'd1);

assign trunc_ln895_fu_483_p1 = toplabels_2_V_reg_160[2:0];

endmodule //LabelSelect_Batch
