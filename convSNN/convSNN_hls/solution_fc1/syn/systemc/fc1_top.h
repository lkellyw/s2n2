// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fc1_top_HH_
#define _fc1_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Matrix_Vector_Activa.h"

namespace ap_rtl {

struct fc1_top : public sc_module {
    // Port declarations 13
    sc_in< sc_lv<320> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<64> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<32> > numReps;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;


    // Module declarations
    fc1_top(sc_module_name name);
    SC_HAS_PROCESS(fc1_top);

    ~fc1_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Matrix_Vector_Activa* Matrix_Vector_Activa_U0;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_start;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_done;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_continue;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_idle;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_ap_ready;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_in_V_V_read;
    sc_signal< sc_lv<64> > Matrix_Vector_Activa_U0_out_V_V_din;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_out_V_V_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_start_full_n;
    sc_signal< sc_logic > Matrix_Vector_Activa_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_Matrix_Vector_Activa_U0_ap_continue();
    void thread_Matrix_Vector_Activa_U0_ap_start();
    void thread_Matrix_Vector_Activa_U0_start_full_n();
    void thread_Matrix_Vector_Activa_U0_start_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_in_V_V_read();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
