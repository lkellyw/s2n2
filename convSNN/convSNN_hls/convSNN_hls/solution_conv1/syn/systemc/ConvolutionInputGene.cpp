// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "ConvolutionInputGene.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic ConvolutionInputGene::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic ConvolutionInputGene::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> ConvolutionInputGene::ap_ST_fsm_state1 = "1";
const sc_lv<3> ConvolutionInputGene::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> ConvolutionInputGene::ap_ST_fsm_state4 = "100";
const sc_lv<32> ConvolutionInputGene::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool ConvolutionInputGene::ap_const_boolean_1 = true;
const sc_lv<32> ConvolutionInputGene::ap_const_lv32_1 = "1";
const bool ConvolutionInputGene::ap_const_boolean_0 = false;
const sc_lv<1> ConvolutionInputGene::ap_const_lv1_1 = "1";
const sc_lv<1> ConvolutionInputGene::ap_const_lv1_0 = "0";
const sc_lv<41> ConvolutionInputGene::ap_const_lv41_0 = "00000000000000000000000000000000000000000";
const sc_lv<9> ConvolutionInputGene::ap_const_lv9_0 = "000000000";
const sc_lv<32> ConvolutionInputGene::ap_const_lv32_10 = "10000";
const sc_lv<8> ConvolutionInputGene::ap_const_lv8_0 = "00000000";
const sc_lv<4> ConvolutionInputGene::ap_const_lv4_0 = "0000";
const sc_lv<41> ConvolutionInputGene::ap_const_lv41_1 = "1";
const sc_lv<9> ConvolutionInputGene::ap_const_lv9_110 = "100010000";
const sc_lv<32> ConvolutionInputGene::ap_const_lv32_4 = "100";
const sc_lv<32> ConvolutionInputGene::ap_const_lv32_1F = "11111";
const sc_lv<28> ConvolutionInputGene::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<32> ConvolutionInputGene::ap_const_lv32_F = "1111";
const sc_lv<5> ConvolutionInputGene::ap_const_lv5_1 = "1";
const sc_lv<9> ConvolutionInputGene::ap_const_lv9_1 = "1";
const sc_lv<32> ConvolutionInputGene::ap_const_lv32_2 = "10";

ConvolutionInputGene::ConvolutionInputGene(sc_module_name name) : sc_module(name), mVcdFile(0) {
    inputBuf_0_V_U = new ConvolutionInputGbkb("inputBuf_0_V_U");
    inputBuf_0_V_U->clk(ap_clk);
    inputBuf_0_V_U->reset(ap_rst);
    inputBuf_0_V_U->address0(inputBuf_0_V_address0);
    inputBuf_0_V_U->ce0(inputBuf_0_V_ce0);
    inputBuf_0_V_U->q0(inputBuf_0_V_q0);
    inputBuf_0_V_U->address1(inputBuf_0_V_address1);
    inputBuf_0_V_U->ce1(inputBuf_0_V_ce1);
    inputBuf_0_V_U->we1(inputBuf_0_V_we1);
    inputBuf_0_V_U->d1(in_V_V_dout);
    inputBuf_1_V_U = new ConvolutionInputGbkb("inputBuf_1_V_U");
    inputBuf_1_V_U->clk(ap_clk);
    inputBuf_1_V_U->reset(ap_rst);
    inputBuf_1_V_U->address0(inputBuf_1_V_address0);
    inputBuf_1_V_U->ce0(inputBuf_1_V_ce0);
    inputBuf_1_V_U->q0(inputBuf_1_V_q0);
    inputBuf_1_V_U->address1(inputBuf_1_V_address1);
    inputBuf_1_V_U->ce1(inputBuf_1_V_ce1);
    inputBuf_1_V_U->we1(inputBuf_1_V_we1);
    inputBuf_1_V_U->d1(in_V_V_dout);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln196_fu_357_p2);
    sensitive << ( indvar_flatten_reg_209 );

    SC_METHOD(thread_add_ln197_fu_671_p2);
    sensitive << ( i_0_i_reg_220 );

    SC_METHOD(thread_add_ln220_fu_431_p2);
    sensitive << ( ofm_x_1_fu_88 );
    sensitive << ( count_simd_1_fu_104 );

    SC_METHOD(thread_add_ln255_fu_580_p2);
    sensitive << ( trunc_ln197_fu_384_p1 );

    SC_METHOD(thread_and_ln245_fu_574_p2);
    sensitive << ( icmp_ln215_fu_407_p2 );
    sensitive << ( icmp_ln245_fu_568_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( ap_predicate_op155_write_state3 );
    sensitive << ( ap_predicate_op158_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( ap_predicate_op155_write_state3 );
    sensitive << ( ap_predicate_op158_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( ap_predicate_op155_write_state3 );
    sensitive << ( ap_predicate_op158_read_state3 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( numReps_empty_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( ap_predicate_op155_write_state3 );
    sensitive << ( ap_predicate_op158_read_state3 );

    SC_METHOD(thread_ap_condition_330);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( trunc_ln321_1_fu_713_p1 );

    SC_METHOD(thread_ap_condition_341);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( trunc_ln321_1_fu_713_p1 );

    SC_METHOD(thread_ap_condition_50);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln196_fu_352_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_operation_152);
    sensitive << ( ap_predicate_op152_load_state3 );

    SC_METHOD(thread_ap_enable_operation_153);
    sensitive << ( ap_predicate_op153_load_state3 );

    SC_METHOD(thread_ap_enable_operation_164);
    sensitive << ( ap_predicate_op164_store_state3 );

    SC_METHOD(thread_ap_enable_operation_166);
    sensitive << ( ap_predicate_op166_store_state3 );

    SC_METHOD(thread_ap_enable_operation_185);
    sensitive << ( ap_predicate_op185_store_state3 );

    SC_METHOD(thread_ap_enable_operation_187);
    sensitive << ( ap_predicate_op187_store_state3 );

    SC_METHOD(thread_ap_enable_operation_66);
    sensitive << ( ap_predicate_op66_load_state2 );

    SC_METHOD(thread_ap_enable_operation_67);
    sensitive << ( ap_predicate_op67_load_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_state2_pp0_iter0_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_enable_state3_pp0_iter1_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_predicate_op152_load_state3);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( icmp_ln215_reg_887 );

    SC_METHOD(thread_ap_predicate_op153_load_state3);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( icmp_ln215_reg_887 );

    SC_METHOD(thread_ap_predicate_op155_write_state3);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( icmp_ln215_reg_887 );

    SC_METHOD(thread_ap_predicate_op158_read_state3);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );

    SC_METHOD(thread_ap_predicate_op164_store_state3);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( trunc_ln321_1_fu_713_p1 );

    SC_METHOD(thread_ap_predicate_op166_store_state3);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( trunc_ln321_1_fu_713_p1 );

    SC_METHOD(thread_ap_predicate_op185_store_state3);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( trunc_ln321_fu_758_p1 );

    SC_METHOD(thread_ap_predicate_op187_store_state3);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( trunc_ln321_fu_758_p1 );

    SC_METHOD(thread_ap_predicate_op66_load_state2);
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( icmp_ln215_fu_407_p2 );

    SC_METHOD(thread_ap_predicate_op67_load_state2);
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( icmp_ln215_fu_407_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_bound_fu_326_p2);
    sensitive << ( p_shl_fu_310_p1 );
    sensitive << ( p_shl34_fu_322_p1 );

    SC_METHOD(thread_count_simd_fu_449_p2);
    sensitive << ( count_simd_1_fu_104 );

    SC_METHOD(thread_counter_internal_blo_3_fu_619_p2);
    sensitive << ( counter_internal_blo_fu_116 );

    SC_METHOD(thread_current_block_write_6_fu_774_p3);
    sensitive << ( current_block_write_fu_762_p2 );
    sensitive << ( icmp_ln208_fu_768_p2 );

    SC_METHOD(thread_current_block_write_7_fu_720_p2);
    sensitive << ( current_block_write_5_fu_108 );

    SC_METHOD(thread_current_block_write_8_fu_732_p3);
    sensitive << ( current_block_write_7_fu_720_p2 );
    sensitive << ( icmp_ln257_fu_726_p2 );

    SC_METHOD(thread_current_block_write_9_fu_740_p3);
    sensitive << ( icmp_ln252_reg_922 );
    sensitive << ( current_block_write_5_fu_108 );
    sensitive << ( current_block_write_8_fu_732_p3 );

    SC_METHOD(thread_current_block_write_fu_762_p2);
    sensitive << ( current_block_write_5_fu_108 );

    SC_METHOD(thread_current_line_in_bloc_fu_437_p2);
    sensitive << ( k_x_1_fu_100 );
    sensitive << ( add_ln220_fu_431_p2 );

    SC_METHOD(thread_grp_fu_274_p2);
    sensitive << ( current_line_2_fu_112 );

    SC_METHOD(thread_i_fu_677_p3);
    sensitive << ( icmp_ln197_fu_369_p2 );
    sensitive << ( add_ln197_fu_671_p2 );

    SC_METHOD(thread_icmp_ln196_fu_352_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_209 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( bound_reg_869 );

    SC_METHOD(thread_icmp_ln197_fu_369_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_i_reg_220 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );

    SC_METHOD(thread_icmp_ln199_fu_398_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( tmp_8_fu_388_p4 );

    SC_METHOD(thread_icmp_ln205_fu_286_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( grp_fu_274_p2 );

    SC_METHOD(thread_icmp_ln208_fu_768_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln205_reg_927 );
    sensitive << ( current_block_write_fu_762_p2 );

    SC_METHOD(thread_icmp_ln215_fu_407_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( counter_internal_blo_fu_116 );

    SC_METHOD(thread_icmp_ln224_fu_455_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( icmp_ln215_fu_407_p2 );
    sensitive << ( count_simd_1_fu_104 );

    SC_METHOD(thread_icmp_ln227_fu_472_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( icmp_ln215_fu_407_p2 );
    sensitive << ( icmp_ln224_fu_455_p2 );
    sensitive << ( k_x_1_fu_100 );

    SC_METHOD(thread_icmp_ln230_fu_486_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( icmp_ln215_fu_407_p2 );
    sensitive << ( icmp_ln224_fu_455_p2 );
    sensitive << ( icmp_ln227_fu_472_p2 );
    sensitive << ( k_y_1_fu_92 );

    SC_METHOD(thread_icmp_ln233_fu_506_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( icmp_ln215_fu_407_p2 );
    sensitive << ( icmp_ln224_fu_455_p2 );
    sensitive << ( icmp_ln227_fu_472_p2 );
    sensitive << ( icmp_ln230_fu_486_p2 );
    sensitive << ( ofm_x_fu_500_p2 );

    SC_METHOD(thread_icmp_ln236_fu_526_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( icmp_ln215_fu_407_p2 );
    sensitive << ( icmp_ln224_fu_455_p2 );
    sensitive << ( icmp_ln227_fu_472_p2 );
    sensitive << ( icmp_ln230_fu_486_p2 );
    sensitive << ( icmp_ln233_fu_506_p2 );
    sensitive << ( ofm_y_fu_520_p2 );

    SC_METHOD(thread_icmp_ln245_fu_568_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( tmp_9_fu_558_p4 );

    SC_METHOD(thread_icmp_ln252_fu_280_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( and_ln245_fu_574_p2 );
    sensitive << ( grp_fu_274_p2 );

    SC_METHOD(thread_icmp_ln257_fu_726_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln252_reg_922 );
    sensitive << ( current_block_write_7_fu_720_p2 );

    SC_METHOD(thread_icmp_ln264_fu_625_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( icmp_ln199_fu_398_p2 );
    sensitive << ( counter_internal_blo_3_fu_619_p2 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( ap_predicate_op158_read_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_inp_fu_644_p2);
    sensitive << ( inp_1_fu_96 );

    SC_METHOD(thread_inputBuf_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln221_fu_443_p1 );

    SC_METHOD(thread_inputBuf_0_V_address1);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( zext_ln248_fu_707_p1 );
    sensitive << ( zext_ln202_fu_752_p1 );
    sensitive << ( trunc_ln321_fu_758_p1 );
    sensitive << ( ap_condition_330 );
    sensitive << ( ap_condition_50 );

    SC_METHOD(thread_inputBuf_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_inputBuf_0_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln321_1_fu_713_p1 );
    sensitive << ( trunc_ln321_fu_758_p1 );

    SC_METHOD(thread_inputBuf_0_V_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln321_1_fu_713_p1 );
    sensitive << ( trunc_ln321_fu_758_p1 );

    SC_METHOD(thread_inputBuf_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln221_fu_443_p1 );

    SC_METHOD(thread_inputBuf_1_V_address1);
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( zext_ln248_fu_707_p1 );
    sensitive << ( zext_ln202_fu_752_p1 );
    sensitive << ( trunc_ln321_fu_758_p1 );
    sensitive << ( ap_condition_50 );
    sensitive << ( ap_condition_341 );

    SC_METHOD(thread_inputBuf_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_inputBuf_1_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln321_1_fu_713_p1 );
    sensitive << ( trunc_ln321_fu_758_p1 );

    SC_METHOD(thread_inputBuf_1_V_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( and_ln245_reg_918 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln321_1_fu_713_p1 );
    sensitive << ( trunc_ln321_fu_758_p1 );

    SC_METHOD(thread_k_x_fu_466_p2);
    sensitive << ( k_x_1_fu_100 );

    SC_METHOD(thread_k_y_fu_425_p2);
    sensitive << ( k_y_1_fu_92 );

    SC_METHOD(thread_numReps_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( numReps_empty_n );

    SC_METHOD(thread_numReps_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( numReps_empty_n );

    SC_METHOD(thread_ofm_x_fu_500_p2);
    sensitive << ( ofm_x_1_fu_88 );

    SC_METHOD(thread_ofm_y_fu_520_p2);
    sensitive << ( ofm_y_1_i_fu_84 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln199_reg_883 );
    sensitive << ( icmp_ln215_reg_887 );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op155_write_state3 );
    sensitive << ( inputBuf_0_V_q0 );
    sensitive << ( inputBuf_1_V_q0 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( xor_ln221_fu_692_p2 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op155_write_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_shl34_fu_322_p1);
    sensitive << ( tmp_1_fu_314_p3 );

    SC_METHOD(thread_p_shl_fu_310_p1);
    sensitive << ( tmp_fu_302_p3 );

    SC_METHOD(thread_read_block_3_fu_594_p3);
    sensitive << ( icmp_ln252_fu_280_p2 );
    sensitive << ( trunc_ln197_fu_384_p1 );
    sensitive << ( add_ln255_fu_580_p2 );

    SC_METHOD(thread_read_block_fu_660_p2);
    sensitive << ( select_ln197_fu_375_p3 );

    SC_METHOD(thread_select_ln197_fu_375_p3);
    sensitive << ( read_block_2_fu_80 );
    sensitive << ( icmp_ln197_fu_369_p2 );

    SC_METHOD(thread_select_ln236_1_fu_540_p3);
    sensitive << ( ofm_y_fu_520_p2 );
    sensitive << ( icmp_ln236_fu_526_p2 );

    SC_METHOD(thread_select_ln236_fu_532_p3);
    sensitive << ( inp_1_fu_96 );
    sensitive << ( icmp_ln236_fu_526_p2 );

    SC_METHOD(thread_select_ln252_fu_586_p3);
    sensitive << ( icmp_ln252_fu_280_p2 );
    sensitive << ( grp_fu_274_p2 );

    SC_METHOD(thread_select_ln264_fu_631_p3);
    sensitive << ( counter_internal_blo_3_fu_619_p2 );
    sensitive << ( icmp_ln264_fu_625_p2 );

    SC_METHOD(thread_tmp_1_fu_314_p3);
    sensitive << ( numReps_dout );

    SC_METHOD(thread_tmp_8_fu_388_p4);
    sensitive << ( inp_1_fu_96 );

    SC_METHOD(thread_tmp_9_fu_558_p4);
    sensitive << ( select_ln197_fu_375_p3 );

    SC_METHOD(thread_tmp_fu_302_p3);
    sensitive << ( numReps_dout );

    SC_METHOD(thread_trunc_ln197_fu_384_p1);
    sensitive << ( select_ln197_fu_375_p3 );

    SC_METHOD(thread_trunc_ln216_1_fu_688_p1);
    sensitive << ( current_block_write_5_fu_108 );

    SC_METHOD(thread_trunc_ln216_fu_685_p1);
    sensitive << ( k_y_1_load_reg_891 );

    SC_METHOD(thread_trunc_ln321_1_fu_713_p1);
    sensitive << ( current_block_write_5_fu_108 );

    SC_METHOD(thread_trunc_ln321_fu_758_p1);
    sensitive << ( current_block_write_5_fu_108 );

    SC_METHOD(thread_xor_ln221_fu_692_p2);
    sensitive << ( trunc_ln216_1_fu_688_p1 );
    sensitive << ( trunc_ln216_fu_685_p1 );

    SC_METHOD(thread_zext_ln202_fu_752_p1);
    sensitive << ( reg_298 );

    SC_METHOD(thread_zext_ln221_fu_443_p1);
    sensitive << ( current_line_in_bloc_fu_437_p2 );

    SC_METHOD(thread_zext_ln248_fu_707_p1);
    sensitive << ( reg_298 );

    SC_METHOD(thread_zext_ln252_fu_602_p1);
    sensitive << ( read_block_3_fu_594_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( numReps_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln196_fu_352_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "ConvolutionInputGene_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
    sc_trace(mVcdFile, numReps_dout, "(port)numReps_dout");
    sc_trace(mVcdFile, numReps_empty_n, "(port)numReps_empty_n");
    sc_trace(mVcdFile, numReps_read, "(port)numReps_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln199_reg_883, "icmp_ln199_reg_883");
    sc_trace(mVcdFile, and_ln245_reg_918, "and_ln245_reg_918");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, icmp_ln215_reg_887, "icmp_ln215_reg_887");
    sc_trace(mVcdFile, numReps_blk_n, "numReps_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_209, "indvar_flatten_reg_209");
    sc_trace(mVcdFile, i_0_i_reg_220, "i_0_i_reg_220");
    sc_trace(mVcdFile, reg_298, "reg_298");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op155_write_state3, "ap_predicate_op155_write_state3");
    sc_trace(mVcdFile, ap_predicate_op158_read_state3, "ap_predicate_op158_read_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln196_fu_352_p2, "icmp_ln196_fu_352_p2");
    sc_trace(mVcdFile, icmp_ln199_fu_398_p2, "icmp_ln199_fu_398_p2");
    sc_trace(mVcdFile, and_ln245_fu_574_p2, "and_ln245_fu_574_p2");
    sc_trace(mVcdFile, bound_fu_326_p2, "bound_fu_326_p2");
    sc_trace(mVcdFile, bound_reg_869, "bound_reg_869");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, add_ln196_fu_357_p2, "add_ln196_fu_357_p2");
    sc_trace(mVcdFile, icmp_ln215_fu_407_p2, "icmp_ln215_fu_407_p2");
    sc_trace(mVcdFile, k_y_1_load_reg_891, "k_y_1_load_reg_891");
    sc_trace(mVcdFile, icmp_ln252_fu_280_p2, "icmp_ln252_fu_280_p2");
    sc_trace(mVcdFile, icmp_ln252_reg_922, "icmp_ln252_reg_922");
    sc_trace(mVcdFile, icmp_ln205_fu_286_p2, "icmp_ln205_fu_286_p2");
    sc_trace(mVcdFile, icmp_ln205_reg_927, "icmp_ln205_reg_927");
    sc_trace(mVcdFile, i_fu_677_p3, "i_fu_677_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, inputBuf_0_V_address0, "inputBuf_0_V_address0");
    sc_trace(mVcdFile, inputBuf_0_V_ce0, "inputBuf_0_V_ce0");
    sc_trace(mVcdFile, inputBuf_0_V_q0, "inputBuf_0_V_q0");
    sc_trace(mVcdFile, inputBuf_0_V_address1, "inputBuf_0_V_address1");
    sc_trace(mVcdFile, inputBuf_0_V_ce1, "inputBuf_0_V_ce1");
    sc_trace(mVcdFile, inputBuf_0_V_we1, "inputBuf_0_V_we1");
    sc_trace(mVcdFile, inputBuf_1_V_address0, "inputBuf_1_V_address0");
    sc_trace(mVcdFile, inputBuf_1_V_ce0, "inputBuf_1_V_ce0");
    sc_trace(mVcdFile, inputBuf_1_V_q0, "inputBuf_1_V_q0");
    sc_trace(mVcdFile, inputBuf_1_V_address1, "inputBuf_1_V_address1");
    sc_trace(mVcdFile, inputBuf_1_V_ce1, "inputBuf_1_V_ce1");
    sc_trace(mVcdFile, inputBuf_1_V_we1, "inputBuf_1_V_we1");
    sc_trace(mVcdFile, zext_ln221_fu_443_p1, "zext_ln221_fu_443_p1");
    sc_trace(mVcdFile, zext_ln248_fu_707_p1, "zext_ln248_fu_707_p1");
    sc_trace(mVcdFile, zext_ln202_fu_752_p1, "zext_ln202_fu_752_p1");
    sc_trace(mVcdFile, read_block_2_fu_80, "read_block_2_fu_80");
    sc_trace(mVcdFile, select_ln197_fu_375_p3, "select_ln197_fu_375_p3");
    sc_trace(mVcdFile, zext_ln252_fu_602_p1, "zext_ln252_fu_602_p1");
    sc_trace(mVcdFile, read_block_fu_660_p2, "read_block_fu_660_p2");
    sc_trace(mVcdFile, ofm_y_1_i_fu_84, "ofm_y_1_i_fu_84");
    sc_trace(mVcdFile, select_ln236_1_fu_540_p3, "select_ln236_1_fu_540_p3");
    sc_trace(mVcdFile, icmp_ln224_fu_455_p2, "icmp_ln224_fu_455_p2");
    sc_trace(mVcdFile, icmp_ln227_fu_472_p2, "icmp_ln227_fu_472_p2");
    sc_trace(mVcdFile, icmp_ln230_fu_486_p2, "icmp_ln230_fu_486_p2");
    sc_trace(mVcdFile, icmp_ln233_fu_506_p2, "icmp_ln233_fu_506_p2");
    sc_trace(mVcdFile, ofm_x_1_fu_88, "ofm_x_1_fu_88");
    sc_trace(mVcdFile, ofm_x_fu_500_p2, "ofm_x_fu_500_p2");
    sc_trace(mVcdFile, k_y_1_fu_92, "k_y_1_fu_92");
    sc_trace(mVcdFile, k_y_fu_425_p2, "k_y_fu_425_p2");
    sc_trace(mVcdFile, inp_1_fu_96, "inp_1_fu_96");
    sc_trace(mVcdFile, select_ln236_fu_532_p3, "select_ln236_fu_532_p3");
    sc_trace(mVcdFile, inp_fu_644_p2, "inp_fu_644_p2");
    sc_trace(mVcdFile, k_x_1_fu_100, "k_x_1_fu_100");
    sc_trace(mVcdFile, k_x_fu_466_p2, "k_x_fu_466_p2");
    sc_trace(mVcdFile, count_simd_1_fu_104, "count_simd_1_fu_104");
    sc_trace(mVcdFile, count_simd_fu_449_p2, "count_simd_fu_449_p2");
    sc_trace(mVcdFile, current_block_write_5_fu_108, "current_block_write_5_fu_108");
    sc_trace(mVcdFile, current_block_write_9_fu_740_p3, "current_block_write_9_fu_740_p3");
    sc_trace(mVcdFile, current_block_write_6_fu_774_p3, "current_block_write_6_fu_774_p3");
    sc_trace(mVcdFile, current_line_2_fu_112, "current_line_2_fu_112");
    sc_trace(mVcdFile, select_ln252_fu_586_p3, "select_ln252_fu_586_p3");
    sc_trace(mVcdFile, grp_fu_274_p2, "grp_fu_274_p2");
    sc_trace(mVcdFile, counter_internal_blo_fu_116, "counter_internal_blo_fu_116");
    sc_trace(mVcdFile, select_ln264_fu_631_p3, "select_ln264_fu_631_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, trunc_ln321_1_fu_713_p1, "trunc_ln321_1_fu_713_p1");
    sc_trace(mVcdFile, trunc_ln321_fu_758_p1, "trunc_ln321_fu_758_p1");
    sc_trace(mVcdFile, tmp_fu_302_p3, "tmp_fu_302_p3");
    sc_trace(mVcdFile, tmp_1_fu_314_p3, "tmp_1_fu_314_p3");
    sc_trace(mVcdFile, p_shl_fu_310_p1, "p_shl_fu_310_p1");
    sc_trace(mVcdFile, p_shl34_fu_322_p1, "p_shl34_fu_322_p1");
    sc_trace(mVcdFile, icmp_ln197_fu_369_p2, "icmp_ln197_fu_369_p2");
    sc_trace(mVcdFile, tmp_8_fu_388_p4, "tmp_8_fu_388_p4");
    sc_trace(mVcdFile, add_ln220_fu_431_p2, "add_ln220_fu_431_p2");
    sc_trace(mVcdFile, current_line_in_bloc_fu_437_p2, "current_line_in_bloc_fu_437_p2");
    sc_trace(mVcdFile, ofm_y_fu_520_p2, "ofm_y_fu_520_p2");
    sc_trace(mVcdFile, icmp_ln236_fu_526_p2, "icmp_ln236_fu_526_p2");
    sc_trace(mVcdFile, tmp_9_fu_558_p4, "tmp_9_fu_558_p4");
    sc_trace(mVcdFile, icmp_ln245_fu_568_p2, "icmp_ln245_fu_568_p2");
    sc_trace(mVcdFile, trunc_ln197_fu_384_p1, "trunc_ln197_fu_384_p1");
    sc_trace(mVcdFile, add_ln255_fu_580_p2, "add_ln255_fu_580_p2");
    sc_trace(mVcdFile, read_block_3_fu_594_p3, "read_block_3_fu_594_p3");
    sc_trace(mVcdFile, counter_internal_blo_3_fu_619_p2, "counter_internal_blo_3_fu_619_p2");
    sc_trace(mVcdFile, icmp_ln264_fu_625_p2, "icmp_ln264_fu_625_p2");
    sc_trace(mVcdFile, add_ln197_fu_671_p2, "add_ln197_fu_671_p2");
    sc_trace(mVcdFile, trunc_ln216_1_fu_688_p1, "trunc_ln216_1_fu_688_p1");
    sc_trace(mVcdFile, trunc_ln216_fu_685_p1, "trunc_ln216_fu_685_p1");
    sc_trace(mVcdFile, xor_ln221_fu_692_p2, "xor_ln221_fu_692_p2");
    sc_trace(mVcdFile, current_block_write_7_fu_720_p2, "current_block_write_7_fu_720_p2");
    sc_trace(mVcdFile, icmp_ln257_fu_726_p2, "icmp_ln257_fu_726_p2");
    sc_trace(mVcdFile, current_block_write_8_fu_732_p3, "current_block_write_8_fu_732_p3");
    sc_trace(mVcdFile, current_block_write_fu_762_p2, "current_block_write_fu_762_p2");
    sc_trace(mVcdFile, icmp_ln208_fu_768_p2, "icmp_ln208_fu_768_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0, "ap_block_pp0");
    sc_trace(mVcdFile, ap_predicate_op66_load_state2, "ap_predicate_op66_load_state2");
    sc_trace(mVcdFile, ap_enable_operation_66, "ap_enable_operation_66");
    sc_trace(mVcdFile, ap_enable_state2_pp0_iter0_stage0, "ap_enable_state2_pp0_iter0_stage0");
    sc_trace(mVcdFile, ap_predicate_op152_load_state3, "ap_predicate_op152_load_state3");
    sc_trace(mVcdFile, ap_enable_operation_152, "ap_enable_operation_152");
    sc_trace(mVcdFile, ap_enable_state3_pp0_iter1_stage0, "ap_enable_state3_pp0_iter1_stage0");
    sc_trace(mVcdFile, ap_predicate_op164_store_state3, "ap_predicate_op164_store_state3");
    sc_trace(mVcdFile, ap_enable_operation_164, "ap_enable_operation_164");
    sc_trace(mVcdFile, ap_predicate_op185_store_state3, "ap_predicate_op185_store_state3");
    sc_trace(mVcdFile, ap_enable_operation_185, "ap_enable_operation_185");
    sc_trace(mVcdFile, ap_predicate_op67_load_state2, "ap_predicate_op67_load_state2");
    sc_trace(mVcdFile, ap_enable_operation_67, "ap_enable_operation_67");
    sc_trace(mVcdFile, ap_predicate_op153_load_state3, "ap_predicate_op153_load_state3");
    sc_trace(mVcdFile, ap_enable_operation_153, "ap_enable_operation_153");
    sc_trace(mVcdFile, ap_predicate_op166_store_state3, "ap_predicate_op166_store_state3");
    sc_trace(mVcdFile, ap_enable_operation_166, "ap_enable_operation_166");
    sc_trace(mVcdFile, ap_predicate_op187_store_state3, "ap_predicate_op187_store_state3");
    sc_trace(mVcdFile, ap_enable_operation_187, "ap_enable_operation_187");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_330, "ap_condition_330");
    sc_trace(mVcdFile, ap_condition_50, "ap_condition_50");
    sc_trace(mVcdFile, ap_condition_341, "ap_condition_341");
#endif

    }
}

ConvolutionInputGene::~ConvolutionInputGene() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete inputBuf_0_V_U;
    delete inputBuf_1_V_U;
}

void ConvolutionInputGene::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln224_fu_455_p2.read()))) {
        count_simd_1_fu_104 = count_simd_fu_449_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln233_fu_506_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln233_fu_506_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_fu_486_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln227_fu_472_p2.read())))) {
        count_simd_1_fu_104 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()))) {
        counter_internal_blo_fu_116 = select_ln264_fu_631_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln205_fu_286_p2.read())))) {
        counter_internal_blo_fu_116 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln205_reg_927.read()))) {
        current_block_write_5_fu_108 = current_block_write_6_fu_774_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        current_block_write_5_fu_108 = current_block_write_9_fu_740_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        current_block_write_5_fu_108 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_398_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln205_fu_286_p2.read()))) {
        current_line_2_fu_112 = grp_fu_274_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_fu_574_p2.read()))) {
        current_line_2_fu_112 = select_ln252_fu_586_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln205_fu_286_p2.read())))) {
        current_line_2_fu_112 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()))) {
        i_0_i_reg_220 = i_fu_677_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        i_0_i_reg_220 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()))) {
        indvar_flatten_reg_209 = add_ln196_fu_357_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        indvar_flatten_reg_209 = ap_const_lv41_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_398_p2.read()))) {
        inp_1_fu_96 = inp_fu_644_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln233_fu_506_p2.read()))) {
        inp_1_fu_96 = select_ln236_fu_532_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        inp_1_fu_96 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln227_fu_472_p2.read()))) {
        k_x_1_fu_100 = k_x_fu_466_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln233_fu_506_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln233_fu_506_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_fu_486_p2.read())))) {
        k_x_1_fu_100 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_fu_486_p2.read()))) {
        k_y_1_fu_92 = k_y_fu_425_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read())))) {
        k_y_1_fu_92 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln233_fu_506_p2.read()))) {
        ofm_x_1_fu_88 = ofm_x_fu_500_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read()))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln233_fu_506_p2.read())))) {
        ofm_x_1_fu_88 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln224_fu_455_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln227_fu_472_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln230_fu_486_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln233_fu_506_p2.read()))) {
        ofm_y_1_i_fu_84 = select_ln236_1_fu_540_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        ofm_y_1_i_fu_84 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_398_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln205_fu_286_p2.read()))) {
        read_block_2_fu_80 = read_block_fu_660_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_fu_574_p2.read()))) {
        read_block_2_fu_80 = zext_ln252_fu_602_p1.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln245_fu_574_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_398_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln205_fu_286_p2.read())))) {
        read_block_2_fu_80 = select_ln197_fu_375_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        read_block_2_fu_80 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()))) {
        and_ln245_reg_918 = and_ln245_fu_574_p2.read();
        icmp_ln215_reg_887 = icmp_ln215_fu_407_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        bound_reg_869 = bound_fu_326_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()))) {
        icmp_ln199_reg_883 = icmp_ln199_fu_398_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_398_p2.read()))) {
        icmp_ln205_reg_927 = icmp_ln205_fu_286_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_fu_574_p2.read()))) {
        icmp_ln252_reg_922 = icmp_ln252_fu_280_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()))) {
        k_y_1_load_reg_891 = k_y_1_fu_92.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_fu_574_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln199_fu_398_p2.read())))) {
        reg_298 = current_line_2_fu_112.read();
    }
}

void ConvolutionInputGene::thread_add_ln196_fu_357_p2() {
    add_ln196_fu_357_p2 = (!indvar_flatten_reg_209.read().is_01() || !ap_const_lv41_1.is_01())? sc_lv<41>(): (sc_biguint<41>(indvar_flatten_reg_209.read()) + sc_biguint<41>(ap_const_lv41_1));
}

void ConvolutionInputGene::thread_add_ln197_fu_671_p2() {
    add_ln197_fu_671_p2 = (!i_0_i_reg_220.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_i_reg_220.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void ConvolutionInputGene::thread_add_ln220_fu_431_p2() {
    add_ln220_fu_431_p2 = (!ofm_x_1_fu_88.read().is_01() || !count_simd_1_fu_104.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ofm_x_1_fu_88.read()) + sc_biguint<32>(count_simd_1_fu_104.read()));
}

void ConvolutionInputGene::thread_add_ln255_fu_580_p2() {
    add_ln255_fu_580_p2 = (!trunc_ln197_fu_384_p1.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(trunc_ln197_fu_384_p1.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void ConvolutionInputGene::thread_and_ln245_fu_574_p2() {
    and_ln245_fu_574_p2 = (icmp_ln215_fu_407_p2.read() & icmp_ln245_fu_568_p2.read());
}

void ConvolutionInputGene::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void ConvolutionInputGene::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void ConvolutionInputGene::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void ConvolutionInputGene::thread_ap_block_pp0() {
    ap_block_pp0 = (esl_seteq<1,3,3>(ap_ST_fsm_pp0_stage0, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp0_stage0_subdone.read()));
}

void ConvolutionInputGene::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ConvolutionInputGene::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op155_write_state3.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state3.read())) || 
  (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()))));
}

void ConvolutionInputGene::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op155_write_state3.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state3.read())) || 
  (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()))));
}

void ConvolutionInputGene::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op155_write_state3.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state3.read())) || 
  (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()))));
}

void ConvolutionInputGene::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read()));
}

void ConvolutionInputGene::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void ConvolutionInputGene::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op155_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state3.read())) || (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())));
}

void ConvolutionInputGene::thread_ap_condition_330() {
    ap_condition_330 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln321_1_fu_713_p1.read()));
}

void ConvolutionInputGene::thread_ap_condition_341() {
    ap_condition_341 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln321_1_fu_713_p1.read()));
}

void ConvolutionInputGene::thread_ap_condition_50() {
    ap_condition_50 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void ConvolutionInputGene::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln196_fu_352_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void ConvolutionInputGene::thread_ap_enable_operation_152() {
    ap_enable_operation_152 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op152_load_state3.read());
}

void ConvolutionInputGene::thread_ap_enable_operation_153() {
    ap_enable_operation_153 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op153_load_state3.read());
}

void ConvolutionInputGene::thread_ap_enable_operation_164() {
    ap_enable_operation_164 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op164_store_state3.read());
}

void ConvolutionInputGene::thread_ap_enable_operation_166() {
    ap_enable_operation_166 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op166_store_state3.read());
}

void ConvolutionInputGene::thread_ap_enable_operation_185() {
    ap_enable_operation_185 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op185_store_state3.read());
}

void ConvolutionInputGene::thread_ap_enable_operation_187() {
    ap_enable_operation_187 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op187_store_state3.read());
}

void ConvolutionInputGene::thread_ap_enable_operation_66() {
    ap_enable_operation_66 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op66_load_state2.read());
}

void ConvolutionInputGene::thread_ap_enable_operation_67() {
    ap_enable_operation_67 = esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op67_load_state2.read());
}

void ConvolutionInputGene::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void ConvolutionInputGene::thread_ap_enable_state2_pp0_iter0_stage0() {
    ap_enable_state2_pp0_iter0_stage0 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1));
}

void ConvolutionInputGene::thread_ap_enable_state3_pp0_iter1_stage0() {
    ap_enable_state3_pp0_iter1_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1));
}

void ConvolutionInputGene::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_ap_predicate_op152_load_state3() {
    ap_predicate_op152_load_state3 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_reg_887.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op153_load_state3() {
    ap_predicate_op153_load_state3 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_reg_887.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op155_write_state3() {
    ap_predicate_op155_write_state3 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_reg_887.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op158_read_state3() {
    ap_predicate_op158_read_state3 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op164_store_state3() {
    ap_predicate_op164_store_state3 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln321_1_fu_713_p1.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op166_store_state3() {
    ap_predicate_op166_store_state3 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln321_1_fu_713_p1.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op185_store_state3() {
    ap_predicate_op185_store_state3 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln321_fu_758_p1.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op187_store_state3() {
    ap_predicate_op187_store_state3 = (esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln321_fu_758_p1.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op66_load_state2() {
    ap_predicate_op66_load_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()));
}

void ConvolutionInputGene::thread_ap_predicate_op67_load_state2() {
    ap_predicate_op67_load_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln196_fu_352_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln199_fu_398_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_fu_407_p2.read()));
}

void ConvolutionInputGene::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_bound_fu_326_p2() {
    bound_fu_326_p2 = (!p_shl_fu_310_p1.read().is_01() || !p_shl34_fu_322_p1.read().is_01())? sc_lv<41>(): (sc_biguint<41>(p_shl_fu_310_p1.read()) + sc_biguint<41>(p_shl34_fu_322_p1.read()));
}

void ConvolutionInputGene::thread_count_simd_fu_449_p2() {
    count_simd_fu_449_p2 = (!ap_const_lv32_1.is_01() || !count_simd_1_fu_104.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(count_simd_1_fu_104.read()));
}

void ConvolutionInputGene::thread_counter_internal_blo_3_fu_619_p2() {
    counter_internal_blo_3_fu_619_p2 = (!counter_internal_blo_fu_116.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(counter_internal_blo_fu_116.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_current_block_write_6_fu_774_p3() {
    current_block_write_6_fu_774_p3 = (!icmp_ln208_fu_768_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln208_fu_768_p2.read()[0].to_bool())? ap_const_lv32_0: current_block_write_fu_762_p2.read());
}

void ConvolutionInputGene::thread_current_block_write_7_fu_720_p2() {
    current_block_write_7_fu_720_p2 = (!current_block_write_5_fu_108.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(current_block_write_5_fu_108.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_current_block_write_8_fu_732_p3() {
    current_block_write_8_fu_732_p3 = (!icmp_ln257_fu_726_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln257_fu_726_p2.read()[0].to_bool())? ap_const_lv32_0: current_block_write_7_fu_720_p2.read());
}

void ConvolutionInputGene::thread_current_block_write_9_fu_740_p3() {
    current_block_write_9_fu_740_p3 = (!icmp_ln252_reg_922.read()[0].is_01())? sc_lv<32>(): ((icmp_ln252_reg_922.read()[0].to_bool())? current_block_write_8_fu_732_p3.read(): current_block_write_5_fu_108.read());
}

void ConvolutionInputGene::thread_current_block_write_fu_762_p2() {
    current_block_write_fu_762_p2 = (!current_block_write_5_fu_108.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(current_block_write_5_fu_108.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_current_line_in_bloc_fu_437_p2() {
    current_line_in_bloc_fu_437_p2 = (!add_ln220_fu_431_p2.read().is_01() || !k_x_1_fu_100.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln220_fu_431_p2.read()) + sc_biguint<32>(k_x_1_fu_100.read()));
}

void ConvolutionInputGene::thread_grp_fu_274_p2() {
    grp_fu_274_p2 = (!current_line_2_fu_112.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(current_line_2_fu_112.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_i_fu_677_p3() {
    i_fu_677_p3 = (!icmp_ln197_fu_369_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln197_fu_369_p2.read()[0].to_bool())? ap_const_lv9_1: add_ln197_fu_671_p2.read());
}

void ConvolutionInputGene::thread_icmp_ln196_fu_352_p2() {
    icmp_ln196_fu_352_p2 = (!indvar_flatten_reg_209.read().is_01() || !bound_reg_869.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_209.read() == bound_reg_869.read());
}

void ConvolutionInputGene::thread_icmp_ln197_fu_369_p2() {
    icmp_ln197_fu_369_p2 = (!i_0_i_reg_220.read().is_01() || !ap_const_lv9_110.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_220.read() == ap_const_lv9_110);
}

void ConvolutionInputGene::thread_icmp_ln199_fu_398_p2() {
    icmp_ln199_fu_398_p2 = (!tmp_8_fu_388_p4.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_388_p4.read() == ap_const_lv28_0);
}

void ConvolutionInputGene::thread_icmp_ln205_fu_286_p2() {
    icmp_ln205_fu_286_p2 = (!grp_fu_274_p2.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_274_p2.read() == ap_const_lv32_10);
}

void ConvolutionInputGene::thread_icmp_ln208_fu_768_p2() {
    icmp_ln208_fu_768_p2 = (!current_block_write_fu_762_p2.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): sc_lv<1>(current_block_write_fu_762_p2.read() == ap_const_lv32_2);
}

void ConvolutionInputGene::thread_icmp_ln215_fu_407_p2() {
    icmp_ln215_fu_407_p2 = (!counter_internal_blo_fu_116.read().is_01() || !ap_const_lv32_F.is_01())? sc_lv<1>(): (sc_biguint<32>(counter_internal_blo_fu_116.read()) < sc_biguint<32>(ap_const_lv32_F));
}

void ConvolutionInputGene::thread_icmp_ln224_fu_455_p2() {
    icmp_ln224_fu_455_p2 = (!count_simd_1_fu_104.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(count_simd_1_fu_104.read() == ap_const_lv32_0);
}

void ConvolutionInputGene::thread_icmp_ln227_fu_472_p2() {
    icmp_ln227_fu_472_p2 = (!k_x_1_fu_100.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(k_x_1_fu_100.read() == ap_const_lv32_0);
}

void ConvolutionInputGene::thread_icmp_ln230_fu_486_p2() {
    icmp_ln230_fu_486_p2 = (!k_y_1_fu_92.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(k_y_1_fu_92.read() == ap_const_lv32_0);
}

void ConvolutionInputGene::thread_icmp_ln233_fu_506_p2() {
    icmp_ln233_fu_506_p2 = (!ofm_x_fu_500_p2.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(ofm_x_fu_500_p2.read() == ap_const_lv32_10);
}

void ConvolutionInputGene::thread_icmp_ln236_fu_526_p2() {
    icmp_ln236_fu_526_p2 = (!ofm_y_fu_520_p2.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(ofm_y_fu_520_p2.read() == ap_const_lv32_10);
}

void ConvolutionInputGene::thread_icmp_ln245_fu_568_p2() {
    icmp_ln245_fu_568_p2 = (!tmp_9_fu_558_p4.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_558_p4.read() == ap_const_lv28_0);
}

void ConvolutionInputGene::thread_icmp_ln252_fu_280_p2() {
    icmp_ln252_fu_280_p2 = (!grp_fu_274_p2.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_274_p2.read() == ap_const_lv32_10);
}

void ConvolutionInputGene::thread_icmp_ln257_fu_726_p2() {
    icmp_ln257_fu_726_p2 = (!current_block_write_7_fu_720_p2.read().is_01() || !ap_const_lv32_2.is_01())? sc_lv<1>(): sc_lv<1>(current_block_write_7_fu_720_p2.read() == ap_const_lv32_2);
}

void ConvolutionInputGene::thread_icmp_ln264_fu_625_p2() {
    icmp_ln264_fu_625_p2 = (!counter_internal_blo_3_fu_619_p2.read().is_01() || !ap_const_lv32_F.is_01())? sc_lv<1>(): sc_lv<1>(counter_internal_blo_3_fu_619_p2.read() == ap_const_lv32_F);
}

void ConvolutionInputGene::thread_in_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read())))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void ConvolutionInputGene::thread_in_V_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op158_read_state3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_inp_fu_644_p2() {
    inp_fu_644_p2 = (!inp_1_fu_96.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(inp_1_fu_96.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_inputBuf_0_V_address0() {
    inputBuf_0_V_address0 =  (sc_lv<4>) (zext_ln221_fu_443_p1.read());
}

void ConvolutionInputGene::thread_inputBuf_0_V_address1() {
    if (esl_seteq<1,1,1>(ap_condition_50.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln321_fu_758_p1.read()))) {
            inputBuf_0_V_address1 =  (sc_lv<4>) (zext_ln202_fu_752_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_330.read(), ap_const_boolean_1)) {
            inputBuf_0_V_address1 =  (sc_lv<4>) (zext_ln248_fu_707_p1.read());
        } else {
            inputBuf_0_V_address1 = "XXXX";
        }
    } else {
        inputBuf_0_V_address1 = "XXXX";
    }
}

void ConvolutionInputGene::thread_inputBuf_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inputBuf_0_V_ce0 = ap_const_logic_1;
    } else {
        inputBuf_0_V_ce0 = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_inputBuf_0_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln321_1_fu_713_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln321_fu_758_p1.read())))) {
        inputBuf_0_V_ce1 = ap_const_logic_1;
    } else {
        inputBuf_0_V_ce1 = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_inputBuf_0_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln321_1_fu_713_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln321_fu_758_p1.read())))) {
        inputBuf_0_V_we1 = ap_const_logic_1;
    } else {
        inputBuf_0_V_we1 = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_inputBuf_1_V_address0() {
    inputBuf_1_V_address0 =  (sc_lv<4>) (zext_ln221_fu_443_p1.read());
}

void ConvolutionInputGene::thread_inputBuf_1_V_address1() {
    if (esl_seteq<1,1,1>(ap_condition_50.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln321_fu_758_p1.read()))) {
            inputBuf_1_V_address1 =  (sc_lv<4>) (zext_ln202_fu_752_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_341.read(), ap_const_boolean_1)) {
            inputBuf_1_V_address1 =  (sc_lv<4>) (zext_ln248_fu_707_p1.read());
        } else {
            inputBuf_1_V_address1 = "XXXX";
        }
    } else {
        inputBuf_1_V_address1 = "XXXX";
    }
}

void ConvolutionInputGene::thread_inputBuf_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        inputBuf_1_V_ce0 = ap_const_logic_1;
    } else {
        inputBuf_1_V_ce0 = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_inputBuf_1_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln321_1_fu_713_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln321_fu_758_p1.read())))) {
        inputBuf_1_V_ce1 = ap_const_logic_1;
    } else {
        inputBuf_1_V_ce1 = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_inputBuf_1_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln245_reg_918.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln321_1_fu_713_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln321_fu_758_p1.read())))) {
        inputBuf_1_V_we1 = ap_const_logic_1;
    } else {
        inputBuf_1_V_we1 = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_k_x_fu_466_p2() {
    k_x_fu_466_p2 = (!k_x_1_fu_100.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(k_x_1_fu_100.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_k_y_fu_425_p2() {
    k_y_fu_425_p2 = (!ap_const_lv32_1.is_01() || !k_y_1_fu_92.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(k_y_1_fu_92.read()));
}

void ConvolutionInputGene::thread_numReps_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        numReps_blk_n = numReps_empty_n.read();
    } else {
        numReps_blk_n = ap_const_logic_1;
    }
}

void ConvolutionInputGene::thread_numReps_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
        numReps_read = ap_const_logic_1;
    } else {
        numReps_read = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_ofm_x_fu_500_p2() {
    ofm_x_fu_500_p2 = (!ofm_x_1_fu_88.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ofm_x_1_fu_88.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_ofm_y_fu_520_p2() {
    ofm_y_fu_520_p2 = (!ofm_y_1_i_fu_84.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ofm_y_1_i_fu_84.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln199_reg_883.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln215_reg_887.read()))) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void ConvolutionInputGene::thread_out_V_V_din() {
    out_V_V_din = (!xor_ln221_fu_692_p2.read()[0].is_01())? sc_lv<3>(): ((xor_ln221_fu_692_p2.read()[0].to_bool())? inputBuf_0_V_q0.read(): inputBuf_1_V_q0.read());
}

void ConvolutionInputGene::thread_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op155_write_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void ConvolutionInputGene::thread_p_shl34_fu_322_p1() {
    p_shl34_fu_322_p1 = esl_zext<41,36>(tmp_1_fu_314_p3.read());
}

void ConvolutionInputGene::thread_p_shl_fu_310_p1() {
    p_shl_fu_310_p1 = esl_zext<41,40>(tmp_fu_302_p3.read());
}

void ConvolutionInputGene::thread_read_block_3_fu_594_p3() {
    read_block_3_fu_594_p3 = (!icmp_ln252_fu_280_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln252_fu_280_p2.read()[0].to_bool())? add_ln255_fu_580_p2.read(): trunc_ln197_fu_384_p1.read());
}

void ConvolutionInputGene::thread_read_block_fu_660_p2() {
    read_block_fu_660_p2 = (!select_ln197_fu_375_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln197_fu_375_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void ConvolutionInputGene::thread_select_ln197_fu_375_p3() {
    select_ln197_fu_375_p3 = (!icmp_ln197_fu_369_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln197_fu_369_p2.read()[0].to_bool())? ap_const_lv32_0: read_block_2_fu_80.read());
}

void ConvolutionInputGene::thread_select_ln236_1_fu_540_p3() {
    select_ln236_1_fu_540_p3 = (!icmp_ln236_fu_526_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln236_fu_526_p2.read()[0].to_bool())? ap_const_lv32_0: ofm_y_fu_520_p2.read());
}

void ConvolutionInputGene::thread_select_ln236_fu_532_p3() {
    select_ln236_fu_532_p3 = (!icmp_ln236_fu_526_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln236_fu_526_p2.read()[0].to_bool())? ap_const_lv32_0: inp_1_fu_96.read());
}

void ConvolutionInputGene::thread_select_ln252_fu_586_p3() {
    select_ln252_fu_586_p3 = (!icmp_ln252_fu_280_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln252_fu_280_p2.read()[0].to_bool())? ap_const_lv32_0: grp_fu_274_p2.read());
}

void ConvolutionInputGene::thread_select_ln264_fu_631_p3() {
    select_ln264_fu_631_p3 = (!icmp_ln264_fu_625_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln264_fu_625_p2.read()[0].to_bool())? ap_const_lv32_0: counter_internal_blo_3_fu_619_p2.read());
}

void ConvolutionInputGene::thread_tmp_1_fu_314_p3() {
    tmp_1_fu_314_p3 = esl_concat<32,4>(numReps_dout.read(), ap_const_lv4_0);
}

void ConvolutionInputGene::thread_tmp_8_fu_388_p4() {
    tmp_8_fu_388_p4 = inp_1_fu_96.read().range(31, 4);
}

void ConvolutionInputGene::thread_tmp_9_fu_558_p4() {
    tmp_9_fu_558_p4 = select_ln197_fu_375_p3.read().range(31, 4);
}

void ConvolutionInputGene::thread_tmp_fu_302_p3() {
    tmp_fu_302_p3 = esl_concat<32,8>(numReps_dout.read(), ap_const_lv8_0);
}

void ConvolutionInputGene::thread_trunc_ln197_fu_384_p1() {
    trunc_ln197_fu_384_p1 = select_ln197_fu_375_p3.read().range(5-1, 0);
}

void ConvolutionInputGene::thread_trunc_ln216_1_fu_688_p1() {
    trunc_ln216_1_fu_688_p1 = current_block_write_5_fu_108.read().range(1-1, 0);
}

void ConvolutionInputGene::thread_trunc_ln216_fu_685_p1() {
    trunc_ln216_fu_685_p1 = k_y_1_load_reg_891.read().range(1-1, 0);
}

void ConvolutionInputGene::thread_trunc_ln321_1_fu_713_p1() {
    trunc_ln321_1_fu_713_p1 = current_block_write_5_fu_108.read().range(1-1, 0);
}

void ConvolutionInputGene::thread_trunc_ln321_fu_758_p1() {
    trunc_ln321_fu_758_p1 = current_block_write_5_fu_108.read().range(1-1, 0);
}

void ConvolutionInputGene::thread_xor_ln221_fu_692_p2() {
    xor_ln221_fu_692_p2 = (trunc_ln216_1_fu_688_p1.read() ^ trunc_ln216_fu_685_p1.read());
}

void ConvolutionInputGene::thread_zext_ln202_fu_752_p1() {
    zext_ln202_fu_752_p1 = esl_zext<64,32>(reg_298.read());
}

void ConvolutionInputGene::thread_zext_ln221_fu_443_p1() {
    zext_ln221_fu_443_p1 = esl_zext<64,32>(current_line_in_bloc_fu_437_p2.read());
}

void ConvolutionInputGene::thread_zext_ln248_fu_707_p1() {
    zext_ln248_fu_707_p1 = esl_zext<64,32>(reg_298.read());
}

void ConvolutionInputGene::thread_zext_ln252_fu_602_p1() {
    zext_ln252_fu_602_p1 = esl_zext<32,5>(read_block_3_fu_594_p3.read());
}

void ConvolutionInputGene::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, numReps_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln196_fu_352_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln196_fu_352_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<3>) ("XXX");
            break;
    }
}

}

