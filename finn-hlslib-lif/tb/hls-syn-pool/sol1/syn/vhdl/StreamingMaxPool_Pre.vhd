-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity StreamingMaxPool_Pre is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_V_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    in_V_V_empty_n : IN STD_LOGIC;
    in_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (47 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of StreamingMaxPool_Pre is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i_fu_722_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln152_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal yp_fu_754_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal yp_reg_1216 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln153_fu_766_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln153_reg_1224 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln154_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln154_reg_1229 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln153_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln154_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln154_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln164_fu_810_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln164_reg_1240 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_0_V_addr_2_reg_1245 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_1_V_addr_2_reg_1250 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2_V_addr_2_reg_1255 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_3_V_addr_2_reg_1260 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_4_V_addr_2_reg_1265 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_5_V_addr_2_reg_1270 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_6_V_addr_2_reg_1275 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_7_V_addr_2_reg_1280 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_8_V_addr_2_reg_1285 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_9_V_addr_2_reg_1290 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_10_V_addr_2_reg_1295 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_11_V_addr_2_reg_1300 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_12_V_addr_2_reg_1305 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_13_V_addr_2_reg_1310 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_14_V_addr_2_reg_1315 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_15_V_addr_2_reg_1320 : STD_LOGIC_VECTOR (2 downto 0);
    signal kx_fu_1114_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln154_1_fu_1128_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal outpix_fu_1141_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal outpix_reg_1386 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln172_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_we0 : STD_LOGIC;
    signal buf_0_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_we0 : STD_LOGIC;
    signal buf_1_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_we0 : STD_LOGIC;
    signal buf_2_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_3_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_3_V_ce0 : STD_LOGIC;
    signal buf_3_V_we0 : STD_LOGIC;
    signal buf_3_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_3_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_4_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_4_V_ce0 : STD_LOGIC;
    signal buf_4_V_we0 : STD_LOGIC;
    signal buf_4_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_4_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_5_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_5_V_ce0 : STD_LOGIC;
    signal buf_5_V_we0 : STD_LOGIC;
    signal buf_5_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_5_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_6_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_6_V_ce0 : STD_LOGIC;
    signal buf_6_V_we0 : STD_LOGIC;
    signal buf_6_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_6_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_7_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_7_V_ce0 : STD_LOGIC;
    signal buf_7_V_we0 : STD_LOGIC;
    signal buf_7_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_7_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_8_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_8_V_ce0 : STD_LOGIC;
    signal buf_8_V_we0 : STD_LOGIC;
    signal buf_8_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_8_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_9_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_9_V_ce0 : STD_LOGIC;
    signal buf_9_V_we0 : STD_LOGIC;
    signal buf_9_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_9_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_10_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_10_V_ce0 : STD_LOGIC;
    signal buf_10_V_we0 : STD_LOGIC;
    signal buf_10_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_10_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_11_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_11_V_ce0 : STD_LOGIC;
    signal buf_11_V_we0 : STD_LOGIC;
    signal buf_11_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_11_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_12_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_12_V_ce0 : STD_LOGIC;
    signal buf_12_V_we0 : STD_LOGIC;
    signal buf_12_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_12_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_13_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_13_V_ce0 : STD_LOGIC;
    signal buf_13_V_we0 : STD_LOGIC;
    signal buf_13_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_13_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_14_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_14_V_ce0 : STD_LOGIC;
    signal buf_14_V_we0 : STD_LOGIC;
    signal buf_14_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_14_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_15_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_15_V_ce0 : STD_LOGIC;
    signal buf_15_V_we0 : STD_LOGIC;
    signal buf_15_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_15_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_reg_637 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln145_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal yp_0_reg_648 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten45_reg_659 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_reg_670 : STD_LOGIC_VECTOR (5 downto 0);
    signal xp_0_reg_682 : STD_LOGIC_VECTOR (3 downto 0);
    signal kx_0_reg_693 : STD_LOGIC_VECTOR (1 downto 0);
    signal outpix_0_reg_705 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln148_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln164_fu_818_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln177_fu_1147_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln895_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_fu_838_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_1_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_849_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_2_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_866_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_3_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_883_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_4_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_900_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_5_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_fu_917_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_6_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_934_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_7_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_fu_951_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_8_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_8_fu_968_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_9_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_fu_985_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_10_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_1002_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_11_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_fu_1019_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_12_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_fu_1036_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_13_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_12_fu_1053_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_14_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_13_fu_1070_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln895_15_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_14_fu_1087_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln156_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln154_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln154_fu_778_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xp_fu_804_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln156_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln156_fu_1104_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln154_1_fu_1122_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component StreamingMaxPool_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (2 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;



begin
    buf_0_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        we0 => buf_0_V_we0,
        d0 => buf_0_V_d0,
        q0 => buf_0_V_q0);

    buf_1_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        we0 => buf_1_V_we0,
        d0 => buf_1_V_d0,
        q0 => buf_1_V_q0);

    buf_2_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        we0 => buf_2_V_we0,
        d0 => buf_2_V_d0,
        q0 => buf_2_V_q0);

    buf_3_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_3_V_address0,
        ce0 => buf_3_V_ce0,
        we0 => buf_3_V_we0,
        d0 => buf_3_V_d0,
        q0 => buf_3_V_q0);

    buf_4_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_4_V_address0,
        ce0 => buf_4_V_ce0,
        we0 => buf_4_V_we0,
        d0 => buf_4_V_d0,
        q0 => buf_4_V_q0);

    buf_5_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_5_V_address0,
        ce0 => buf_5_V_ce0,
        we0 => buf_5_V_we0,
        d0 => buf_5_V_d0,
        q0 => buf_5_V_q0);

    buf_6_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_6_V_address0,
        ce0 => buf_6_V_ce0,
        we0 => buf_6_V_we0,
        d0 => buf_6_V_d0,
        q0 => buf_6_V_q0);

    buf_7_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_7_V_address0,
        ce0 => buf_7_V_ce0,
        we0 => buf_7_V_we0,
        d0 => buf_7_V_d0,
        q0 => buf_7_V_q0);

    buf_8_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_8_V_address0,
        ce0 => buf_8_V_ce0,
        we0 => buf_8_V_we0,
        d0 => buf_8_V_d0,
        q0 => buf_8_V_q0);

    buf_9_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_9_V_address0,
        ce0 => buf_9_V_ce0,
        we0 => buf_9_V_we0,
        d0 => buf_9_V_d0,
        q0 => buf_9_V_q0);

    buf_10_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_10_V_address0,
        ce0 => buf_10_V_ce0,
        we0 => buf_10_V_we0,
        d0 => buf_10_V_d0,
        q0 => buf_10_V_q0);

    buf_11_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_11_V_address0,
        ce0 => buf_11_V_ce0,
        we0 => buf_11_V_we0,
        d0 => buf_11_V_d0,
        q0 => buf_11_V_q0);

    buf_12_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_12_V_address0,
        ce0 => buf_12_V_ce0,
        we0 => buf_12_V_we0,
        d0 => buf_12_V_d0,
        q0 => buf_12_V_q0);

    buf_13_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_13_V_address0,
        ce0 => buf_13_V_ce0,
        we0 => buf_13_V_we0,
        d0 => buf_13_V_d0,
        q0 => buf_13_V_q0);

    buf_14_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_14_V_address0,
        ce0 => buf_14_V_ce0,
        we0 => buf_14_V_we0,
        d0 => buf_14_V_d0,
        q0 => buf_14_V_q0);

    buf_15_V_U : component StreamingMaxPool_bkb
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_15_V_address0,
        ce0 => buf_15_V_ce0,
        we0 => buf_15_V_we0,
        d0 => buf_15_V_d0,
        q0 => buf_15_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_0_reg_637_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_0_reg_637 <= i_fu_722_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_637 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten45_reg_659_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln152_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvar_flatten45_reg_659 <= ap_const_lv6_0;
            elsif (((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                indvar_flatten45_reg_659 <= add_ln153_reg_1224;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_670_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln152_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvar_flatten_reg_670 <= ap_const_lv6_0;
            elsif (((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                indvar_flatten_reg_670 <= select_ln154_1_fu_1128_p3;
            end if; 
        end if;
    end process;

    kx_0_reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln152_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                kx_0_reg_693 <= ap_const_lv2_0;
            elsif (((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                kx_0_reg_693 <= kx_fu_1114_p3;
            end if; 
        end if;
    end process;

    outpix_0_reg_705_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                outpix_0_reg_705 <= ap_const_lv4_0;
            elsif (((out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                outpix_0_reg_705 <= outpix_reg_1386;
            end if; 
        end if;
    end process;

    xp_0_reg_682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln152_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                xp_0_reg_682 <= ap_const_lv4_0;
            elsif (((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                xp_0_reg_682 <= select_ln164_reg_1240;
            end if; 
        end if;
    end process;

    yp_0_reg_648_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln145_fu_716_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                yp_0_reg_648 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln172_fu_1135_p2 = ap_const_lv1_1))) then 
                yp_0_reg_648 <= yp_reg_1216;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln153_reg_1224 <= add_ln153_fu_766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                and_ln154_reg_1235 <= and_ln154_fu_798_p2;
                buf_0_V_addr_2_reg_1245 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_10_V_addr_2_reg_1295 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_11_V_addr_2_reg_1300 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_12_V_addr_2_reg_1305 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_13_V_addr_2_reg_1310 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_14_V_addr_2_reg_1315 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_15_V_addr_2_reg_1320 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_1_V_addr_2_reg_1250 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_2_V_addr_2_reg_1255 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_3_V_addr_2_reg_1260 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_4_V_addr_2_reg_1265 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_5_V_addr_2_reg_1270 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_6_V_addr_2_reg_1275 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_7_V_addr_2_reg_1280 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_8_V_addr_2_reg_1285 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                buf_9_V_addr_2_reg_1290 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
                icmp_ln154_reg_1229 <= icmp_ln154_fu_772_p2;
                select_ln164_reg_1240 <= select_ln164_fu_810_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                outpix_reg_1386 <= outpix_fu_1141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                yp_reg_1216 <= yp_fu_754_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, in_V_V_empty_n, out_V_V_full_n, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state2, icmp_ln152_fu_748_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, icmp_ln153_fu_760_p2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln145_fu_716_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln152_fu_748_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln153_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state5 => 
                if (((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln172_fu_1135_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln153_fu_766_p2 <= std_logic_vector(unsigned(indvar_flatten45_reg_659) + unsigned(ap_const_lv6_1));
    add_ln154_1_fu_1122_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_670) + unsigned(ap_const_lv6_1));
    add_ln156_fu_1104_p2 <= std_logic_vector(unsigned(kx_0_reg_693) + unsigned(ap_const_lv2_1));
    and_ln154_fu_798_p2 <= (xor_ln154_fu_786_p2 and icmp_ln156_fu_792_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln152_fu_748_p2, ap_CS_fsm_state3)
    begin
        if ((((icmp_ln152_fu_748_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln152_fu_748_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln152_fu_748_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_0_V_addr_2_reg_1245, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_0_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_0_V_address0 <= buf_0_V_addr_2_reg_1245;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_0_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_0_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_0_V_address0 <= "XXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, trunc_ln647_fu_838_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_0_V_d0 <= trunc_ln647_fu_838_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_0_V_d0 <= ap_const_lv3_0;
        else 
            buf_0_V_d0 <= "XXX";
        end if; 
    end process;


    buf_0_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_fu_843_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_fu_843_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_0_V_we0 <= ap_const_logic_1;
        else 
            buf_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_10_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_10_V_addr_2_reg_1295, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_10_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_10_V_address0 <= buf_10_V_addr_2_reg_1295;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_10_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_10_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_10_V_address0 <= "XXX";
        end if; 
    end process;


    buf_10_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_10_V_ce0 <= ap_const_logic_1;
        else 
            buf_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_10_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_10_V_d0 <= in_V_V_dout(32 downto 30);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_10_V_d0 <= ap_const_lv3_0;
        else 
            buf_10_V_d0 <= "XXX";
        end if; 
    end process;


    buf_10_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_10_fu_1013_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_10_fu_1013_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_10_V_we0 <= ap_const_logic_1;
        else 
            buf_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_11_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_11_V_addr_2_reg_1300, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_11_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_11_V_address0 <= buf_11_V_addr_2_reg_1300;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_11_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_11_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_11_V_address0 <= "XXX";
        end if; 
    end process;


    buf_11_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_11_V_ce0 <= ap_const_logic_1;
        else 
            buf_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_11_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_11_V_d0 <= in_V_V_dout(35 downto 33);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_11_V_d0 <= ap_const_lv3_0;
        else 
            buf_11_V_d0 <= "XXX";
        end if; 
    end process;


    buf_11_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_11_fu_1030_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_11_fu_1030_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_11_V_we0 <= ap_const_logic_1;
        else 
            buf_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_12_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_12_V_addr_2_reg_1305, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_12_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_12_V_address0 <= buf_12_V_addr_2_reg_1305;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_12_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_12_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_12_V_address0 <= "XXX";
        end if; 
    end process;


    buf_12_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_12_V_ce0 <= ap_const_logic_1;
        else 
            buf_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_12_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_12_V_d0 <= in_V_V_dout(38 downto 36);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_12_V_d0 <= ap_const_lv3_0;
        else 
            buf_12_V_d0 <= "XXX";
        end if; 
    end process;


    buf_12_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_12_fu_1047_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_12_fu_1047_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_12_V_we0 <= ap_const_logic_1;
        else 
            buf_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_13_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_13_V_addr_2_reg_1310, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_13_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_13_V_address0 <= buf_13_V_addr_2_reg_1310;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_13_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_13_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_13_V_address0 <= "XXX";
        end if; 
    end process;


    buf_13_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_13_V_ce0 <= ap_const_logic_1;
        else 
            buf_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_13_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_13_V_d0 <= in_V_V_dout(41 downto 39);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_13_V_d0 <= ap_const_lv3_0;
        else 
            buf_13_V_d0 <= "XXX";
        end if; 
    end process;


    buf_13_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_13_fu_1064_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_13_fu_1064_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_13_V_we0 <= ap_const_logic_1;
        else 
            buf_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_14_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_14_V_addr_2_reg_1315, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_14_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_14_V_address0 <= buf_14_V_addr_2_reg_1315;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_14_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_14_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_14_V_address0 <= "XXX";
        end if; 
    end process;


    buf_14_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_14_V_ce0 <= ap_const_logic_1;
        else 
            buf_14_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_14_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_14_V_d0 <= in_V_V_dout(44 downto 42);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_14_V_d0 <= ap_const_lv3_0;
        else 
            buf_14_V_d0 <= "XXX";
        end if; 
    end process;


    buf_14_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_14_fu_1081_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_14_fu_1081_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_14_V_we0 <= ap_const_logic_1;
        else 
            buf_14_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_15_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_15_V_addr_2_reg_1320, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_15_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_15_V_address0 <= buf_15_V_addr_2_reg_1320;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_15_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_15_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_15_V_address0 <= "XXX";
        end if; 
    end process;


    buf_15_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_15_V_ce0 <= ap_const_logic_1;
        else 
            buf_15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_15_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_15_V_d0 <= in_V_V_dout(47 downto 45);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_15_V_d0 <= ap_const_lv3_0;
        else 
            buf_15_V_d0 <= "XXX";
        end if; 
    end process;


    buf_15_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_15_fu_1098_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_15_fu_1098_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_15_V_we0 <= ap_const_logic_1;
        else 
            buf_15_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_1_V_addr_2_reg_1250, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_1_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_1_V_address0 <= buf_1_V_addr_2_reg_1250;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_1_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_1_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_1_V_address0 <= "XXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_1_V_d0 <= in_V_V_dout(5 downto 3);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_1_V_d0 <= ap_const_lv3_0;
        else 
            buf_1_V_d0 <= "XXX";
        end if; 
    end process;


    buf_1_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_1_fu_860_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_1_fu_860_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_1_V_we0 <= ap_const_logic_1;
        else 
            buf_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_2_V_addr_2_reg_1255, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_2_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_2_V_address0 <= buf_2_V_addr_2_reg_1255;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_2_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_2_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_2_V_address0 <= "XXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_2_V_d0 <= in_V_V_dout(8 downto 6);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_2_V_d0 <= ap_const_lv3_0;
        else 
            buf_2_V_d0 <= "XXX";
        end if; 
    end process;


    buf_2_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_2_fu_877_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_2_fu_877_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_2_V_we0 <= ap_const_logic_1;
        else 
            buf_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_3_V_addr_2_reg_1260, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_3_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_3_V_address0 <= buf_3_V_addr_2_reg_1260;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_3_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_3_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_3_V_address0 <= "XXX";
        end if; 
    end process;


    buf_3_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_3_V_ce0 <= ap_const_logic_1;
        else 
            buf_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_3_V_d0 <= in_V_V_dout(11 downto 9);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_3_V_d0 <= ap_const_lv3_0;
        else 
            buf_3_V_d0 <= "XXX";
        end if; 
    end process;


    buf_3_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_3_fu_894_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_3_fu_894_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_3_V_we0 <= ap_const_logic_1;
        else 
            buf_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_4_V_addr_2_reg_1265, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_4_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_4_V_address0 <= buf_4_V_addr_2_reg_1265;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_4_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_4_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_4_V_address0 <= "XXX";
        end if; 
    end process;


    buf_4_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_4_V_ce0 <= ap_const_logic_1;
        else 
            buf_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_4_V_d0 <= in_V_V_dout(14 downto 12);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_4_V_d0 <= ap_const_lv3_0;
        else 
            buf_4_V_d0 <= "XXX";
        end if; 
    end process;


    buf_4_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_4_fu_911_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_4_fu_911_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_4_V_we0 <= ap_const_logic_1;
        else 
            buf_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_5_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_5_V_addr_2_reg_1270, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_5_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_5_V_address0 <= buf_5_V_addr_2_reg_1270;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_5_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_5_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_5_V_address0 <= "XXX";
        end if; 
    end process;


    buf_5_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_5_V_ce0 <= ap_const_logic_1;
        else 
            buf_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_5_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_5_V_d0 <= in_V_V_dout(17 downto 15);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_5_V_d0 <= ap_const_lv3_0;
        else 
            buf_5_V_d0 <= "XXX";
        end if; 
    end process;


    buf_5_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_5_fu_928_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_5_fu_928_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_5_V_we0 <= ap_const_logic_1;
        else 
            buf_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_6_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_6_V_addr_2_reg_1275, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_6_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_6_V_address0 <= buf_6_V_addr_2_reg_1275;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_6_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_6_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_6_V_address0 <= "XXX";
        end if; 
    end process;


    buf_6_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_6_V_ce0 <= ap_const_logic_1;
        else 
            buf_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_6_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_6_V_d0 <= in_V_V_dout(20 downto 18);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_6_V_d0 <= ap_const_lv3_0;
        else 
            buf_6_V_d0 <= "XXX";
        end if; 
    end process;


    buf_6_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_6_fu_945_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_6_fu_945_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_6_V_we0 <= ap_const_logic_1;
        else 
            buf_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_7_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_7_V_addr_2_reg_1280, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_7_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_7_V_address0 <= buf_7_V_addr_2_reg_1280;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_7_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_7_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_7_V_address0 <= "XXX";
        end if; 
    end process;


    buf_7_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_7_V_ce0 <= ap_const_logic_1;
        else 
            buf_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_7_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_7_V_d0 <= in_V_V_dout(23 downto 21);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_7_V_d0 <= ap_const_lv3_0;
        else 
            buf_7_V_d0 <= "XXX";
        end if; 
    end process;


    buf_7_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_7_fu_962_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_7_fu_962_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_7_V_we0 <= ap_const_logic_1;
        else 
            buf_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_8_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_8_V_addr_2_reg_1285, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_8_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_8_V_address0 <= buf_8_V_addr_2_reg_1285;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_8_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_8_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_8_V_address0 <= "XXX";
        end if; 
    end process;


    buf_8_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_8_V_ce0 <= ap_const_logic_1;
        else 
            buf_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_8_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_8_V_d0 <= in_V_V_dout(26 downto 24);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_8_V_d0 <= ap_const_lv3_0;
        else 
            buf_8_V_d0 <= "XXX";
        end if; 
    end process;


    buf_8_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_8_fu_979_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_8_fu_979_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_8_V_we0 <= ap_const_logic_1;
        else 
            buf_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_9_V_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, buf_9_V_addr_2_reg_1290, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, zext_ln148_fu_728_p1, zext_ln164_fu_818_p1, zext_ln177_fu_1147_p1)
    begin
        if (((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            buf_9_V_address0 <= zext_ln177_fu_1147_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_9_V_address0 <= buf_9_V_addr_2_reg_1290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_9_V_address0 <= zext_ln164_fu_818_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_9_V_address0 <= zext_ln148_fu_728_p1(3 - 1 downto 0);
        else 
            buf_9_V_address0 <= "XXX";
        end if; 
    end process;


    buf_9_V_ce0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_9_V_ce0 <= ap_const_logic_1;
        else 
            buf_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_9_V_d0_assign_proc : process(in_V_V_dout, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_9_V_d0 <= in_V_V_dout(29 downto 27);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_9_V_d0 <= ap_const_lv3_0;
        else 
            buf_9_V_d0 <= "XXX";
        end if; 
    end process;


    buf_9_V_we0_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5, ap_CS_fsm_state2, ap_CS_fsm_state7, icmp_ln172_fu_1135_p2, icmp_ln145_fu_716_p2, icmp_ln895_9_fu_996_p2)
    begin
        if ((((icmp_ln145_fu_716_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln895_9_fu_996_p2 = ap_const_lv1_1) and (in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln172_fu_1135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            buf_9_V_we0 <= ap_const_logic_1;
        else 
            buf_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_722_p2 <= std_logic_vector(unsigned(i_0_reg_637) + unsigned(ap_const_lv4_1));
    icmp_ln145_fu_716_p2 <= "1" when (i_0_reg_637 = ap_const_lv4_8) else "0";
    icmp_ln152_fu_748_p2 <= "1" when (yp_0_reg_648 = ap_const_lv4_8) else "0";
    icmp_ln153_fu_760_p2 <= "1" when (indvar_flatten45_reg_659 = ap_const_lv6_20) else "0";
    icmp_ln154_fu_772_p2 <= "1" when (indvar_flatten_reg_670 = ap_const_lv6_10) else "0";
    icmp_ln156_fu_792_p2 <= "1" when (kx_0_reg_693 = ap_const_lv2_2) else "0";
    icmp_ln172_fu_1135_p2 <= "1" when (outpix_0_reg_705 = ap_const_lv4_8) else "0";
    icmp_ln895_10_fu_1013_p2 <= "1" when (unsigned(p_Result_2_fu_1002_p4) > unsigned(buf_10_V_q0)) else "0";
    icmp_ln895_11_fu_1030_p2 <= "1" when (unsigned(p_Result_10_fu_1019_p4) > unsigned(buf_11_V_q0)) else "0";
    icmp_ln895_12_fu_1047_p2 <= "1" when (unsigned(p_Result_11_fu_1036_p4) > unsigned(buf_12_V_q0)) else "0";
    icmp_ln895_13_fu_1064_p2 <= "1" when (unsigned(p_Result_12_fu_1053_p4) > unsigned(buf_13_V_q0)) else "0";
    icmp_ln895_14_fu_1081_p2 <= "1" when (unsigned(p_Result_13_fu_1070_p4) > unsigned(buf_14_V_q0)) else "0";
    icmp_ln895_15_fu_1098_p2 <= "1" when (unsigned(p_Result_14_fu_1087_p4) > unsigned(buf_15_V_q0)) else "0";
    icmp_ln895_1_fu_860_p2 <= "1" when (unsigned(p_Result_1_fu_849_p4) > unsigned(buf_1_V_q0)) else "0";
    icmp_ln895_2_fu_877_p2 <= "1" when (unsigned(p_Result_s_fu_866_p4) > unsigned(buf_2_V_q0)) else "0";
    icmp_ln895_3_fu_894_p2 <= "1" when (unsigned(p_Result_3_fu_883_p4) > unsigned(buf_3_V_q0)) else "0";
    icmp_ln895_4_fu_911_p2 <= "1" when (unsigned(p_Result_4_fu_900_p4) > unsigned(buf_4_V_q0)) else "0";
    icmp_ln895_5_fu_928_p2 <= "1" when (unsigned(p_Result_5_fu_917_p4) > unsigned(buf_5_V_q0)) else "0";
    icmp_ln895_6_fu_945_p2 <= "1" when (unsigned(p_Result_6_fu_934_p4) > unsigned(buf_6_V_q0)) else "0";
    icmp_ln895_7_fu_962_p2 <= "1" when (unsigned(p_Result_7_fu_951_p4) > unsigned(buf_7_V_q0)) else "0";
    icmp_ln895_8_fu_979_p2 <= "1" when (unsigned(p_Result_8_fu_968_p4) > unsigned(buf_8_V_q0)) else "0";
    icmp_ln895_9_fu_996_p2 <= "1" when (unsigned(p_Result_9_fu_985_p4) > unsigned(buf_9_V_q0)) else "0";
    icmp_ln895_fu_843_p2 <= "1" when (unsigned(trunc_ln647_fu_838_p1) > unsigned(buf_0_V_q0)) else "0";

    in_V_V_blk_n_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            in_V_V_blk_n <= in_V_V_empty_n;
        else 
            in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_V_read_assign_proc : process(in_V_V_empty_n, ap_CS_fsm_state5)
    begin
        if (((in_V_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            in_V_V_read <= ap_const_logic_1;
        else 
            in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    kx_fu_1114_p3 <= 
        ap_const_lv2_1 when (or_ln156_fu_1110_p2(0) = '1') else 
        add_ln156_fu_1104_p2;
    or_ln156_fu_1110_p2 <= (icmp_ln154_reg_1229 or and_ln154_reg_1235);

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= (((((((((((((((buf_15_V_q0 & buf_14_V_q0) & buf_13_V_q0) & buf_12_V_q0) & buf_11_V_q0) & buf_10_V_q0) & buf_9_V_q0) & buf_8_V_q0) & buf_7_V_q0) & buf_6_V_q0) & buf_5_V_q0) & buf_4_V_q0) & buf_3_V_q0) & buf_2_V_q0) & buf_1_V_q0) & buf_0_V_q0);

    out_V_V_write_assign_proc : process(out_V_V_full_n, ap_CS_fsm_state8)
    begin
        if (((out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    outpix_fu_1141_p2 <= std_logic_vector(unsigned(outpix_0_reg_705) + unsigned(ap_const_lv4_1));
    p_Result_10_fu_1019_p4 <= in_V_V_dout(35 downto 33);
    p_Result_11_fu_1036_p4 <= in_V_V_dout(38 downto 36);
    p_Result_12_fu_1053_p4 <= in_V_V_dout(41 downto 39);
    p_Result_13_fu_1070_p4 <= in_V_V_dout(44 downto 42);
    p_Result_14_fu_1087_p4 <= in_V_V_dout(47 downto 45);
    p_Result_1_fu_849_p4 <= in_V_V_dout(5 downto 3);
    p_Result_2_fu_1002_p4 <= in_V_V_dout(32 downto 30);
    p_Result_3_fu_883_p4 <= in_V_V_dout(11 downto 9);
    p_Result_4_fu_900_p4 <= in_V_V_dout(14 downto 12);
    p_Result_5_fu_917_p4 <= in_V_V_dout(17 downto 15);
    p_Result_6_fu_934_p4 <= in_V_V_dout(20 downto 18);
    p_Result_7_fu_951_p4 <= in_V_V_dout(23 downto 21);
    p_Result_8_fu_968_p4 <= in_V_V_dout(26 downto 24);
    p_Result_9_fu_985_p4 <= in_V_V_dout(29 downto 27);
    p_Result_s_fu_866_p4 <= in_V_V_dout(8 downto 6);
    select_ln154_1_fu_1128_p3 <= 
        ap_const_lv6_1 when (icmp_ln154_reg_1229(0) = '1') else 
        add_ln154_1_fu_1122_p2;
    select_ln154_fu_778_p3 <= 
        ap_const_lv4_0 when (icmp_ln154_fu_772_p2(0) = '1') else 
        xp_0_reg_682;
    select_ln164_fu_810_p3 <= 
        xp_fu_804_p2 when (and_ln154_fu_798_p2(0) = '1') else 
        select_ln154_fu_778_p3;
    trunc_ln647_fu_838_p1 <= in_V_V_dout(3 - 1 downto 0);
    xor_ln154_fu_786_p2 <= (icmp_ln154_fu_772_p2 xor ap_const_lv1_1);
    xp_fu_804_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln154_fu_778_p3));
    yp_fu_754_p2 <= std_logic_vector(unsigned(yp_0_reg_648) + unsigned(ap_const_lv4_1));
    zext_ln148_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_637),64));
    zext_ln164_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln164_fu_810_p3),64));
    zext_ln177_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(outpix_0_reg_705),64));
end behav;
