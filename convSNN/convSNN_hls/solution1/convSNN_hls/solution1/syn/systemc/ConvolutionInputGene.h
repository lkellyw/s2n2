// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ConvolutionInputGene_HH_
#define _ConvolutionInputGene_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ConvolutionInputGbkb.h"

namespace ap_rtl {

struct ConvolutionInputGene : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<3> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<3> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<32> > numReps_dout;
    sc_in< sc_logic > numReps_empty_n;
    sc_out< sc_logic > numReps_read;


    // Module declarations
    ConvolutionInputGene(sc_module_name name);
    SC_HAS_PROCESS(ConvolutionInputGene);

    ~ConvolutionInputGene();

    sc_trace_file* mVcdFile;

    ConvolutionInputGbkb* inputBuf_0_V_U;
    ConvolutionInputGbkb* inputBuf_1_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln199_reg_883;
    sc_signal< sc_lv<1> > and_ln245_reg_918;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_lv<1> > icmp_ln215_reg_887;
    sc_signal< sc_logic > numReps_blk_n;
    sc_signal< sc_lv<41> > indvar_flatten_reg_209;
    sc_signal< sc_lv<9> > i_0_i_reg_220;
    sc_signal< sc_lv<32> > reg_298;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op155_write_state3;
    sc_signal< bool > ap_predicate_op158_read_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln196_fu_352_p2;
    sc_signal< sc_lv<1> > icmp_ln199_fu_398_p2;
    sc_signal< sc_lv<1> > and_ln245_fu_574_p2;
    sc_signal< sc_lv<41> > bound_fu_326_p2;
    sc_signal< sc_lv<41> > bound_reg_869;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<41> > add_ln196_fu_357_p2;
    sc_signal< sc_lv<1> > icmp_ln215_fu_407_p2;
    sc_signal< sc_lv<32> > k_y_1_load_reg_891;
    sc_signal< sc_lv<1> > icmp_ln252_fu_280_p2;
    sc_signal< sc_lv<1> > icmp_ln252_reg_922;
    sc_signal< sc_lv<1> > icmp_ln205_fu_286_p2;
    sc_signal< sc_lv<1> > icmp_ln205_reg_927;
    sc_signal< sc_lv<9> > i_fu_677_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<4> > inputBuf_0_V_address0;
    sc_signal< sc_logic > inputBuf_0_V_ce0;
    sc_signal< sc_lv<3> > inputBuf_0_V_q0;
    sc_signal< sc_lv<4> > inputBuf_0_V_address1;
    sc_signal< sc_logic > inputBuf_0_V_ce1;
    sc_signal< sc_logic > inputBuf_0_V_we1;
    sc_signal< sc_lv<4> > inputBuf_1_V_address0;
    sc_signal< sc_logic > inputBuf_1_V_ce0;
    sc_signal< sc_lv<3> > inputBuf_1_V_q0;
    sc_signal< sc_lv<4> > inputBuf_1_V_address1;
    sc_signal< sc_logic > inputBuf_1_V_ce1;
    sc_signal< sc_logic > inputBuf_1_V_we1;
    sc_signal< sc_lv<64> > zext_ln221_fu_443_p1;
    sc_signal< sc_lv<64> > zext_ln248_fu_707_p1;
    sc_signal< sc_lv<64> > zext_ln202_fu_752_p1;
    sc_signal< sc_lv<32> > read_block_2_fu_80;
    sc_signal< sc_lv<32> > select_ln197_fu_375_p3;
    sc_signal< sc_lv<32> > zext_ln252_fu_602_p1;
    sc_signal< sc_lv<32> > read_block_fu_660_p2;
    sc_signal< sc_lv<32> > ofm_y_1_i_fu_84;
    sc_signal< sc_lv<32> > select_ln236_1_fu_540_p3;
    sc_signal< sc_lv<1> > icmp_ln224_fu_455_p2;
    sc_signal< sc_lv<1> > icmp_ln227_fu_472_p2;
    sc_signal< sc_lv<1> > icmp_ln230_fu_486_p2;
    sc_signal< sc_lv<1> > icmp_ln233_fu_506_p2;
    sc_signal< sc_lv<32> > ofm_x_1_fu_88;
    sc_signal< sc_lv<32> > ofm_x_fu_500_p2;
    sc_signal< sc_lv<32> > k_y_1_fu_92;
    sc_signal< sc_lv<32> > k_y_fu_425_p2;
    sc_signal< sc_lv<32> > inp_1_fu_96;
    sc_signal< sc_lv<32> > select_ln236_fu_532_p3;
    sc_signal< sc_lv<32> > inp_fu_644_p2;
    sc_signal< sc_lv<32> > k_x_1_fu_100;
    sc_signal< sc_lv<32> > k_x_fu_466_p2;
    sc_signal< sc_lv<32> > count_simd_1_fu_104;
    sc_signal< sc_lv<32> > count_simd_fu_449_p2;
    sc_signal< sc_lv<32> > current_block_write_5_fu_108;
    sc_signal< sc_lv<32> > current_block_write_9_fu_740_p3;
    sc_signal< sc_lv<32> > current_block_write_6_fu_774_p3;
    sc_signal< sc_lv<32> > current_line_2_fu_112;
    sc_signal< sc_lv<32> > select_ln252_fu_586_p3;
    sc_signal< sc_lv<32> > grp_fu_274_p2;
    sc_signal< sc_lv<32> > counter_internal_blo_fu_116;
    sc_signal< sc_lv<32> > select_ln264_fu_631_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > trunc_ln321_1_fu_713_p1;
    sc_signal< sc_lv<1> > trunc_ln321_fu_758_p1;
    sc_signal< sc_lv<40> > tmp_fu_302_p3;
    sc_signal< sc_lv<36> > tmp_1_fu_314_p3;
    sc_signal< sc_lv<41> > p_shl_fu_310_p1;
    sc_signal< sc_lv<41> > p_shl34_fu_322_p1;
    sc_signal< sc_lv<1> > icmp_ln197_fu_369_p2;
    sc_signal< sc_lv<28> > tmp_8_fu_388_p4;
    sc_signal< sc_lv<32> > add_ln220_fu_431_p2;
    sc_signal< sc_lv<32> > current_line_in_bloc_fu_437_p2;
    sc_signal< sc_lv<32> > ofm_y_fu_520_p2;
    sc_signal< sc_lv<1> > icmp_ln236_fu_526_p2;
    sc_signal< sc_lv<28> > tmp_9_fu_558_p4;
    sc_signal< sc_lv<1> > icmp_ln245_fu_568_p2;
    sc_signal< sc_lv<5> > trunc_ln197_fu_384_p1;
    sc_signal< sc_lv<5> > add_ln255_fu_580_p2;
    sc_signal< sc_lv<5> > read_block_3_fu_594_p3;
    sc_signal< sc_lv<32> > counter_internal_blo_3_fu_619_p2;
    sc_signal< sc_lv<1> > icmp_ln264_fu_625_p2;
    sc_signal< sc_lv<9> > add_ln197_fu_671_p2;
    sc_signal< sc_lv<1> > trunc_ln216_1_fu_688_p1;
    sc_signal< sc_lv<1> > trunc_ln216_fu_685_p1;
    sc_signal< sc_lv<1> > xor_ln221_fu_692_p2;
    sc_signal< sc_lv<32> > current_block_write_7_fu_720_p2;
    sc_signal< sc_lv<1> > icmp_ln257_fu_726_p2;
    sc_signal< sc_lv<32> > current_block_write_8_fu_732_p3;
    sc_signal< sc_lv<32> > current_block_write_fu_762_p2;
    sc_signal< sc_lv<1> > icmp_ln208_fu_768_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0;
    sc_signal< bool > ap_predicate_op66_load_state2;
    sc_signal< bool > ap_enable_operation_66;
    sc_signal< bool > ap_enable_state2_pp0_iter0_stage0;
    sc_signal< bool > ap_predicate_op152_load_state3;
    sc_signal< bool > ap_enable_operation_152;
    sc_signal< bool > ap_enable_state3_pp0_iter1_stage0;
    sc_signal< bool > ap_predicate_op164_store_state3;
    sc_signal< bool > ap_enable_operation_164;
    sc_signal< bool > ap_predicate_op185_store_state3;
    sc_signal< bool > ap_enable_operation_185;
    sc_signal< bool > ap_predicate_op67_load_state2;
    sc_signal< bool > ap_enable_operation_67;
    sc_signal< bool > ap_predicate_op153_load_state3;
    sc_signal< bool > ap_enable_operation_153;
    sc_signal< bool > ap_predicate_op166_store_state3;
    sc_signal< bool > ap_enable_operation_166;
    sc_signal< bool > ap_predicate_op187_store_state3;
    sc_signal< bool > ap_enable_operation_187;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_330;
    sc_signal< bool > ap_condition_50;
    sc_signal< bool > ap_condition_341;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<41> ap_const_lv41_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<41> ap_const_lv41_1;
    static const sc_lv<9> ap_const_lv9_110;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln196_fu_357_p2();
    void thread_add_ln197_fu_671_p2();
    void thread_add_ln220_fu_431_p2();
    void thread_add_ln255_fu_580_p2();
    void thread_and_ln245_fu_574_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_330();
    void thread_ap_condition_341();
    void thread_ap_condition_50();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_operation_152();
    void thread_ap_enable_operation_153();
    void thread_ap_enable_operation_164();
    void thread_ap_enable_operation_166();
    void thread_ap_enable_operation_185();
    void thread_ap_enable_operation_187();
    void thread_ap_enable_operation_66();
    void thread_ap_enable_operation_67();
    void thread_ap_enable_pp0();
    void thread_ap_enable_state2_pp0_iter0_stage0();
    void thread_ap_enable_state3_pp0_iter1_stage0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op152_load_state3();
    void thread_ap_predicate_op153_load_state3();
    void thread_ap_predicate_op155_write_state3();
    void thread_ap_predicate_op158_read_state3();
    void thread_ap_predicate_op164_store_state3();
    void thread_ap_predicate_op166_store_state3();
    void thread_ap_predicate_op185_store_state3();
    void thread_ap_predicate_op187_store_state3();
    void thread_ap_predicate_op66_load_state2();
    void thread_ap_predicate_op67_load_state2();
    void thread_ap_ready();
    void thread_bound_fu_326_p2();
    void thread_count_simd_fu_449_p2();
    void thread_counter_internal_blo_3_fu_619_p2();
    void thread_current_block_write_6_fu_774_p3();
    void thread_current_block_write_7_fu_720_p2();
    void thread_current_block_write_8_fu_732_p3();
    void thread_current_block_write_9_fu_740_p3();
    void thread_current_block_write_fu_762_p2();
    void thread_current_line_in_bloc_fu_437_p2();
    void thread_grp_fu_274_p2();
    void thread_i_fu_677_p3();
    void thread_icmp_ln196_fu_352_p2();
    void thread_icmp_ln197_fu_369_p2();
    void thread_icmp_ln199_fu_398_p2();
    void thread_icmp_ln205_fu_286_p2();
    void thread_icmp_ln208_fu_768_p2();
    void thread_icmp_ln215_fu_407_p2();
    void thread_icmp_ln224_fu_455_p2();
    void thread_icmp_ln227_fu_472_p2();
    void thread_icmp_ln230_fu_486_p2();
    void thread_icmp_ln233_fu_506_p2();
    void thread_icmp_ln236_fu_526_p2();
    void thread_icmp_ln245_fu_568_p2();
    void thread_icmp_ln252_fu_280_p2();
    void thread_icmp_ln257_fu_726_p2();
    void thread_icmp_ln264_fu_625_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_inp_fu_644_p2();
    void thread_inputBuf_0_V_address0();
    void thread_inputBuf_0_V_address1();
    void thread_inputBuf_0_V_ce0();
    void thread_inputBuf_0_V_ce1();
    void thread_inputBuf_0_V_we1();
    void thread_inputBuf_1_V_address0();
    void thread_inputBuf_1_V_address1();
    void thread_inputBuf_1_V_ce0();
    void thread_inputBuf_1_V_ce1();
    void thread_inputBuf_1_V_we1();
    void thread_k_x_fu_466_p2();
    void thread_k_y_fu_425_p2();
    void thread_numReps_blk_n();
    void thread_numReps_read();
    void thread_ofm_x_fu_500_p2();
    void thread_ofm_y_fu_520_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_shl34_fu_322_p1();
    void thread_p_shl_fu_310_p1();
    void thread_read_block_3_fu_594_p3();
    void thread_read_block_fu_660_p2();
    void thread_select_ln197_fu_375_p3();
    void thread_select_ln236_1_fu_540_p3();
    void thread_select_ln236_fu_532_p3();
    void thread_select_ln252_fu_586_p3();
    void thread_select_ln264_fu_631_p3();
    void thread_tmp_1_fu_314_p3();
    void thread_tmp_8_fu_388_p4();
    void thread_tmp_9_fu_558_p4();
    void thread_tmp_fu_302_p3();
    void thread_trunc_ln197_fu_384_p1();
    void thread_trunc_ln216_1_fu_688_p1();
    void thread_trunc_ln216_fu_685_p1();
    void thread_trunc_ln321_1_fu_713_p1();
    void thread_trunc_ln321_fu_758_p1();
    void thread_xor_ln221_fu_692_p2();
    void thread_zext_ln202_fu_752_p1();
    void thread_zext_ln221_fu_443_p1();
    void thread_zext_ln248_fu_707_p1();
    void thread_zext_ln252_fu_602_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
