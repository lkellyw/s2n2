// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fc1_top,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.112000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1139,HLS_SYN_LUT=2852,HLS_VERSION=2020_1}" *)

module fc1_top (
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


input  [319:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [63:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    Matrix_Vector_Activa_U0_ap_start;
wire    Matrix_Vector_Activa_U0_ap_done;
wire    Matrix_Vector_Activa_U0_ap_continue;
wire    Matrix_Vector_Activa_U0_ap_idle;
wire    Matrix_Vector_Activa_U0_ap_ready;
wire    Matrix_Vector_Activa_U0_in_V_V_read;
wire   [63:0] Matrix_Vector_Activa_U0_out_V_V_din;
wire    Matrix_Vector_Activa_U0_out_V_V_write;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Matrix_Vector_Activa_U0_start_full_n;
wire    Matrix_Vector_Activa_U0_start_write;

Matrix_Vector_Activa Matrix_Vector_Activa_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Matrix_Vector_Activa_U0_ap_start),
    .ap_done(Matrix_Vector_Activa_U0_ap_done),
    .ap_continue(Matrix_Vector_Activa_U0_ap_continue),
    .ap_idle(Matrix_Vector_Activa_U0_ap_idle),
    .ap_ready(Matrix_Vector_Activa_U0_ap_ready),
    .in_V_V_dout(in_V_V_dout),
    .in_V_V_empty_n(in_V_V_empty_n),
    .in_V_V_read(Matrix_Vector_Activa_U0_in_V_V_read),
    .out_V_V_din(Matrix_Vector_Activa_U0_out_V_V_din),
    .out_V_V_full_n(out_V_V_full_n),
    .out_V_V_write(Matrix_Vector_Activa_U0_out_V_V_write),
    .reps(numReps)
);

assign Matrix_Vector_Activa_U0_ap_continue = 1'b1;

assign Matrix_Vector_Activa_U0_ap_start = ap_start;

assign Matrix_Vector_Activa_U0_start_full_n = 1'b1;

assign Matrix_Vector_Activa_U0_start_write = 1'b0;

assign ap_done = Matrix_Vector_Activa_U0_ap_done;

assign ap_idle = Matrix_Vector_Activa_U0_ap_idle;

assign ap_ready = Matrix_Vector_Activa_U0_ap_ready;

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Matrix_Vector_Activa_U0_ap_done;

assign ap_sync_ready = Matrix_Vector_Activa_U0_ap_ready;

assign in_V_V_read = Matrix_Vector_Activa_U0_in_V_V_read;

assign out_V_V_din = Matrix_Vector_Activa_U0_out_V_V_din;

assign out_V_V_write = Matrix_Vector_Activa_U0_out_V_V_write;

endmodule //fc1_top
