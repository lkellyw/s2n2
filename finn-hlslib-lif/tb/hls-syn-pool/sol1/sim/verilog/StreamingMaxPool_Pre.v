// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module StreamingMaxPool_Pre (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [47:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg out_V_V_write;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_state5;
reg    out_V_V_blk_n;
wire    ap_CS_fsm_state8;
wire   [3:0] i_fu_722_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln152_fu_748_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] yp_fu_754_p2;
reg   [3:0] yp_reg_1216;
wire   [5:0] add_ln153_fu_766_p2;
reg   [5:0] add_ln153_reg_1224;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln154_fu_772_p2;
reg   [0:0] icmp_ln154_reg_1229;
wire   [0:0] icmp_ln153_fu_760_p2;
wire   [0:0] and_ln154_fu_798_p2;
reg   [0:0] and_ln154_reg_1235;
wire   [3:0] select_ln164_fu_810_p3;
reg   [3:0] select_ln164_reg_1240;
reg   [2:0] buf_0_V_addr_2_reg_1245;
reg   [2:0] buf_1_V_addr_2_reg_1250;
reg   [2:0] buf_2_V_addr_2_reg_1255;
reg   [2:0] buf_3_V_addr_2_reg_1260;
reg   [2:0] buf_4_V_addr_2_reg_1265;
reg   [2:0] buf_5_V_addr_2_reg_1270;
reg   [2:0] buf_6_V_addr_2_reg_1275;
reg   [2:0] buf_7_V_addr_2_reg_1280;
reg   [2:0] buf_8_V_addr_2_reg_1285;
reg   [2:0] buf_9_V_addr_2_reg_1290;
reg   [2:0] buf_10_V_addr_2_reg_1295;
reg   [2:0] buf_11_V_addr_2_reg_1300;
reg   [2:0] buf_12_V_addr_2_reg_1305;
reg   [2:0] buf_13_V_addr_2_reg_1310;
reg   [2:0] buf_14_V_addr_2_reg_1315;
reg   [2:0] buf_15_V_addr_2_reg_1320;
wire   [1:0] kx_fu_1114_p3;
wire   [5:0] select_ln154_1_fu_1128_p3;
wire   [3:0] outpix_fu_1141_p2;
reg   [3:0] outpix_reg_1386;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln172_fu_1135_p2;
reg   [2:0] buf_0_V_address0;
reg    buf_0_V_ce0;
reg    buf_0_V_we0;
reg   [2:0] buf_0_V_d0;
wire   [2:0] buf_0_V_q0;
reg   [2:0] buf_1_V_address0;
reg    buf_1_V_ce0;
reg    buf_1_V_we0;
reg   [2:0] buf_1_V_d0;
wire   [2:0] buf_1_V_q0;
reg   [2:0] buf_2_V_address0;
reg    buf_2_V_ce0;
reg    buf_2_V_we0;
reg   [2:0] buf_2_V_d0;
wire   [2:0] buf_2_V_q0;
reg   [2:0] buf_3_V_address0;
reg    buf_3_V_ce0;
reg    buf_3_V_we0;
reg   [2:0] buf_3_V_d0;
wire   [2:0] buf_3_V_q0;
reg   [2:0] buf_4_V_address0;
reg    buf_4_V_ce0;
reg    buf_4_V_we0;
reg   [2:0] buf_4_V_d0;
wire   [2:0] buf_4_V_q0;
reg   [2:0] buf_5_V_address0;
reg    buf_5_V_ce0;
reg    buf_5_V_we0;
reg   [2:0] buf_5_V_d0;
wire   [2:0] buf_5_V_q0;
reg   [2:0] buf_6_V_address0;
reg    buf_6_V_ce0;
reg    buf_6_V_we0;
reg   [2:0] buf_6_V_d0;
wire   [2:0] buf_6_V_q0;
reg   [2:0] buf_7_V_address0;
reg    buf_7_V_ce0;
reg    buf_7_V_we0;
reg   [2:0] buf_7_V_d0;
wire   [2:0] buf_7_V_q0;
reg   [2:0] buf_8_V_address0;
reg    buf_8_V_ce0;
reg    buf_8_V_we0;
reg   [2:0] buf_8_V_d0;
wire   [2:0] buf_8_V_q0;
reg   [2:0] buf_9_V_address0;
reg    buf_9_V_ce0;
reg    buf_9_V_we0;
reg   [2:0] buf_9_V_d0;
wire   [2:0] buf_9_V_q0;
reg   [2:0] buf_10_V_address0;
reg    buf_10_V_ce0;
reg    buf_10_V_we0;
reg   [2:0] buf_10_V_d0;
wire   [2:0] buf_10_V_q0;
reg   [2:0] buf_11_V_address0;
reg    buf_11_V_ce0;
reg    buf_11_V_we0;
reg   [2:0] buf_11_V_d0;
wire   [2:0] buf_11_V_q0;
reg   [2:0] buf_12_V_address0;
reg    buf_12_V_ce0;
reg    buf_12_V_we0;
reg   [2:0] buf_12_V_d0;
wire   [2:0] buf_12_V_q0;
reg   [2:0] buf_13_V_address0;
reg    buf_13_V_ce0;
reg    buf_13_V_we0;
reg   [2:0] buf_13_V_d0;
wire   [2:0] buf_13_V_q0;
reg   [2:0] buf_14_V_address0;
reg    buf_14_V_ce0;
reg    buf_14_V_we0;
reg   [2:0] buf_14_V_d0;
wire   [2:0] buf_14_V_q0;
reg   [2:0] buf_15_V_address0;
reg    buf_15_V_ce0;
reg    buf_15_V_we0;
reg   [2:0] buf_15_V_d0;
wire   [2:0] buf_15_V_q0;
reg   [3:0] i_0_reg_637;
wire   [0:0] icmp_ln145_fu_716_p2;
reg   [3:0] yp_0_reg_648;
reg   [5:0] indvar_flatten45_reg_659;
reg   [5:0] indvar_flatten_reg_670;
reg   [3:0] xp_0_reg_682;
reg   [1:0] kx_0_reg_693;
reg   [3:0] outpix_0_reg_705;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln148_fu_728_p1;
wire   [63:0] zext_ln164_fu_818_p1;
wire   [63:0] zext_ln177_fu_1147_p1;
wire   [0:0] icmp_ln895_fu_843_p2;
wire   [2:0] trunc_ln647_fu_838_p1;
wire   [0:0] icmp_ln895_1_fu_860_p2;
wire   [2:0] p_Result_1_fu_849_p4;
wire   [0:0] icmp_ln895_2_fu_877_p2;
wire   [2:0] p_Result_s_fu_866_p4;
wire   [0:0] icmp_ln895_3_fu_894_p2;
wire   [2:0] p_Result_3_fu_883_p4;
wire   [0:0] icmp_ln895_4_fu_911_p2;
wire   [2:0] p_Result_4_fu_900_p4;
wire   [0:0] icmp_ln895_5_fu_928_p2;
wire   [2:0] p_Result_5_fu_917_p4;
wire   [0:0] icmp_ln895_6_fu_945_p2;
wire   [2:0] p_Result_6_fu_934_p4;
wire   [0:0] icmp_ln895_7_fu_962_p2;
wire   [2:0] p_Result_7_fu_951_p4;
wire   [0:0] icmp_ln895_8_fu_979_p2;
wire   [2:0] p_Result_8_fu_968_p4;
wire   [0:0] icmp_ln895_9_fu_996_p2;
wire   [2:0] p_Result_9_fu_985_p4;
wire   [0:0] icmp_ln895_10_fu_1013_p2;
wire   [2:0] p_Result_2_fu_1002_p4;
wire   [0:0] icmp_ln895_11_fu_1030_p2;
wire   [2:0] p_Result_10_fu_1019_p4;
wire   [0:0] icmp_ln895_12_fu_1047_p2;
wire   [2:0] p_Result_11_fu_1036_p4;
wire   [0:0] icmp_ln895_13_fu_1064_p2;
wire   [2:0] p_Result_12_fu_1053_p4;
wire   [0:0] icmp_ln895_14_fu_1081_p2;
wire   [2:0] p_Result_13_fu_1070_p4;
wire   [0:0] icmp_ln895_15_fu_1098_p2;
wire   [2:0] p_Result_14_fu_1087_p4;
wire   [0:0] icmp_ln156_fu_792_p2;
wire   [0:0] xor_ln154_fu_786_p2;
wire   [3:0] select_ln154_fu_778_p3;
wire   [3:0] xp_fu_804_p2;
wire   [0:0] or_ln156_fu_1110_p2;
wire   [1:0] add_ln156_fu_1104_p2;
wire   [5:0] add_ln154_1_fu_1122_p2;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
end

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_address0),
    .ce0(buf_0_V_ce0),
    .we0(buf_0_V_we0),
    .d0(buf_0_V_d0),
    .q0(buf_0_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_address0),
    .ce0(buf_1_V_ce0),
    .we0(buf_1_V_we0),
    .d0(buf_1_V_d0),
    .q0(buf_1_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_address0),
    .ce0(buf_2_V_ce0),
    .we0(buf_2_V_we0),
    .d0(buf_2_V_d0),
    .q0(buf_2_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_3_V_address0),
    .ce0(buf_3_V_ce0),
    .we0(buf_3_V_we0),
    .d0(buf_3_V_d0),
    .q0(buf_3_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_4_V_address0),
    .ce0(buf_4_V_ce0),
    .we0(buf_4_V_we0),
    .d0(buf_4_V_d0),
    .q0(buf_4_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_5_V_address0),
    .ce0(buf_5_V_ce0),
    .we0(buf_5_V_we0),
    .d0(buf_5_V_d0),
    .q0(buf_5_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_6_V_address0),
    .ce0(buf_6_V_ce0),
    .we0(buf_6_V_we0),
    .d0(buf_6_V_d0),
    .q0(buf_6_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_7_V_address0),
    .ce0(buf_7_V_ce0),
    .we0(buf_7_V_we0),
    .d0(buf_7_V_d0),
    .q0(buf_7_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_8_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_8_V_address0),
    .ce0(buf_8_V_ce0),
    .we0(buf_8_V_we0),
    .d0(buf_8_V_d0),
    .q0(buf_8_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_9_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_9_V_address0),
    .ce0(buf_9_V_ce0),
    .we0(buf_9_V_we0),
    .d0(buf_9_V_d0),
    .q0(buf_9_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_10_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_10_V_address0),
    .ce0(buf_10_V_ce0),
    .we0(buf_10_V_we0),
    .d0(buf_10_V_d0),
    .q0(buf_10_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_11_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_11_V_address0),
    .ce0(buf_11_V_ce0),
    .we0(buf_11_V_we0),
    .d0(buf_11_V_d0),
    .q0(buf_11_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_12_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_12_V_address0),
    .ce0(buf_12_V_ce0),
    .we0(buf_12_V_we0),
    .d0(buf_12_V_d0),
    .q0(buf_12_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_13_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_13_V_address0),
    .ce0(buf_13_V_ce0),
    .we0(buf_13_V_we0),
    .d0(buf_13_V_d0),
    .q0(buf_13_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_14_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_14_V_address0),
    .ce0(buf_14_V_ce0),
    .we0(buf_14_V_we0),
    .d0(buf_14_V_d0),
    .q0(buf_14_V_q0)
);

StreamingMaxPool_bkb #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
buf_15_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_15_V_address0),
    .ce0(buf_15_V_ce0),
    .we0(buf_15_V_we0),
    .d0(buf_15_V_d0),
    .q0(buf_15_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_637 <= i_fu_722_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_637 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln152_fu_748_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten45_reg_659 <= 6'd0;
    end else if (((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten45_reg_659 <= add_ln153_reg_1224;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln152_fu_748_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten_reg_670 <= 6'd0;
    end else if (((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        indvar_flatten_reg_670 <= select_ln154_1_fu_1128_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln152_fu_748_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        kx_0_reg_693 <= 2'd0;
    end else if (((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        kx_0_reg_693 <= kx_fu_1114_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        outpix_0_reg_705 <= 4'd0;
    end else if (((out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        outpix_0_reg_705 <= outpix_reg_1386;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln152_fu_748_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        xp_0_reg_682 <= 4'd0;
    end else if (((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        xp_0_reg_682 <= select_ln164_reg_1240;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        yp_0_reg_648 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln172_fu_1135_p2 == 1'd1))) begin
        yp_0_reg_648 <= yp_reg_1216;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln153_reg_1224 <= add_ln153_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln153_fu_760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln154_reg_1235 <= and_ln154_fu_798_p2;
        buf_0_V_addr_2_reg_1245 <= zext_ln164_fu_818_p1;
        buf_10_V_addr_2_reg_1295 <= zext_ln164_fu_818_p1;
        buf_11_V_addr_2_reg_1300 <= zext_ln164_fu_818_p1;
        buf_12_V_addr_2_reg_1305 <= zext_ln164_fu_818_p1;
        buf_13_V_addr_2_reg_1310 <= zext_ln164_fu_818_p1;
        buf_14_V_addr_2_reg_1315 <= zext_ln164_fu_818_p1;
        buf_15_V_addr_2_reg_1320 <= zext_ln164_fu_818_p1;
        buf_1_V_addr_2_reg_1250 <= zext_ln164_fu_818_p1;
        buf_2_V_addr_2_reg_1255 <= zext_ln164_fu_818_p1;
        buf_3_V_addr_2_reg_1260 <= zext_ln164_fu_818_p1;
        buf_4_V_addr_2_reg_1265 <= zext_ln164_fu_818_p1;
        buf_5_V_addr_2_reg_1270 <= zext_ln164_fu_818_p1;
        buf_6_V_addr_2_reg_1275 <= zext_ln164_fu_818_p1;
        buf_7_V_addr_2_reg_1280 <= zext_ln164_fu_818_p1;
        buf_8_V_addr_2_reg_1285 <= zext_ln164_fu_818_p1;
        buf_9_V_addr_2_reg_1290 <= zext_ln164_fu_818_p1;
        icmp_ln154_reg_1229 <= icmp_ln154_fu_772_p2;
        select_ln164_reg_1240 <= select_ln164_fu_810_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        outpix_reg_1386 <= outpix_fu_1141_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        yp_reg_1216 <= yp_fu_754_p2;
    end
end

always @ (*) begin
    if ((((icmp_ln152_fu_748_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln152_fu_748_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_0_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_0_V_address0 = buf_0_V_addr_2_reg_1245;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_0_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_0_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_0_V_d0 = trunc_ln647_fu_838_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_0_V_d0 = 3'd0;
    end else begin
        buf_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_fu_843_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_0_V_we0 = 1'b1;
    end else begin
        buf_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_10_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_10_V_address0 = buf_10_V_addr_2_reg_1295;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_10_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_10_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_10_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_10_V_ce0 = 1'b1;
    end else begin
        buf_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_10_V_d0 = {{in_V_V_dout[32:30]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_10_V_d0 = 3'd0;
    end else begin
        buf_10_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_10_fu_1013_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_10_V_we0 = 1'b1;
    end else begin
        buf_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_11_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_11_V_address0 = buf_11_V_addr_2_reg_1300;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_11_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_11_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_11_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_11_V_ce0 = 1'b1;
    end else begin
        buf_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_11_V_d0 = {{in_V_V_dout[35:33]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_11_V_d0 = 3'd0;
    end else begin
        buf_11_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_11_fu_1030_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_11_V_we0 = 1'b1;
    end else begin
        buf_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_12_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_12_V_address0 = buf_12_V_addr_2_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_12_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_12_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_12_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_12_V_ce0 = 1'b1;
    end else begin
        buf_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_12_V_d0 = {{in_V_V_dout[38:36]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_12_V_d0 = 3'd0;
    end else begin
        buf_12_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_12_fu_1047_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_12_V_we0 = 1'b1;
    end else begin
        buf_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_13_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_13_V_address0 = buf_13_V_addr_2_reg_1310;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_13_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_13_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_13_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_13_V_ce0 = 1'b1;
    end else begin
        buf_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_13_V_d0 = {{in_V_V_dout[41:39]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_13_V_d0 = 3'd0;
    end else begin
        buf_13_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_13_fu_1064_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_13_V_we0 = 1'b1;
    end else begin
        buf_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_14_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_14_V_address0 = buf_14_V_addr_2_reg_1315;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_14_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_14_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_14_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_14_V_ce0 = 1'b1;
    end else begin
        buf_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_14_V_d0 = {{in_V_V_dout[44:42]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_14_V_d0 = 3'd0;
    end else begin
        buf_14_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_14_fu_1081_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_14_V_we0 = 1'b1;
    end else begin
        buf_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_15_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_15_V_address0 = buf_15_V_addr_2_reg_1320;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_15_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_15_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_15_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_15_V_ce0 = 1'b1;
    end else begin
        buf_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_15_V_d0 = {{in_V_V_dout[47:45]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_15_V_d0 = 3'd0;
    end else begin
        buf_15_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_15_fu_1098_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_15_V_we0 = 1'b1;
    end else begin
        buf_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_1_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_1_V_address0 = buf_1_V_addr_2_reg_1250;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_1_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_1_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_1_V_d0 = {{in_V_V_dout[5:3]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_1_V_d0 = 3'd0;
    end else begin
        buf_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_1_fu_860_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_1_V_we0 = 1'b1;
    end else begin
        buf_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_2_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_2_V_address0 = buf_2_V_addr_2_reg_1255;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_2_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_2_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_2_V_d0 = {{in_V_V_dout[8:6]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_2_V_d0 = 3'd0;
    end else begin
        buf_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_2_fu_877_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_2_V_we0 = 1'b1;
    end else begin
        buf_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_3_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_3_V_address0 = buf_3_V_addr_2_reg_1260;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_3_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_3_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_3_V_ce0 = 1'b1;
    end else begin
        buf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_3_V_d0 = {{in_V_V_dout[11:9]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_3_V_d0 = 3'd0;
    end else begin
        buf_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_3_fu_894_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_3_V_we0 = 1'b1;
    end else begin
        buf_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_4_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_4_V_address0 = buf_4_V_addr_2_reg_1265;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_4_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_4_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_4_V_ce0 = 1'b1;
    end else begin
        buf_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_4_V_d0 = {{in_V_V_dout[14:12]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_4_V_d0 = 3'd0;
    end else begin
        buf_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_4_fu_911_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_4_V_we0 = 1'b1;
    end else begin
        buf_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_5_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_5_V_address0 = buf_5_V_addr_2_reg_1270;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_5_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_5_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_5_V_ce0 = 1'b1;
    end else begin
        buf_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_5_V_d0 = {{in_V_V_dout[17:15]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_5_V_d0 = 3'd0;
    end else begin
        buf_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_5_fu_928_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_5_V_we0 = 1'b1;
    end else begin
        buf_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_6_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_6_V_address0 = buf_6_V_addr_2_reg_1275;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_6_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_6_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_6_V_ce0 = 1'b1;
    end else begin
        buf_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_6_V_d0 = {{in_V_V_dout[20:18]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_6_V_d0 = 3'd0;
    end else begin
        buf_6_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_6_fu_945_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_6_V_we0 = 1'b1;
    end else begin
        buf_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_7_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_7_V_address0 = buf_7_V_addr_2_reg_1280;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_7_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_7_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_7_V_ce0 = 1'b1;
    end else begin
        buf_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_7_V_d0 = {{in_V_V_dout[23:21]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_7_V_d0 = 3'd0;
    end else begin
        buf_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_7_fu_962_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_7_V_we0 = 1'b1;
    end else begin
        buf_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_8_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_8_V_address0 = buf_8_V_addr_2_reg_1285;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_8_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_8_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_8_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_8_V_ce0 = 1'b1;
    end else begin
        buf_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_8_V_d0 = {{in_V_V_dout[26:24]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_8_V_d0 = 3'd0;
    end else begin
        buf_8_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_8_fu_979_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_8_V_we0 = 1'b1;
    end else begin
        buf_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        buf_9_V_address0 = zext_ln177_fu_1147_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_9_V_address0 = buf_9_V_addr_2_reg_1290;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_9_V_address0 = zext_ln164_fu_818_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_9_V_address0 = zext_ln148_fu_728_p1;
    end else begin
        buf_9_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_9_V_ce0 = 1'b1;
    end else begin
        buf_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        buf_9_V_d0 = {{in_V_V_dout[29:27]}};
    end else if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_9_V_d0 = 3'd0;
    end else begin
        buf_9_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln895_9_fu_996_p2 == 1'd1) & (in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln172_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_9_V_we0 = 1'b1;
    end else begin
        buf_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln145_fu_716_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln152_fu_748_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln153_fu_760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((in_V_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln172_fu_1135_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln153_fu_766_p2 = (indvar_flatten45_reg_659 + 6'd1);

assign add_ln154_1_fu_1122_p2 = (indvar_flatten_reg_670 + 6'd1);

assign add_ln156_fu_1104_p2 = (kx_0_reg_693 + 2'd1);

assign and_ln154_fu_798_p2 = (xor_ln154_fu_786_p2 & icmp_ln156_fu_792_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign i_fu_722_p2 = (i_0_reg_637 + 4'd1);

assign icmp_ln145_fu_716_p2 = ((i_0_reg_637 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_748_p2 = ((yp_0_reg_648 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_760_p2 = ((indvar_flatten45_reg_659 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_772_p2 = ((indvar_flatten_reg_670 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln156_fu_792_p2 = ((kx_0_reg_693 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_1135_p2 = ((outpix_0_reg_705 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln895_10_fu_1013_p2 = ((p_Result_2_fu_1002_p4 > buf_10_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_11_fu_1030_p2 = ((p_Result_10_fu_1019_p4 > buf_11_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_12_fu_1047_p2 = ((p_Result_11_fu_1036_p4 > buf_12_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_13_fu_1064_p2 = ((p_Result_12_fu_1053_p4 > buf_13_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_14_fu_1081_p2 = ((p_Result_13_fu_1070_p4 > buf_14_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_15_fu_1098_p2 = ((p_Result_14_fu_1087_p4 > buf_15_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_860_p2 = ((p_Result_1_fu_849_p4 > buf_1_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_877_p2 = ((p_Result_s_fu_866_p4 > buf_2_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_894_p2 = ((p_Result_3_fu_883_p4 > buf_3_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_4_fu_911_p2 = ((p_Result_4_fu_900_p4 > buf_4_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_5_fu_928_p2 = ((p_Result_5_fu_917_p4 > buf_5_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_6_fu_945_p2 = ((p_Result_6_fu_934_p4 > buf_6_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_7_fu_962_p2 = ((p_Result_7_fu_951_p4 > buf_7_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_8_fu_979_p2 = ((p_Result_8_fu_968_p4 > buf_8_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_9_fu_996_p2 = ((p_Result_9_fu_985_p4 > buf_9_V_q0) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_843_p2 = ((trunc_ln647_fu_838_p1 > buf_0_V_q0) ? 1'b1 : 1'b0);

assign kx_fu_1114_p3 = ((or_ln156_fu_1110_p2[0:0] === 1'b1) ? 2'd1 : add_ln156_fu_1104_p2);

assign or_ln156_fu_1110_p2 = (icmp_ln154_reg_1229 | and_ln154_reg_1235);

assign out_V_V_din = {{{{{{{{{{{{{{{{buf_15_V_q0}, {buf_14_V_q0}}, {buf_13_V_q0}}, {buf_12_V_q0}}, {buf_11_V_q0}}, {buf_10_V_q0}}, {buf_9_V_q0}}, {buf_8_V_q0}}, {buf_7_V_q0}}, {buf_6_V_q0}}, {buf_5_V_q0}}, {buf_4_V_q0}}, {buf_3_V_q0}}, {buf_2_V_q0}}, {buf_1_V_q0}}, {buf_0_V_q0}};

assign outpix_fu_1141_p2 = (outpix_0_reg_705 + 4'd1);

assign p_Result_10_fu_1019_p4 = {{in_V_V_dout[35:33]}};

assign p_Result_11_fu_1036_p4 = {{in_V_V_dout[38:36]}};

assign p_Result_12_fu_1053_p4 = {{in_V_V_dout[41:39]}};

assign p_Result_13_fu_1070_p4 = {{in_V_V_dout[44:42]}};

assign p_Result_14_fu_1087_p4 = {{in_V_V_dout[47:45]}};

assign p_Result_1_fu_849_p4 = {{in_V_V_dout[5:3]}};

assign p_Result_2_fu_1002_p4 = {{in_V_V_dout[32:30]}};

assign p_Result_3_fu_883_p4 = {{in_V_V_dout[11:9]}};

assign p_Result_4_fu_900_p4 = {{in_V_V_dout[14:12]}};

assign p_Result_5_fu_917_p4 = {{in_V_V_dout[17:15]}};

assign p_Result_6_fu_934_p4 = {{in_V_V_dout[20:18]}};

assign p_Result_7_fu_951_p4 = {{in_V_V_dout[23:21]}};

assign p_Result_8_fu_968_p4 = {{in_V_V_dout[26:24]}};

assign p_Result_9_fu_985_p4 = {{in_V_V_dout[29:27]}};

assign p_Result_s_fu_866_p4 = {{in_V_V_dout[8:6]}};

assign select_ln154_1_fu_1128_p3 = ((icmp_ln154_reg_1229[0:0] === 1'b1) ? 6'd1 : add_ln154_1_fu_1122_p2);

assign select_ln154_fu_778_p3 = ((icmp_ln154_fu_772_p2[0:0] === 1'b1) ? 4'd0 : xp_0_reg_682);

assign select_ln164_fu_810_p3 = ((and_ln154_fu_798_p2[0:0] === 1'b1) ? xp_fu_804_p2 : select_ln154_fu_778_p3);

assign trunc_ln647_fu_838_p1 = in_V_V_dout[2:0];

assign xor_ln154_fu_786_p2 = (icmp_ln154_fu_772_p2 ^ 1'd1);

assign xp_fu_804_p2 = (4'd1 + select_ln154_fu_778_p3);

assign yp_fu_754_p2 = (yp_0_reg_648 + 4'd1);

assign zext_ln148_fu_728_p1 = i_0_reg_637;

assign zext_ln164_fu_818_p1 = select_ln164_fu_810_p3;

assign zext_ln177_fu_1147_p1 = outpix_0_reg_705;

endmodule //StreamingMaxPool_Pre
