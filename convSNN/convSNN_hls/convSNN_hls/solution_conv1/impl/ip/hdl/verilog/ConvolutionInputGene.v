// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGene (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps_dout,
        numReps_empty_n,
        numReps_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [2:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [2:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps_dout;
input   numReps_empty_n;
output   numReps_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg out_V_V_write;
reg numReps_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln199_reg_883;
reg   [0:0] and_ln245_reg_918;
reg    out_V_V_blk_n;
reg   [0:0] icmp_ln215_reg_887;
reg    numReps_blk_n;
reg   [40:0] indvar_flatten_reg_209;
reg   [8:0] i_0_i_reg_220;
reg   [31:0] reg_298;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op155_write_state3;
reg    ap_predicate_op158_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln196_fu_352_p2;
wire   [0:0] icmp_ln199_fu_398_p2;
wire   [0:0] and_ln245_fu_574_p2;
wire   [40:0] bound_fu_326_p2;
reg   [40:0] bound_reg_869;
reg    ap_block_state1;
wire   [40:0] add_ln196_fu_357_p2;
wire   [0:0] icmp_ln215_fu_407_p2;
reg   [31:0] k_y_1_load_reg_891;
wire   [0:0] icmp_ln252_fu_280_p2;
reg   [0:0] icmp_ln252_reg_922;
wire   [0:0] icmp_ln205_fu_286_p2;
reg   [0:0] icmp_ln205_reg_927;
wire   [8:0] i_fu_677_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire   [3:0] inputBuf_0_V_address0;
reg    inputBuf_0_V_ce0;
wire   [2:0] inputBuf_0_V_q0;
reg   [3:0] inputBuf_0_V_address1;
reg    inputBuf_0_V_ce1;
reg    inputBuf_0_V_we1;
wire   [3:0] inputBuf_1_V_address0;
reg    inputBuf_1_V_ce0;
wire   [2:0] inputBuf_1_V_q0;
reg   [3:0] inputBuf_1_V_address1;
reg    inputBuf_1_V_ce1;
reg    inputBuf_1_V_we1;
wire   [63:0] zext_ln221_fu_443_p1;
wire   [63:0] zext_ln248_fu_707_p1;
wire   [63:0] zext_ln202_fu_752_p1;
reg   [31:0] read_block_2_fu_80;
wire   [31:0] select_ln197_fu_375_p3;
wire   [31:0] zext_ln252_fu_602_p1;
wire   [31:0] read_block_fu_660_p2;
reg   [31:0] ofm_y_1_i_fu_84;
wire   [31:0] select_ln236_1_fu_540_p3;
wire   [0:0] icmp_ln224_fu_455_p2;
wire   [0:0] icmp_ln227_fu_472_p2;
wire   [0:0] icmp_ln230_fu_486_p2;
wire   [0:0] icmp_ln233_fu_506_p2;
reg   [31:0] ofm_x_1_fu_88;
wire   [31:0] ofm_x_fu_500_p2;
reg   [31:0] k_y_1_fu_92;
wire   [31:0] k_y_fu_425_p2;
reg   [31:0] inp_1_fu_96;
wire   [31:0] select_ln236_fu_532_p3;
wire   [31:0] inp_fu_644_p2;
reg   [31:0] k_x_1_fu_100;
wire   [31:0] k_x_fu_466_p2;
reg   [31:0] count_simd_1_fu_104;
wire   [31:0] count_simd_fu_449_p2;
reg   [31:0] current_block_write_5_fu_108;
wire   [31:0] current_block_write_9_fu_740_p3;
wire   [31:0] current_block_write_6_fu_774_p3;
reg   [31:0] current_line_2_fu_112;
wire   [31:0] select_ln252_fu_586_p3;
wire   [31:0] grp_fu_274_p2;
reg   [31:0] counter_internal_blo_fu_116;
wire   [31:0] select_ln264_fu_631_p3;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] trunc_ln321_1_fu_713_p1;
wire   [0:0] trunc_ln321_fu_758_p1;
wire   [39:0] tmp_fu_302_p3;
wire   [35:0] tmp_1_fu_314_p3;
wire   [40:0] p_shl_fu_310_p1;
wire   [40:0] p_shl34_fu_322_p1;
wire   [0:0] icmp_ln197_fu_369_p2;
wire   [27:0] tmp_8_fu_388_p4;
wire   [31:0] add_ln220_fu_431_p2;
wire   [31:0] current_line_in_bloc_fu_437_p2;
wire   [31:0] ofm_y_fu_520_p2;
wire   [0:0] icmp_ln236_fu_526_p2;
wire   [27:0] tmp_9_fu_558_p4;
wire   [0:0] icmp_ln245_fu_568_p2;
wire   [4:0] trunc_ln197_fu_384_p1;
wire   [4:0] add_ln255_fu_580_p2;
wire   [4:0] read_block_3_fu_594_p3;
wire   [31:0] counter_internal_blo_3_fu_619_p2;
wire   [0:0] icmp_ln264_fu_625_p2;
wire   [8:0] add_ln197_fu_671_p2;
wire   [0:0] trunc_ln216_1_fu_688_p1;
wire   [0:0] trunc_ln216_fu_685_p1;
wire   [0:0] xor_ln221_fu_692_p2;
wire   [31:0] current_block_write_7_fu_720_p2;
wire   [0:0] icmp_ln257_fu_726_p2;
wire   [31:0] current_block_write_8_fu_732_p3;
wire   [31:0] current_block_write_fu_762_p2;
wire   [0:0] icmp_ln208_fu_768_p2;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op66_load_state2;
reg    ap_enable_operation_66;
reg    ap_enable_state2_pp0_iter0_stage0;
reg    ap_predicate_op152_load_state3;
reg    ap_enable_operation_152;
reg    ap_enable_state3_pp0_iter1_stage0;
reg    ap_predicate_op164_store_state3;
reg    ap_enable_operation_164;
reg    ap_predicate_op185_store_state3;
reg    ap_enable_operation_185;
reg    ap_predicate_op67_load_state2;
reg    ap_enable_operation_67;
reg    ap_predicate_op153_load_state3;
reg    ap_enable_operation_153;
reg    ap_predicate_op166_store_state3;
reg    ap_enable_operation_166;
reg    ap_predicate_op187_store_state3;
reg    ap_enable_operation_187;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_330;
reg    ap_condition_50;
reg    ap_condition_341;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

ConvolutionInputGbkb #(
    .DataWidth( 3 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
inputBuf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_0_V_address0),
    .ce0(inputBuf_0_V_ce0),
    .q0(inputBuf_0_V_q0),
    .address1(inputBuf_0_V_address1),
    .ce1(inputBuf_0_V_ce1),
    .we1(inputBuf_0_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGbkb #(
    .DataWidth( 3 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
inputBuf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_1_V_address0),
    .ce0(inputBuf_1_V_ce0),
    .q0(inputBuf_1_V_q0),
    .address1(inputBuf_1_V_address1),
    .ce1(inputBuf_1_V_ce1),
    .we1(inputBuf_1_V_we1),
    .d1(in_V_V_dout)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln224_fu_455_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        count_simd_1_fu_104 <= count_simd_fu_449_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln227_fu_472_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln230_fu_486_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln233_fu_506_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln233_fu_506_p2 == 1'd1) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        count_simd_1_fu_104 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        counter_internal_blo_fu_116 <= select_ln264_fu_631_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln205_fu_286_p2 == 1'd1) & (icmp_ln199_fu_398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        counter_internal_blo_fu_116 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln205_reg_927 == 1'd1) & (icmp_ln199_reg_883 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_block_write_5_fu_108 <= current_block_write_6_fu_774_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln245_reg_918) & (icmp_ln199_reg_883 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_block_write_5_fu_108 <= current_block_write_9_fu_740_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_block_write_5_fu_108 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln205_fu_286_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_line_2_fu_112 <= grp_fu_274_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (1'd1 == and_ln245_fu_574_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        current_line_2_fu_112 <= select_ln252_fu_586_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln205_fu_286_p2 == 1'd1) & (icmp_ln199_fu_398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        current_line_2_fu_112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_reg_220 <= i_fu_677_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_220 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_209 <= add_ln196_fu_357_p2;
    end else if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_209 <= 41'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_1_fu_96 <= inp_fu_644_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln233_fu_506_p2 == 1'd1) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_1_fu_96 <= select_ln236_fu_532_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inp_1_fu_96 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln227_fu_472_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_x_1_fu_100 <= k_x_fu_466_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln230_fu_486_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln233_fu_506_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln233_fu_506_p2 == 1'd1) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_x_1_fu_100 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln230_fu_486_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_y_1_fu_92 <= k_y_fu_425_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_y_1_fu_92 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln233_fu_506_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ofm_x_1_fu_88 <= ofm_x_fu_500_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln233_fu_506_p2 == 1'd1) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        ofm_x_1_fu_88 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln233_fu_506_p2 == 1'd1) & (icmp_ln230_fu_486_p2 == 1'd1) & (icmp_ln227_fu_472_p2 == 1'd1) & (icmp_ln224_fu_455_p2 == 1'd1) & (icmp_ln215_fu_407_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ofm_y_1_i_fu_84 <= select_ln236_1_fu_540_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ofm_y_1_i_fu_84 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln205_fu_286_p2 == 1'd1) & (icmp_ln199_fu_398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        read_block_2_fu_80 <= read_block_fu_660_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (1'd1 == and_ln245_fu_574_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        read_block_2_fu_80 <= zext_ln252_fu_602_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln205_fu_286_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (1'd0 == and_ln245_fu_574_p2) & (icmp_ln199_fu_398_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        read_block_2_fu_80 <= select_ln197_fu_375_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        read_block_2_fu_80 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln245_reg_918 <= and_ln245_fu_574_p2;
        icmp_ln215_reg_887 <= icmp_ln215_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bound_reg_869[40 : 4] <= bound_fu_326_p2[40 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln199_reg_883 <= icmp_ln199_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln205_reg_927 <= icmp_ln205_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (1'd1 == and_ln245_fu_574_p2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln252_reg_922 <= icmp_ln252_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln215_fu_407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_y_1_load_reg_891 <= k_y_1_fu_92;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (1'd1 == and_ln245_fu_574_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_298 <= current_line_2_fu_112;
    end
end

always @ (*) begin
    if ((icmp_ln196_fu_352_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln245_reg_918) & (icmp_ln199_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln199_reg_883 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln199_reg_883 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_50)) begin
        if (((trunc_ln321_fu_758_p1 == 1'd0) & (icmp_ln199_reg_883 == 1'd1))) begin
            inputBuf_0_V_address1 = zext_ln202_fu_752_p1;
        end else if ((1'b1 == ap_condition_330)) begin
            inputBuf_0_V_address1 = zext_ln248_fu_707_p1;
        end else begin
            inputBuf_0_V_address1 = 'bx;
        end
    end else begin
        inputBuf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_0_V_ce0 = 1'b1;
    end else begin
        inputBuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln321_1_fu_713_p1 == 1'd0) & (1'd1 == and_ln245_reg_918) & (icmp_ln199_reg_883 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln321_fu_758_p1 == 1'd0) & (icmp_ln199_reg_883 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_0_V_ce1 = 1'b1;
    end else begin
        inputBuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln321_1_fu_713_p1 == 1'd0) & (1'd1 == and_ln245_reg_918) & (icmp_ln199_reg_883 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln321_fu_758_p1 == 1'd0) & (icmp_ln199_reg_883 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_0_V_we1 = 1'b1;
    end else begin
        inputBuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_50)) begin
        if (((trunc_ln321_fu_758_p1 == 1'd1) & (icmp_ln199_reg_883 == 1'd1))) begin
            inputBuf_1_V_address1 = zext_ln202_fu_752_p1;
        end else if ((1'b1 == ap_condition_341)) begin
            inputBuf_1_V_address1 = zext_ln248_fu_707_p1;
        end else begin
            inputBuf_1_V_address1 = 'bx;
        end
    end else begin
        inputBuf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_1_V_ce0 = 1'b1;
    end else begin
        inputBuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln245_reg_918) & (trunc_ln321_1_fu_713_p1 == 1'd1) & (icmp_ln199_reg_883 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln321_fu_758_p1 == 1'd1) & (icmp_ln199_reg_883 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_1_V_ce1 = 1'b1;
    end else begin
        inputBuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln245_reg_918) & (trunc_ln321_1_fu_713_p1 == 1'd1) & (icmp_ln199_reg_883 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln321_fu_758_p1 == 1'd1) & (icmp_ln199_reg_883 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inputBuf_1_V_we1 = 1'b1;
    end else begin
        inputBuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_blk_n = numReps_empty_n;
    end else begin
        numReps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read = 1'b1;
    end else begin
        numReps_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln215_reg_887 == 1'd1) & (icmp_ln199_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op155_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln196_fu_352_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln196_fu_352_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln196_fu_357_p2 = (indvar_flatten_reg_209 + 41'd1);

assign add_ln197_fu_671_p2 = (i_0_i_reg_220 + 9'd1);

assign add_ln220_fu_431_p2 = (ofm_x_1_fu_88 + count_simd_1_fu_104);

assign add_ln255_fu_580_p2 = (trunc_ln197_fu_384_p1 + 5'd1);

assign and_ln245_fu_574_p2 = (icmp_ln245_fu_568_p2 & icmp_ln215_fu_407_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op155_write_state3 == 1'b1)) | ((icmp_ln199_reg_883 == 1'd1) & (in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op155_write_state3 == 1'b1)) | ((icmp_ln199_reg_883 == 1'd1) & (in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op155_write_state3 == 1'b1)) | ((icmp_ln199_reg_883 == 1'd1) & (in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((in_V_V_empty_n == 1'b0) & (ap_predicate_op158_read_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op155_write_state3 == 1'b1)) | ((icmp_ln199_reg_883 == 1'd1) & (in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_330 = ((trunc_ln321_1_fu_713_p1 == 1'd0) & (1'd1 == and_ln245_reg_918) & (icmp_ln199_reg_883 == 1'd0));
end

always @ (*) begin
    ap_condition_341 = ((1'd1 == and_ln245_reg_918) & (trunc_ln321_1_fu_713_p1 == 1'd1) & (icmp_ln199_reg_883 == 1'd0));
end

always @ (*) begin
    ap_condition_50 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_152 = (ap_predicate_op152_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_153 = (ap_predicate_op153_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_166 = (ap_predicate_op166_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_185 = (ap_predicate_op185_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_187 = (ap_predicate_op187_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_66 = (ap_predicate_op66_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_67 = (ap_predicate_op67_load_state2 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state2_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op152_load_state3 = ((icmp_ln215_reg_887 == 1'd1) & (icmp_ln199_reg_883 == 1'd0));
end

always @ (*) begin
    ap_predicate_op153_load_state3 = ((icmp_ln215_reg_887 == 1'd1) & (icmp_ln199_reg_883 == 1'd0));
end

always @ (*) begin
    ap_predicate_op155_write_state3 = ((icmp_ln215_reg_887 == 1'd1) & (icmp_ln199_reg_883 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_read_state3 = ((1'd1 == and_ln245_reg_918) & (icmp_ln199_reg_883 == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_store_state3 = ((trunc_ln321_1_fu_713_p1 == 1'd0) & (1'd1 == and_ln245_reg_918) & (icmp_ln199_reg_883 == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_store_state3 = ((1'd1 == and_ln245_reg_918) & (trunc_ln321_1_fu_713_p1 == 1'd1) & (icmp_ln199_reg_883 == 1'd0));
end

always @ (*) begin
    ap_predicate_op185_store_state3 = ((trunc_ln321_fu_758_p1 == 1'd0) & (icmp_ln199_reg_883 == 1'd1));
end

always @ (*) begin
    ap_predicate_op187_store_state3 = ((trunc_ln321_fu_758_p1 == 1'd1) & (icmp_ln199_reg_883 == 1'd1));
end

always @ (*) begin
    ap_predicate_op66_load_state2 = ((icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln215_fu_407_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op67_load_state2 = ((icmp_ln196_fu_352_p2 == 1'd0) & (icmp_ln199_fu_398_p2 == 1'd0) & (icmp_ln215_fu_407_p2 == 1'd1));
end

assign bound_fu_326_p2 = (p_shl_fu_310_p1 + p_shl34_fu_322_p1);

assign count_simd_fu_449_p2 = (32'd1 + count_simd_1_fu_104);

assign counter_internal_blo_3_fu_619_p2 = (counter_internal_blo_fu_116 + 32'd1);

assign current_block_write_6_fu_774_p3 = ((icmp_ln208_fu_768_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_fu_762_p2);

assign current_block_write_7_fu_720_p2 = (current_block_write_5_fu_108 + 32'd1);

assign current_block_write_8_fu_732_p3 = ((icmp_ln257_fu_726_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_7_fu_720_p2);

assign current_block_write_9_fu_740_p3 = ((icmp_ln252_reg_922[0:0] === 1'b1) ? current_block_write_8_fu_732_p3 : current_block_write_5_fu_108);

assign current_block_write_fu_762_p2 = (current_block_write_5_fu_108 + 32'd1);

assign current_line_in_bloc_fu_437_p2 = (add_ln220_fu_431_p2 + k_x_1_fu_100);

assign grp_fu_274_p2 = (current_line_2_fu_112 + 32'd1);

assign i_fu_677_p3 = ((icmp_ln197_fu_369_p2[0:0] === 1'b1) ? 9'd1 : add_ln197_fu_671_p2);

assign icmp_ln196_fu_352_p2 = ((indvar_flatten_reg_209 == bound_reg_869) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_369_p2 = ((i_0_i_reg_220 == 9'd272) ? 1'b1 : 1'b0);

assign icmp_ln199_fu_398_p2 = ((tmp_8_fu_388_p4 == 28'd0) ? 1'b1 : 1'b0);

assign icmp_ln205_fu_286_p2 = ((grp_fu_274_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_768_p2 = ((current_block_write_fu_762_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_407_p2 = ((counter_internal_blo_fu_116 < 32'd15) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_455_p2 = ((count_simd_1_fu_104 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_472_p2 = ((k_x_1_fu_100 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln230_fu_486_p2 = ((k_y_1_fu_92 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_506_p2 = ((ofm_x_fu_500_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln236_fu_526_p2 = ((ofm_y_fu_520_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln245_fu_568_p2 = ((tmp_9_fu_558_p4 == 28'd0) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_280_p2 = ((grp_fu_274_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_726_p2 = ((current_block_write_7_fu_720_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln264_fu_625_p2 = ((counter_internal_blo_3_fu_619_p2 == 32'd15) ? 1'b1 : 1'b0);

assign inp_fu_644_p2 = (inp_1_fu_96 + 32'd1);

assign inputBuf_0_V_address0 = zext_ln221_fu_443_p1;

assign inputBuf_1_V_address0 = zext_ln221_fu_443_p1;

assign k_x_fu_466_p2 = (k_x_1_fu_100 + 32'd1);

assign k_y_fu_425_p2 = (32'd1 + k_y_1_fu_92);

assign ofm_x_fu_500_p2 = (ofm_x_1_fu_88 + 32'd1);

assign ofm_y_fu_520_p2 = (ofm_y_1_i_fu_84 + 32'd1);

assign out_V_V_din = ((xor_ln221_fu_692_p2[0:0] === 1'b1) ? inputBuf_0_V_q0 : inputBuf_1_V_q0);

assign p_shl34_fu_322_p1 = tmp_1_fu_314_p3;

assign p_shl_fu_310_p1 = tmp_fu_302_p3;

assign read_block_3_fu_594_p3 = ((icmp_ln252_fu_280_p2[0:0] === 1'b1) ? add_ln255_fu_580_p2 : trunc_ln197_fu_384_p1);

assign read_block_fu_660_p2 = (select_ln197_fu_375_p3 + 32'd1);

assign select_ln197_fu_375_p3 = ((icmp_ln197_fu_369_p2[0:0] === 1'b1) ? 32'd0 : read_block_2_fu_80);

assign select_ln236_1_fu_540_p3 = ((icmp_ln236_fu_526_p2[0:0] === 1'b1) ? 32'd0 : ofm_y_fu_520_p2);

assign select_ln236_fu_532_p3 = ((icmp_ln236_fu_526_p2[0:0] === 1'b1) ? 32'd0 : inp_1_fu_96);

assign select_ln252_fu_586_p3 = ((icmp_ln252_fu_280_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_274_p2);

assign select_ln264_fu_631_p3 = ((icmp_ln264_fu_625_p2[0:0] === 1'b1) ? 32'd0 : counter_internal_blo_3_fu_619_p2);

assign tmp_1_fu_314_p3 = {{numReps_dout}, {4'd0}};

assign tmp_8_fu_388_p4 = {{inp_1_fu_96[31:4]}};

assign tmp_9_fu_558_p4 = {{select_ln197_fu_375_p3[31:4]}};

assign tmp_fu_302_p3 = {{numReps_dout}, {8'd0}};

assign trunc_ln197_fu_384_p1 = select_ln197_fu_375_p3[4:0];

assign trunc_ln216_1_fu_688_p1 = current_block_write_5_fu_108[0:0];

assign trunc_ln216_fu_685_p1 = k_y_1_load_reg_891[0:0];

assign trunc_ln321_1_fu_713_p1 = current_block_write_5_fu_108[0:0];

assign trunc_ln321_fu_758_p1 = current_block_write_5_fu_108[0:0];

assign xor_ln221_fu_692_p2 = (trunc_ln216_fu_685_p1 ^ trunc_ln216_1_fu_688_p1);

assign zext_ln202_fu_752_p1 = reg_298;

assign zext_ln221_fu_443_p1 = current_line_in_bloc_fu_437_p2;

assign zext_ln248_fu_707_p1 = reg_298;

assign zext_ln252_fu_602_p1 = read_block_3_fu_594_p3;

always @ (posedge ap_clk) begin
    bound_reg_869[3:0] <= 4'b0000;
end

endmodule //ConvolutionInputGene
